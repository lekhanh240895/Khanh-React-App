{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { db } from \"../../firebase/config\";\nimport { collection, onSnapshot, query, orderBy, where, setDoc, doc, getDoc } from \"firebase/firestore\";\nexport async function useFilestore(collections, condition) {\n  _s();\n\n  const [documents, setDocuments] = useState([]);\n  useEffect(() => {\n    let collectionRef = collection(db, collections);\n    const q = query(collectionRef, orderBy(\"createdAt\"), condition);\n    const unsubcribe = onSnapshot(q, snapshot => {\n      if (condition) {\n        if (!condition.compareValue || !condition.compareValue.length) {\n          return;\n        }\n\n        collectionRef = collectionRef.where(condition.fieldValue, condition.operator, condition.compareValue);\n      }\n\n      const data = snapshot.docs.map(doc => ({ ...doc.data(),\n        id: doc.id\n      }));\n      setDocuments(data);\n    });\n    return unsubcribe;\n  }, [collections, condition]);\n  return documents;\n}\n\n_s(useFilestore, \"yer53JIs/Enm5EWW99jBywEKfS0=\");","map":{"version":3,"sources":["D:/Rim/react-app/src/components/hooks/useFilestore.js"],"names":["useEffect","useState","db","collection","onSnapshot","query","orderBy","where","setDoc","doc","getDoc","useFilestore","collections","condition","documents","setDocuments","collectionRef","q","unsubcribe","snapshot","compareValue","length","fieldValue","operator","data","docs","map","id"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,EAAT,QAAmB,uBAAnB;AACA,SACEC,UADF,EAEEC,UAFF,EAGEC,KAHF,EAIEC,OAJF,EAKEC,KALF,EAMEC,MANF,EAOEC,GAPF,EAQEC,MARF,QASO,oBATP;AAWA,OAAO,eAAeC,YAAf,CAA4BC,WAA5B,EAAyCC,SAAzC,EAAoD;AAAA;;AAGzD,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,EAAD,CAA1C;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIgB,aAAa,GAAGb,UAAU,CAACD,EAAD,EAAKU,WAAL,CAA9B;AACA,UAAMK,CAAC,GAAGZ,KAAK,CAACW,aAAD,EAAgBV,OAAO,CAAC,WAAD,CAAvB,EAAsCO,SAAtC,CAAf;AACA,UAAMK,UAAU,GAAGd,UAAU,CAACa,CAAD,EAAKE,QAAD,IAAc;AAC7C,UAAIN,SAAJ,EAAe;AACb,YAAI,CAACA,SAAS,CAACO,YAAX,IAA2B,CAACP,SAAS,CAACO,YAAV,CAAuBC,MAAvD,EAA+D;AAC7D;AACD;;AACDL,QAAAA,aAAa,GAAGA,aAAa,CAACT,KAAd,CACdM,SAAS,CAACS,UADI,EAEdT,SAAS,CAACU,QAFI,EAGdV,SAAS,CAACO,YAHI,CAAhB;AAKD;;AAED,YAAMI,IAAI,GAAGL,QAAQ,CAACM,IAAT,CAAcC,GAAd,CAAmBjB,GAAD,KAAU,EACvC,GAAGA,GAAG,CAACe,IAAJ,EADoC;AAEvCG,QAAAA,EAAE,EAAElB,GAAG,CAACkB;AAF+B,OAAV,CAAlB,CAAb;AAIAZ,MAAAA,YAAY,CAACS,IAAD,CAAZ;AACD,KAjB4B,CAA7B;AAkBA,WAAON,UAAP;AACD,GAtBQ,EAsBN,CAACN,WAAD,EAAcC,SAAd,CAtBM,CAAT;AAwBA,SAAOC,SAAP;AACD;;GA7BqBH,Y","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { db } from \"../../firebase/config\";\r\nimport {\r\n  collection,\r\n  onSnapshot,\r\n  query,\r\n  orderBy,\r\n  where,\r\n  setDoc,\r\n  doc,\r\n  getDoc,\r\n} from \"firebase/firestore\";\r\n\r\nexport async function useFilestore(collections, condition) {\r\n  \r\n\r\n  const [documents, setDocuments] = useState([]);\r\n  useEffect(() => {\r\n    let collectionRef = collection(db, collections);\r\n    const q = query(collectionRef, orderBy(\"createdAt\"), condition);\r\n    const unsubcribe = onSnapshot(q, (snapshot) => {\r\n      if (condition) {\r\n        if (!condition.compareValue || !condition.compareValue.length) {\r\n          return;\r\n        }\r\n        collectionRef = collectionRef.where(\r\n          condition.fieldValue,\r\n          condition.operator,\r\n          condition.compareValue\r\n        );\r\n      }\r\n\r\n      const data = snapshot.docs.map((doc) => ({\r\n        ...doc.data(),\r\n        id: doc.id,\r\n      }));\r\n      setDocuments(data);\r\n    });\r\n    return unsubcribe;\r\n  }, [collections, condition]);\r\n\r\n  return documents;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}