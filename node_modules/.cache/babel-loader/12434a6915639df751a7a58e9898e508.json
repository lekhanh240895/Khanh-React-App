{"ast":null,"code":"var _jsxFileName = \"D:\\\\Rim\\\\react-app\\\\src\\\\components\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport axios from \"axios\";\nimport { useCallback, useMemo, useReducer, useEffect, useState } from \"react\";\nimport * as SC from \"./style\";\n/* import TodoApp from \"./TodoApp\"; */\n\nimport { SearchForm } from \"./SearchForm\";\nimport { List } from \"./List\";\nimport { LastSearches } from \"./LastSearches\";\nimport { usePersistentState } from \"./hooks/Custom Hook\";\nimport storiesReducer from \"./reducers\";\nimport Pagination from \"./Pagination\";\nimport { ReactComponent as Check } from \"@svgr/webpack?-svgo,+titleProp,+ref!../svg/checked-mark.svg\"; //https://hn.algolia.com/api Hacker News API\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE = \"https://hn.algolia.com/api/v1\";\nconst API_SEARCH = \"/search\";\nconst PARAM_SEARCH = \"query=\";\nconst PARAM_PAGE = \"page=\";\n/* const PARAM_PAGESIZE = \"hitsPerPage=\";\nlet pageSize = 10; */\n// &${PARAM_PAGESIZE}${pageSize}\n\nconst getUrl = (searchTerm, page) => `${API_BASE}${API_SEARCH}?${PARAM_SEARCH}${searchTerm}&${PARAM_PAGE}${page}`;\n\nconst extractSearchTerm = url => url.substring(url.lastIndexOf(\"?\") + 1, url.indexOf(\"&\")).replace(PARAM_SEARCH, \"\");\n\nlet PageSize = 10;\n\nconst App = () => {\n  _s();\n\n  const [stories, dispatchStories] = useReducer(storiesReducer, {\n    data: [],\n    isLoading: false,\n    isError: false,\n    page: 0\n  });\n  const [searchTerm, setSearchTerm] = usePersistentState(\"search\", \"React\");\n  const [urls, setUrls] = useState([getUrl(searchTerm, 0)]);\n\n  const getLastSearches = urls => urls.reduce((result, url, index) => {\n    const searchTerm = extractSearchTerm(url);\n\n    if (index === 0) {\n      return result.concat(searchTerm);\n    }\n\n    const previousSearchTerm = result[result.length - 1];\n\n    if (previousSearchTerm === searchTerm) {\n      return result;\n    } else {\n      return result.concat(searchTerm);\n    }\n  }, []).slice(-6).slice(0, -1);\n\n  const lastSearchs = getLastSearches(urls); //Fetch data from server\n\n  /* const handleFetchStories = useCallback(async () => {\n    dispatchStories({\n      type: \"STORIES_FETCH_INIT\",\n    });\n     try {\n      const lastUrl = urls[urls.length - 1];\n      const result = await axios.get(lastUrl);\n      dispatchStories({\n        type: \"STORIES_FETCH_SUCCESS\",\n        payload: {\n          list: result.data.hits,\n          page: result.data.page,\n        },\n      });\n    } catch {\n      dispatchStories({\n        type: \"STORIES_FETCH_FAILURE\",\n      });\n    }\n  }, [urls]);\n   useEffect(() => {\n    handleFetchStories();\n  }, [handleFetchStories]); */\n\n  const handleRemoveStory = useCallback(item => {\n    dispatchStories({\n      type: \"REMOVE_STORY\",\n      payload: item\n    });\n  }, []);\n  const handleSearchInput = useCallback(e => setSearchTerm(e.target.value), [setSearchTerm]);\n\n  const handleSearchSubmit = e => {\n    handleSearch(searchTerm, 0);\n    e.preventDefault();\n  };\n\n  const handleLastSearch = searchTerm => {\n    handleSearch(searchTerm, 0);\n    setSearchTerm(searchTerm);\n  };\n\n  const handleSearch = (searchTerm, page) => {\n    const url = getUrl(searchTerm, page);\n    setUrls(urls.concat(url));\n  };\n\n  const handleMore = () => {\n    const lastUrl = urls[urls.length - 1];\n    const searchTerm = extractSearchTerm(lastUrl);\n    handleSearch(searchTerm, stories.page + 1);\n  }; //useMemo get sum ... of stories\n\n\n  const getSumComments = stories => {\n    return stories.data.reduce((result, value) => result + value.num_comments, 0);\n  };\n\n  const sumComments = useMemo(() => getSumComments(stories), [stories]);\n  useEffect(() => {\n    axios.get(\"https://hn.algolia.com/api/v1/search?query=redux\").then(result => {\n      dispatchStories({\n        type: \"STORIES_FETCH_SUCCESS\",\n        payload: {\n          list: result.data.hits,\n          page: result.data.page\n        }\n      });\n    });\n  });\n  const [currentPage, setCurrentPage] = React.useState(1);\n  const currentStories = React.useMemo(() => {\n    const firstPageIndex = (currentPage - 1) * PageSize;\n    const lastPageIndex = firstPageIndex + PageSize;\n    return stories.data.slice(firstPageIndex, lastPageIndex);\n  }, [currentPage, stories.data]);\n  return /*#__PURE__*/_jsxDEV(SC.StyledContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: currentStories.map(item => /*#__PURE__*/_jsxDEV(SC.StyledItem, {\n        children: [/*#__PURE__*/_jsxDEV(SC.StyledColumn, {\n          style: {\n            textAlign: \"left\",\n            width: \"40%\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: item.url,\n            children: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(SC.StyledColumn, {\n          style: {\n            textTransform: \"capitalize\",\n            width: \"20%\"\n          },\n          children: item.author\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(SC.StyledColumn, {\n          width: \"20%\",\n          children: item.num_comments\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(SC.StyledColumn, {\n          width: \"10%\",\n          children: item.points\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(SC.StyledColumn, {\n          width: \"10%\",\n          children: /*#__PURE__*/_jsxDEV(SC.StyledButtonSmall, {\n            type: \"button\",\n            onClick: () => handleRemoveStory(item),\n            children: /*#__PURE__*/_jsxDEV(Check, {\n              height: \"10px\",\n              width: \"10px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      totalCount: stories.data.length,\n      currentPage: currentPage,\n      pageSize: PageSize,\n      onPageChange: page => setCurrentPage(page)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SC.StyledHeadlinePrimary, {\n      children: [\"My Hacker Stories with \", sumComments, \" comments\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchForm, {\n      searchTerm: searchTerm,\n      onSearchSubmit: handleSearchSubmit,\n      onSearchInput: handleSearchInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LastSearches, {\n      lastSearchs: lastSearchs,\n      onLastSearch: handleLastSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      list: stories.data,\n      onRemoveItem: handleRemoveStory,\n      onFetchMore: handleMore,\n      page: stories.page\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this), stories.isError && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Oops! Something went wrong...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 9\n    }, this), stories.isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Scroll down to see more stories\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"aJzytEq+XwSLlyDIKChmiO1jcME=\", false, function () {\n  return [usePersistentState];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/Rim/react-app/src/components/App.js"],"names":["React","axios","useCallback","useMemo","useReducer","useEffect","useState","SC","SearchForm","List","LastSearches","usePersistentState","storiesReducer","Pagination","API_BASE","API_SEARCH","PARAM_SEARCH","PARAM_PAGE","getUrl","searchTerm","page","extractSearchTerm","url","substring","lastIndexOf","indexOf","replace","PageSize","App","stories","dispatchStories","data","isLoading","isError","setSearchTerm","urls","setUrls","getLastSearches","reduce","result","index","concat","previousSearchTerm","length","slice","lastSearchs","handleRemoveStory","item","type","payload","handleSearchInput","e","target","value","handleSearchSubmit","handleSearch","preventDefault","handleLastSearch","handleMore","lastUrl","getSumComments","num_comments","sumComments","get","then","list","hits","currentPage","setCurrentPage","currentStories","firstPageIndex","lastPageIndex","map","textAlign","width","title","textTransform","author","points"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,OAAtB,EAA+BC,UAA/B,EAA2CC,SAA3C,EAAsDC,QAAtD,QAAsE,OAAtE;AACA,OAAO,KAAKC,EAAZ,MAAoB,SAApB;AACA;;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,kBAAT,QAAmC,qBAAnC;AACA,OAAOC,cAAP,MAA2B,YAA3B;AACA,OAAOC,UAAP,MAAuB,cAAvB;uGAGA;;;AAEA,MAAMC,QAAQ,GAAG,+BAAjB;AACA,MAAMC,UAAU,GAAG,SAAnB;AACA,MAAMC,YAAY,GAAG,QAArB;AACA,MAAMC,UAAU,GAAG,OAAnB;AACA;AACA;AACA;;AAEA,MAAMC,MAAM,GAAG,CAACC,UAAD,EAAaC,IAAb,KACZ,GAAEN,QAAS,GAAEC,UAAW,IAAGC,YAAa,GAAEG,UAAW,IAAGF,UAAW,GAAEG,IAAK,EAD7E;;AAEA,MAAMC,iBAAiB,GAAIC,GAAD,IACxBA,GAAG,CACAC,SADH,CACaD,GAAG,CAACE,WAAJ,CAAgB,GAAhB,IAAuB,CADpC,EACuCF,GAAG,CAACG,OAAJ,CAAY,GAAZ,CADvC,EAEGC,OAFH,CAEWV,YAFX,EAEyB,EAFzB,CADF;;AAKA,IAAIW,QAAQ,GAAG,EAAf;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,OAAD,EAAUC,eAAV,IAA6B1B,UAAU,CAACQ,cAAD,EAAiB;AAC5DmB,IAAAA,IAAI,EAAE,EADsD;AAE5DC,IAAAA,SAAS,EAAE,KAFiD;AAG5DC,IAAAA,OAAO,EAAE,KAHmD;AAI5Db,IAAAA,IAAI,EAAE;AAJsD,GAAjB,CAA7C;AAOA,QAAM,CAACD,UAAD,EAAae,aAAb,IAA8BvB,kBAAkB,CAAC,QAAD,EAAW,OAAX,CAAtD;AACA,QAAM,CAACwB,IAAD,EAAOC,OAAP,IAAkB9B,QAAQ,CAAC,CAACY,MAAM,CAACC,UAAD,EAAa,CAAb,CAAP,CAAD,CAAhC;;AAEA,QAAMkB,eAAe,GAAIF,IAAD,IACtBA,IAAI,CACDG,MADH,CACU,CAACC,MAAD,EAASjB,GAAT,EAAckB,KAAd,KAAwB;AAC9B,UAAMrB,UAAU,GAAGE,iBAAiB,CAACC,GAAD,CAApC;;AACA,QAAIkB,KAAK,KAAK,CAAd,EAAiB;AACf,aAAOD,MAAM,CAACE,MAAP,CAActB,UAAd,CAAP;AACD;;AACD,UAAMuB,kBAAkB,GAAGH,MAAM,CAACA,MAAM,CAACI,MAAP,GAAgB,CAAjB,CAAjC;;AACA,QAAID,kBAAkB,KAAKvB,UAA3B,EAAuC;AACrC,aAAOoB,MAAP;AACD,KAFD,MAEO;AACL,aAAOA,MAAM,CAACE,MAAP,CAActB,UAAd,CAAP;AACD;AACF,GAZH,EAYK,EAZL,EAaGyB,KAbH,CAaS,CAAC,CAbV,EAcGA,KAdH,CAcS,CAdT,EAcY,CAAC,CAdb,CADF;;AAiBA,QAAMC,WAAW,GAAGR,eAAe,CAACF,IAAD,CAAnC,CA5BgB,CA8BhB;;AACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIE,QAAMW,iBAAiB,GAAG5C,WAAW,CAAE6C,IAAD,IAAU;AAC9CjB,IAAAA,eAAe,CAAC;AACdkB,MAAAA,IAAI,EAAE,cADQ;AAEdC,MAAAA,OAAO,EAAEF;AAFK,KAAD,CAAf;AAID,GALoC,EAKlC,EALkC,CAArC;AAOA,QAAMG,iBAAiB,GAAGhD,WAAW,CAClCiD,CAAD,IAAOjB,aAAa,CAACiB,CAAC,CAACC,MAAF,CAASC,KAAV,CADe,EAEnC,CAACnB,aAAD,CAFmC,CAArC;;AAKA,QAAMoB,kBAAkB,GAAIH,CAAD,IAAO;AAChCI,IAAAA,YAAY,CAACpC,UAAD,EAAa,CAAb,CAAZ;AACAgC,IAAAA,CAAC,CAACK,cAAF;AACD,GAHD;;AAKA,QAAMC,gBAAgB,GAAItC,UAAD,IAAgB;AACvCoC,IAAAA,YAAY,CAACpC,UAAD,EAAa,CAAb,CAAZ;AACAe,IAAAA,aAAa,CAACf,UAAD,CAAb;AACD,GAHD;;AAKA,QAAMoC,YAAY,GAAG,CAACpC,UAAD,EAAaC,IAAb,KAAsB;AACzC,UAAME,GAAG,GAAGJ,MAAM,CAACC,UAAD,EAAaC,IAAb,CAAlB;AACAgB,IAAAA,OAAO,CAACD,IAAI,CAACM,MAAL,CAAYnB,GAAZ,CAAD,CAAP;AACD,GAHD;;AAKA,QAAMoC,UAAU,GAAG,MAAM;AACvB,UAAMC,OAAO,GAAGxB,IAAI,CAACA,IAAI,CAACQ,MAAL,GAAc,CAAf,CAApB;AACA,UAAMxB,UAAU,GAAGE,iBAAiB,CAACsC,OAAD,CAApC;AACAJ,IAAAA,YAAY,CAACpC,UAAD,EAAaU,OAAO,CAACT,IAAR,GAAe,CAA5B,CAAZ;AACD,GAJD,CApFgB,CA0FhB;;;AACA,QAAMwC,cAAc,GAAI/B,OAAD,IAAa;AAClC,WAAOA,OAAO,CAACE,IAAR,CAAaO,MAAb,CACL,CAACC,MAAD,EAASc,KAAT,KAAmBd,MAAM,GAAGc,KAAK,CAACQ,YAD7B,EAEL,CAFK,CAAP;AAID,GALD;;AAOA,QAAMC,WAAW,GAAG3D,OAAO,CAAC,MAAMyD,cAAc,CAAC/B,OAAD,CAArB,EAAgC,CAACA,OAAD,CAAhC,CAA3B;AAEAxB,EAAAA,SAAS,CAAC,MAAM;AACdJ,IAAAA,KAAK,CACF8D,GADH,CACO,kDADP,EAEGC,IAFH,CAESzB,MAAD,IAAY;AAChBT,MAAAA,eAAe,CAAC;AACdkB,QAAAA,IAAI,EAAE,uBADQ;AAEdC,QAAAA,OAAO,EAAE;AACPgB,UAAAA,IAAI,EAAE1B,MAAM,CAACR,IAAP,CAAYmC,IADX;AAEP9C,UAAAA,IAAI,EAAEmB,MAAM,CAACR,IAAP,CAAYX;AAFX;AAFK,OAAD,CAAf;AAOD,KAVH;AAWD,GAZQ,CAAT;AAcA,QAAM,CAAC+C,WAAD,EAAcC,cAAd,IAAgCpE,KAAK,CAACM,QAAN,CAAe,CAAf,CAAtC;AAEA,QAAM+D,cAAc,GAAGrE,KAAK,CAACG,OAAN,CAAc,MAAM;AACzC,UAAMmE,cAAc,GAAG,CAACH,WAAW,GAAG,CAAf,IAAoBxC,QAA3C;AACA,UAAM4C,aAAa,GAAGD,cAAc,GAAG3C,QAAvC;AACA,WAAOE,OAAO,CAACE,IAAR,CAAaa,KAAb,CAAmB0B,cAAnB,EAAmCC,aAAnC,CAAP;AACD,GAJsB,EAIpB,CAACJ,WAAD,EAActC,OAAO,CAACE,IAAtB,CAJoB,CAAvB;AAMA,sBACE,QAAC,EAAD,CAAI,eAAJ;AAAA,4BACE;AAAA,gBACGsC,cAAc,CAACG,GAAf,CAAoBzB,IAAD,iBAClB,QAAC,EAAD,CAAI,UAAJ;AAAA,gCACE,QAAC,EAAD,CAAI,YAAJ;AAAiB,UAAA,KAAK,EAAE;AAAE0B,YAAAA,SAAS,EAAE,MAAb;AAAqBC,YAAAA,KAAK,EAAE;AAA5B,WAAxB;AAAA,iCACE;AAAG,YAAA,IAAI,EAAE3B,IAAI,CAACzB,GAAd;AAAA,sBAAoByB,IAAI,CAAC4B;AAAzB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,EAAD,CAAI,YAAJ;AACE,UAAA,KAAK,EAAE;AAAEC,YAAAA,aAAa,EAAE,YAAjB;AAA+BF,YAAAA,KAAK,EAAE;AAAtC,WADT;AAAA,oBAGG3B,IAAI,CAAC8B;AAHR;AAAA;AAAA;AAAA;AAAA,gBAJF,eASE,QAAC,EAAD,CAAI,YAAJ;AAAiB,UAAA,KAAK,EAAC,KAAvB;AAAA,oBAA8B9B,IAAI,CAACc;AAAnC;AAAA;AAAA;AAAA;AAAA,gBATF,eAUE,QAAC,EAAD,CAAI,YAAJ;AAAiB,UAAA,KAAK,EAAC,KAAvB;AAAA,oBAA8Bd,IAAI,CAAC+B;AAAnC;AAAA;AAAA;AAAA;AAAA,gBAVF,eAYE,QAAC,EAAD,CAAI,YAAJ;AAAiB,UAAA,KAAK,EAAC,KAAvB;AAAA,iCACE,QAAC,EAAD,CAAI,iBAAJ;AACE,YAAA,IAAI,EAAC,QADP;AAEE,YAAA,OAAO,EAAE,MAAMhC,iBAAiB,CAACC,IAAD,CAFlC;AAAA,mCAIE,QAAC,KAAD;AAAO,cAAA,MAAM,EAAC,MAAd;AAAqB,cAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAZF;AAAA;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YADF,eA2BE,QAAC,UAAD;AACE,MAAA,UAAU,EAAElB,OAAO,CAACE,IAAR,CAAaY,MAD3B;AAEE,MAAA,WAAW,EAAEwB,WAFf;AAGE,MAAA,QAAQ,EAAExC,QAHZ;AAIE,MAAA,YAAY,EAAGP,IAAD,IAAUgD,cAAc,CAAChD,IAAD;AAJxC;AAAA;AAAA;AAAA;AAAA,YA3BF,eAmCE,QAAC,EAAD,CAAI,qBAAJ;AAAA,4CAC0B0C,WAD1B;AAAA;AAAA;AAAA;AAAA;AAAA,YAnCF,eAuCE,QAAC,UAAD;AACE,MAAA,UAAU,EAAE3C,UADd;AAEE,MAAA,cAAc,EAAEmC,kBAFlB;AAGE,MAAA,aAAa,EAAEJ;AAHjB;AAAA;AAAA;AAAA;AAAA,YAvCF,eA6CE,QAAC,YAAD;AAAc,MAAA,WAAW,EAAEL,WAA3B;AAAwC,MAAA,YAAY,EAAEY;AAAtD;AAAA;AAAA;AAAA;AAAA,YA7CF,eA+CE,QAAC,IAAD;AACE,MAAA,IAAI,EAAE5B,OAAO,CAACE,IADhB;AAEE,MAAA,YAAY,EAAEe,iBAFhB;AAGE,MAAA,WAAW,EAAEY,UAHf;AAIE,MAAA,IAAI,EAAE7B,OAAO,CAACT;AAJhB;AAAA;AAAA;AAAA;AAAA,YA/CF,EAsDGS,OAAO,CAACI,OAAR,iBACC;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAvDJ,EA4DGJ,OAAO,CAACG,SAAR,gBACC;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADD,gBAKC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAjEJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsED,CAhMD;;GAAMJ,G;UAQgCjB,kB;;;KARhCiB,G;AAkMN,eAAeA,GAAf","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport { useCallback, useMemo, useReducer, useEffect, useState } from \"react\";\nimport * as SC from \"./style\";\n/* import TodoApp from \"./TodoApp\"; */\nimport { SearchForm } from \"./SearchForm\";\nimport { List } from \"./List\";\nimport { LastSearches } from \"./LastSearches\";\nimport { usePersistentState } from \"./hooks/Custom Hook\";\nimport storiesReducer from \"./reducers\";\nimport Pagination from \"./Pagination\";\nimport { ReactComponent as Check } from \"../svg/checked-mark.svg\";\n\n//https://hn.algolia.com/api Hacker News API\n\nconst API_BASE = \"https://hn.algolia.com/api/v1\";\nconst API_SEARCH = \"/search\";\nconst PARAM_SEARCH = \"query=\";\nconst PARAM_PAGE = \"page=\";\n/* const PARAM_PAGESIZE = \"hitsPerPage=\";\nlet pageSize = 10; */\n// &${PARAM_PAGESIZE}${pageSize}\n\nconst getUrl = (searchTerm, page) =>\n  `${API_BASE}${API_SEARCH}?${PARAM_SEARCH}${searchTerm}&${PARAM_PAGE}${page}`;\nconst extractSearchTerm = (url) =>\n  url\n    .substring(url.lastIndexOf(\"?\") + 1, url.indexOf(\"&\"))\n    .replace(PARAM_SEARCH, \"\");\n\nlet PageSize = 10;\n\nconst App = () => {\n  const [stories, dispatchStories] = useReducer(storiesReducer, {\n    data: [],\n    isLoading: false,\n    isError: false,\n    page: 0,\n  });\n\n  const [searchTerm, setSearchTerm] = usePersistentState(\"search\", \"React\");\n  const [urls, setUrls] = useState([getUrl(searchTerm, 0)]);\n  \n  const getLastSearches = (urls) =>\n    urls\n      .reduce((result, url, index) => {\n        const searchTerm = extractSearchTerm(url);\n        if (index === 0) {\n          return result.concat(searchTerm);\n        }\n        const previousSearchTerm = result[result.length - 1];\n        if (previousSearchTerm === searchTerm) {\n          return result;\n        } else {\n          return result.concat(searchTerm);\n        }\n      }, [])\n      .slice(-6)\n      .slice(0, -1);\n\n  const lastSearchs = getLastSearches(urls);\n\n  //Fetch data from server\n  /* const handleFetchStories = useCallback(async () => {\n    dispatchStories({\n      type: \"STORIES_FETCH_INIT\",\n    });\n\n    try {\n      const lastUrl = urls[urls.length - 1];\n      const result = await axios.get(lastUrl);\n      dispatchStories({\n        type: \"STORIES_FETCH_SUCCESS\",\n        payload: {\n          list: result.data.hits,\n          page: result.data.page,\n        },\n      });\n    } catch {\n      dispatchStories({\n        type: \"STORIES_FETCH_FAILURE\",\n      });\n    }\n  }, [urls]);\n\n  useEffect(() => {\n    handleFetchStories();\n  }, [handleFetchStories]); */\n\n  const handleRemoveStory = useCallback((item) => {\n    dispatchStories({\n      type: \"REMOVE_STORY\",\n      payload: item,\n    });\n  }, []);\n\n  const handleSearchInput = useCallback(\n    (e) => setSearchTerm(e.target.value),\n    [setSearchTerm]\n  );\n\n  const handleSearchSubmit = (e) => {\n    handleSearch(searchTerm, 0);\n    e.preventDefault();\n  };\n\n  const handleLastSearch = (searchTerm) => {\n    handleSearch(searchTerm, 0);\n    setSearchTerm(searchTerm);\n  };\n\n  const handleSearch = (searchTerm, page) => {\n    const url = getUrl(searchTerm, page);\n    setUrls(urls.concat(url));\n  };\n\n  const handleMore = () => {\n    const lastUrl = urls[urls.length - 1];\n    const searchTerm = extractSearchTerm(lastUrl);\n    handleSearch(searchTerm, stories.page + 1);\n  };\n\n  //useMemo get sum ... of stories\n  const getSumComments = (stories) => {\n    return stories.data.reduce(\n      (result, value) => result + value.num_comments,\n      0\n    );\n  };\n\n  const sumComments = useMemo(() => getSumComments(stories), [stories]);\n\n  useEffect(() => {\n    axios\n      .get(\"https://hn.algolia.com/api/v1/search?query=redux\")\n      .then((result) => {\n        dispatchStories({\n          type: \"STORIES_FETCH_SUCCESS\",\n          payload: {\n            list: result.data.hits,\n            page: result.data.page,\n          },\n        });\n      });\n  });\n\n  const [currentPage, setCurrentPage] = React.useState(1);\n\n  const currentStories = React.useMemo(() => {\n    const firstPageIndex = (currentPage - 1) * PageSize;\n    const lastPageIndex = firstPageIndex + PageSize;\n    return stories.data.slice(firstPageIndex, lastPageIndex);\n  }, [currentPage, stories.data]);\n\n  return (\n    <SC.StyledContainer>\n      <div>\n        {currentStories.map((item) => (\n          <SC.StyledItem>\n            <SC.StyledColumn style={{ textAlign: \"left\", width: \"40%\" }}>\n              <a href={item.url}>{item.title}</a>\n            </SC.StyledColumn>\n            <SC.StyledColumn\n              style={{ textTransform: \"capitalize\", width: \"20%\" }}\n            >\n              {item.author}\n            </SC.StyledColumn>\n            <SC.StyledColumn width=\"20%\">{item.num_comments}</SC.StyledColumn>\n            <SC.StyledColumn width=\"10%\">{item.points}</SC.StyledColumn>\n\n            <SC.StyledColumn width=\"10%\">\n              <SC.StyledButtonSmall\n                type=\"button\"\n                onClick={() => handleRemoveStory(item)}\n              >\n                <Check height=\"10px\" width=\"10px\" />\n              </SC.StyledButtonSmall>\n            </SC.StyledColumn>\n          </SC.StyledItem>\n        ))}\n      </div>\n\n      <Pagination\n        totalCount={stories.data.length}\n        currentPage={currentPage}\n        pageSize={PageSize}\n        onPageChange={(page) => setCurrentPage(page)}\n      />\n      {/*  <TodoApp /> */}\n\n      <SC.StyledHeadlinePrimary>\n        My Hacker Stories with {sumComments} comments\n      </SC.StyledHeadlinePrimary>\n\n      <SearchForm\n        searchTerm={searchTerm}\n        onSearchSubmit={handleSearchSubmit}\n        onSearchInput={handleSearchInput}\n      />\n\n      <LastSearches lastSearchs={lastSearchs} onLastSearch={handleLastSearch} />\n\n      <List\n        list={stories.data}\n        onRemoveItem={handleRemoveStory}\n        onFetchMore={handleMore}\n        page={stories.page}\n      />\n\n      {stories.isError && (\n        <p>\n          <strong>Oops! Something went wrong...</strong>\n        </p>\n      )}\n\n      {stories.isLoading ? (\n        <p>\n          <strong>Loading...</strong>\n        </p>\n      ) : (\n        <p>Scroll down to see more stories</p>\n      )}\n    </SC.StyledContainer>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}