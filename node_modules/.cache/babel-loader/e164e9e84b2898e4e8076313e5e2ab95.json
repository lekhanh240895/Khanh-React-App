{"ast":null,"code":"var _jsxFileName = \"D:\\\\Rim\\\\react-app\\\\src\\\\components\\\\Homepage\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { ProgressBar, Alert, Button, Row, Col, Container, Image, Modal, Card } from \"react-bootstrap\";\nimport { storage } from \"../../firebase/config\";\nimport { ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { v1 as uuidv4 } from \"uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Homepage() {\n  _s();\n\n  const [images, setImages] = useState([]);\n  const [urls, setUrls] = useState([]);\n  const [progress, setProgress] = useState();\n  const [error, setError] = useState();\n  const {\n    user\n  } = useAuth();\n  const [show, setShow] = useState(false);\n\n  const handleShow = () => setShow(true);\n\n  const handleClose = () => setShow(false);\n\n  const handleInputChange = e => {\n    for (let i = 0; i < e.target.files.length; i++) {\n      const newImage = e.target.files[i];\n      newImage[\"id\"] = uuidv4();\n      setImages(prevState => [...prevState, newImage]);\n    }\n  };\n\n  const handleUploadImages = path => {\n    const promises = [];\n    images.forEach(image => {\n      const imagesRef = ref(storage, user.email + `/${path}/` + image.name);\n      const metadata = {\n        contentType: \"image/jpeg\"\n      };\n      setProgress(true);\n      const uploadTask = uploadBytesResumable(imagesRef, image, metadata);\n      promises.push(uploadTask);\n      uploadTask.on(\"state_changed\", snapshot => {\n        const progress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n        setProgress(progress);\n      }, error => setError(error.message), async () => {\n        const url = await getDownloadURL(imagesRef);\n        setUrls(prevState => [...prevState, url]);\n      });\n    });\n    Promise.all(promises).then(() => {\n      setProgress(false);\n      urls.splice(0, urls.length);\n      images.splice(0, images.length);\n    }).catch(error => setError(error.message)).finally(() => {});\n  };\n\n  console.log({\n    images,\n    urls\n  });\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [error && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Homepage\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Body, {\n        children: \"Alo Alo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Add Images\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: [\"fas\", \"images\"],\n            onClick: handleShow\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          multiple: true,\n          onChange: e => handleInputChange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), progress && /*#__PURE__*/_jsxDEV(ProgressBar, {\n          now: progress,\n          max: \"100\",\n          label: `Loading...${progress}%`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: urls.map((url, index) => /*#__PURE__*/_jsxDEV(Col, {\n            xs: 6,\n            style: {},\n            children: /*#__PURE__*/_jsxDEV(Image, {\n              fluid: true,\n              src: url,\n              alt: url,\n              style: {\n                height: \"50vw\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this)\n          }, url + index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleUploadImages(\"Images\"),\n          children: \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Homepage, \"eP9vy2FohaNePueoB4UnvIXGuOg=\", false, function () {\n  return [useAuth];\n});\n\n_c = Homepage;\n\nvar _c;\n\n$RefreshReg$(_c, \"Homepage\");","map":{"version":3,"sources":["D:/Rim/react-app/src/components/Homepage/index.js"],"names":["React","useState","ProgressBar","Alert","Button","Row","Col","Container","Image","Modal","Card","storage","ref","uploadBytesResumable","getDownloadURL","useAuth","FontAwesomeIcon","v1","uuidv4","Homepage","images","setImages","urls","setUrls","progress","setProgress","error","setError","user","show","setShow","handleShow","handleClose","handleInputChange","e","i","target","files","length","newImage","prevState","handleUploadImages","path","promises","forEach","image","imagesRef","email","name","metadata","contentType","uploadTask","push","on","snapshot","bytesTransferred","totalBytes","message","url","Promise","all","then","splice","catch","finally","console","log","map","index","height"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  ProgressBar,\r\n  Alert,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Container,\r\n  Image,\r\n  Modal,\r\n  Card,\r\n} from \"react-bootstrap\";\r\nimport { storage } from \"../../firebase/config\";\r\nimport { ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { v1 as uuidv4 } from \"uuid\";\r\n\r\nexport default function Homepage() {\r\n  const [images, setImages] = useState([]);\r\n  const [urls, setUrls] = useState([]);\r\n  const [progress, setProgress] = useState();\r\n  const [error, setError] = useState();\r\n  const { user } = useAuth();\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleShow = () => setShow(true);\r\n  const handleClose = () => setShow(false);\r\n\r\n  const handleInputChange = (e) => {\r\n    for (let i = 0; i < e.target.files.length; i++) {\r\n      const newImage = e.target.files[i];\r\n      newImage[\"id\"] = uuidv4();\r\n      setImages((prevState) => [...prevState, newImage]);\r\n    }\r\n  };\r\n\r\n  const handleUploadImages = (path) => {\r\n    const promises = [];\r\n    images.forEach((image) => {\r\n      const imagesRef = ref(storage, user.email + `/${path}/` + image.name);\r\n      const metadata = {\r\n        contentType: \"image/jpeg\",\r\n      };\r\n      setProgress(true);\r\n      const uploadTask = uploadBytesResumable(imagesRef, image, metadata);\r\n      promises.push(uploadTask);\r\n\r\n      uploadTask.on(\r\n        \"state_changed\",\r\n        (snapshot) => {\r\n          const progress =\r\n            (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n          setProgress(progress);\r\n        },\r\n        (error) => setError(error.message),\r\n        async () => {\r\n          const url = await getDownloadURL(imagesRef);\r\n          setUrls((prevState) => [...prevState, url]);\r\n        }\r\n      );\r\n    });\r\n\r\n    Promise.all(promises)\r\n      .then(() => {\r\n        setProgress(false);\r\n        urls.splice(0, urls.length);\r\n        images.splice(0, images.length);\r\n      })\r\n      .catch((error) => setError(error.message))\r\n      .finally(() => {});\r\n  };\r\n\r\n  console.log({ images, urls });\r\n\r\n  return (\r\n    <Container>\r\n      {error && <Alert variant=\"danger\">{error}</Alert>}\r\n\r\n      <h1>Homepage</h1>\r\n\r\n      <Card>\r\n        <Card.Body>Alo Alo</Card.Body>\r\n        <Card.Footer>\r\n          <div>\r\n            <span>Add Images</span>\r\n            <FontAwesomeIcon icon={[\"fas\", \"images\"]} onClick={handleShow} />\r\n          </div>\r\n        </Card.Footer>\r\n      </Card>\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Body>\r\n          <input type=\"file\" multiple onChange={(e) => handleInputChange(e)} />\r\n\r\n          {progress && (\r\n            <ProgressBar\r\n              now={progress}\r\n              max=\"100\"\r\n              label={`Loading...${progress}%`}\r\n            />\r\n          )}\r\n\r\n          <Row>\r\n            {urls.map((url, index) => (\r\n              <Col xs={6} key={url + index} style={{}}>\r\n                <Image fluid src={url} alt={url} style={{ height: \"50vw\" }} />\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n        </Modal.Body>\r\n\r\n        <Modal.Footer>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n          <Button onClick={handleUploadImages(\"Images\")}>Upload</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </Container>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}