{"ast":null,"code":"var _jsxFileName = \"D:\\\\Rim\\\\react-app\\\\src\\\\contexts\\\\AppContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext, useEffect } from \"react\";\nimport useFirestore from \"../components/hooks/useFirestore\"; // import { useAuth } from \"./AuthContext\";\n\nimport { db } from \"./config\";\nimport { addDoc, collection, serverTimestamp } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AppContext = /*#__PURE__*/React.createContext();\nexport const useAppContext = () => {\n  _s();\n\n  return useContext(AppContext);\n};\n\n_s(useAppContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport const AppProvider = ({\n  children\n}) => {\n  _s2();\n\n  // const { user } = useAuth();\n  // const condition = React.useMemo(() => {\n  //   return {\n  //     fieldName: \"\",\n  //     operator: \"\",\n  //     compareValue: \"\",\n  //   };\n  // }, []);\n  const addDocument = (FirestoreCollection, data) => {\n    addDoc(collection(db, FirestoreCollection), { ...data,\n      createdAt: serverTimestamp()\n    });\n  };\n\n  const users = useFirestore(\"users\", \"\");\n  useEffect(() => {\n    console.log({\n      users\n    });\n  }, [users]);\n  const value = {\n    users,\n    addDocument\n  };\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 10\n  }, this);\n};\n\n_s2(AppProvider, \"9I3/SjPv/eBGXqI3lEVjnvYSES4=\", false, function () {\n  return [useFirestore];\n});\n\n_c = AppProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"sources":["D:/Rim/react-app/src/contexts/AppContext.js"],"names":["React","useContext","useEffect","useFirestore","db","addDoc","collection","serverTimestamp","AppContext","createContext","useAppContext","AppProvider","children","addDocument","FirestoreCollection","data","createdAt","users","console","log","value"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,OAAOC,YAAP,MAAyB,kCAAzB,C,CACA;;AACA,SAASC,EAAT,QAAmB,UAAnB;AACA,SAASC,MAAT,EAAiBC,UAAjB,EAA6BC,eAA7B,QAAoD,oBAApD;;AAEA,OAAO,MAAMC,UAAU,gBAAGR,KAAK,CAACS,aAAN,EAAnB;AAEP,OAAO,MAAMC,aAAa,GAAG;AAAA;;AAAA,SAAMT,UAAU,CAACO,UAAD,CAAhB;AAAA,CAAtB;;GAAME,a;;AAEb,OAAO,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,QAAMC,WAAW,GAAG,CAACC,mBAAD,EAAsBC,IAAtB,KAA+B;AACjDV,IAAAA,MAAM,CAACC,UAAU,CAACF,EAAD,EAAKU,mBAAL,CAAX,EAAsC,EAC1C,GAAGC,IADuC;AAE1CC,MAAAA,SAAS,EAAET,eAAe;AAFgB,KAAtC,CAAN;AAID,GALD;;AAOA,QAAMU,KAAK,GAAGd,YAAY,CAAC,OAAD,EAAU,EAAV,CAA1B;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,OAAO,CAACC,GAAR,CAAY;AAAEF,MAAAA;AAAF,KAAZ;AACD,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;AAGA,QAAMG,KAAK,GAAG;AAAEH,IAAAA,KAAF;AAASJ,IAAAA;AAAT,GAAd;AACA,sBAAO,QAAC,UAAD,CAAY,QAAZ;AAAqB,IAAA,KAAK,EAAEO,KAA5B;AAAA,cAAoCR;AAApC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAvBM;;IAAMD,W;UAiBGR,Y;;;KAjBHQ,W","sourcesContent":["import React, { useContext, useEffect } from \"react\";\r\nimport useFirestore from \"../components/hooks/useFirestore\";\r\n// import { useAuth } from \"./AuthContext\";\r\nimport { db } from \"./config\";\r\nimport { addDoc, collection, serverTimestamp } from \"firebase/firestore\";\r\n\r\nexport const AppContext = React.createContext();\r\n\r\nexport const useAppContext = () => useContext(AppContext);\r\n\r\nexport const AppProvider = ({ children }) => {\r\n  // const { user } = useAuth();\r\n  // const condition = React.useMemo(() => {\r\n  //   return {\r\n  //     fieldName: \"\",\r\n  //     operator: \"\",\r\n  //     compareValue: \"\",\r\n  //   };\r\n  // }, []);\r\n  \r\n  const addDocument = (FirestoreCollection, data) => {\r\n    addDoc(collection(db, FirestoreCollection), {\r\n      ...data,\r\n      createdAt: serverTimestamp(),\r\n    });\r\n  };\r\n\r\n  const users = useFirestore(\"users\", \"\");\r\n  useEffect(() => {\r\n    console.log({ users });\r\n  }, [users]);\r\n  const value = { users, addDocument };\r\n  return <AppContext.Provider value={value}>{children}</AppContext.Provider>;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}