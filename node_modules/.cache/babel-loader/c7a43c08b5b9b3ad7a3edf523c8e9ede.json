{"ast":null,"code":"export const todoReducer = (state, action) => {\n  switch (action.type) {\n    case \"TODOS_FETCH_INIT\":\n      return { ...state,\n        isLoading: true,\n        isError: false\n      };\n\n    case \"TODOS_FETCH_SUCCESS\":\n      return { ...state,\n        isLoading: false,\n        isError: false,\n        data: action.payload.page === 1 ? action.payload.list : state.data.concat(action.payload.list)\n      };\n\n    case \"TODOS_FETCH_FAILURE\":\n      return { ...state,\n        isLoading: false,\n        isError: true\n      };\n\n    case \"DO_TODO\":\n      return { ...state,\n        data: state.data.map(todo => {\n          if (todo.id === action.id) {\n            return { ...todo,\n              completed: true\n            };\n          } else {\n            return todo;\n          }\n        })\n      };\n\n    case \"UNDO_TODO\":\n      return { ...state,\n        data: state.data.map(todo => {\n          if (todo.id === action.id) {\n            return { ...todo,\n              completed: false\n            };\n          } else {\n            return todo;\n          }\n        })\n      };\n\n    case \"REMOVE_TODO\":\n      return { ...state,\n        data: state.data.filter(todo => todo.id !== action.payload.id)\n      };\n\n    case \"ADD_TODO\":\n      return { ...state,\n        data: state.data.concat({\n          id: Math.random(),\n          title: action.payload,\n          completed: false\n        })\n      };\n\n    case \"MARK_ALL_TODOS\":\n      return { ...state,\n        data: state.data.map(todo => {\n          return { ...todo,\n            completed: true\n          };\n        })\n      };\n\n    case \"UNMARK_ALL_TODOS\":\n      return { ...state,\n        data: state.data.map(todo => {\n          return { ...todo,\n            completed: false\n          };\n        })\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["D:/Rim/react-app/src/components/TodoApp/reducer.js"],"names":["todoReducer","state","action","type","isLoading","isError","data","payload","page","list","concat","map","todo","id","completed","filter","Math","random","title"],"mappings":"AAAA,OAAO,MAAMA,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC5C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,kBAAL;AACE,aAAO,EACL,GAAGF,KADE;AAELG,QAAAA,SAAS,EAAE,IAFN;AAGLC,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAK,qBAAL;AACE,aAAO,EACL,GAAGJ,KADE;AAELG,QAAAA,SAAS,EAAE,KAFN;AAGLC,QAAAA,OAAO,EAAE,KAHJ;AAILC,QAAAA,IAAI,EACFJ,MAAM,CAACK,OAAP,CAAeC,IAAf,KAAwB,CAAxB,GACIN,MAAM,CAACK,OAAP,CAAeE,IADnB,GAEIR,KAAK,CAACK,IAAN,CAAWI,MAAX,CAAkBR,MAAM,CAACK,OAAP,CAAeE,IAAjC;AAPD,OAAP;;AASF,SAAK,qBAAL;AACE,aAAO,EACL,GAAGR,KADE;AAELG,QAAAA,SAAS,EAAE,KAFN;AAGLC,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAK,SAAL;AACE,aAAO,EACL,GAAGJ,KADE;AAELK,QAAAA,IAAI,EAAEL,KAAK,CAACK,IAAN,CAAWK,GAAX,CAAgBC,IAAD,IAAU;AAC7B,cAAIA,IAAI,CAACC,EAAL,KAAYX,MAAM,CAACW,EAAvB,EAA2B;AACzB,mBAAO,EAAE,GAAGD,IAAL;AAAWE,cAAAA,SAAS,EAAE;AAAtB,aAAP;AACD,WAFD,MAEO;AACL,mBAAOF,IAAP;AACD;AACF,SANK;AAFD,OAAP;;AAUF,SAAK,WAAL;AACE,aAAO,EACL,GAAGX,KADE;AAELK,QAAAA,IAAI,EAAEL,KAAK,CAACK,IAAN,CAAWK,GAAX,CAAgBC,IAAD,IAAU;AAC7B,cAAIA,IAAI,CAACC,EAAL,KAAYX,MAAM,CAACW,EAAvB,EAA2B;AACzB,mBAAO,EAAE,GAAGD,IAAL;AAAWE,cAAAA,SAAS,EAAE;AAAtB,aAAP;AACD,WAFD,MAEO;AACL,mBAAOF,IAAP;AACD;AACF,SANK;AAFD,OAAP;;AAUF,SAAK,aAAL;AACE,aAAO,EACL,GAAGX,KADE;AAELK,QAAAA,IAAI,EAAEL,KAAK,CAACK,IAAN,CAAWS,MAAX,CAAmBH,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYX,MAAM,CAACK,OAAP,CAAeM,EAAvD;AAFD,OAAP;;AAKF,SAAK,UAAL;AACE,aAAO,EACL,GAAGZ,KADE;AAELK,QAAAA,IAAI,EAAEL,KAAK,CAACK,IAAN,CAAWI,MAAX,CAAkB;AACtBG,UAAAA,EAAE,EAAEG,IAAI,CAACC,MAAL,EADkB;AAEtBC,UAAAA,KAAK,EAAEhB,MAAM,CAACK,OAFQ;AAGtBO,UAAAA,SAAS,EAAE;AAHW,SAAlB;AAFD,OAAP;;AAQF,SAAK,gBAAL;AACE,aAAO,EACL,GAAGb,KADE;AAELK,QAAAA,IAAI,EAAEL,KAAK,CAACK,IAAN,CAAWK,GAAX,CAAgBC,IAAD,IAAU;AAC7B,iBAAO,EACL,GAAGA,IADE;AAELE,YAAAA,SAAS,EAAE;AAFN,WAAP;AAID,SALK;AAFD,OAAP;;AASF,SAAK,kBAAL;AACE,aAAO,EACL,GAAGb,KADE;AAELK,QAAAA,IAAI,EAAEL,KAAK,CAACK,IAAN,CAAWK,GAAX,CAAgBC,IAAD,IAAU;AAC7B,iBAAO,EACL,GAAGA,IADE;AAELE,YAAAA,SAAS,EAAE;AAFN,WAAP;AAID,SALK;AAFD,OAAP;;AASF;AACE,aAAOb,KAAP;AAjFJ;AAmFD,CApFM","sourcesContent":["export const todoReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"TODOS_FETCH_INIT\":\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        isError: false,\r\n      };\r\n    case \"TODOS_FETCH_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        isError: false,\r\n        data:\r\n          action.payload.page === 1\r\n            ? action.payload.list\r\n            : state.data.concat(action.payload.list),\r\n      };\r\n    case \"TODOS_FETCH_FAILURE\":\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        isError: true,\r\n      };\r\n    case \"DO_TODO\":\r\n      return {\r\n        ...state,\r\n        data: state.data.map((todo) => {\r\n          if (todo.id === action.id) {\r\n            return { ...todo, completed: true };\r\n          } else {\r\n            return todo;\r\n          }\r\n        }),\r\n      };\r\n    case \"UNDO_TODO\":\r\n      return {\r\n        ...state,\r\n        data: state.data.map((todo) => {\r\n          if (todo.id === action.id) {\r\n            return { ...todo, completed: false };\r\n          } else {\r\n            return todo;\r\n          }\r\n        }),\r\n      };\r\n    case \"REMOVE_TODO\":\r\n      return {\r\n        ...state,\r\n        data: state.data.filter((todo) => todo.id !== action.payload.id),\r\n      };\r\n\r\n    case \"ADD_TODO\":\r\n      return {\r\n        ...state,\r\n        data: state.data.concat({\r\n          id: Math.random(),\r\n          title: action.payload,\r\n          completed: false,\r\n        }),\r\n      };\r\n    case \"MARK_ALL_TODOS\":\r\n      return {\r\n        ...state,\r\n        data: state.data.map((todo) => {\r\n          return {\r\n            ...todo,\r\n            completed: true,\r\n          };\r\n        }),\r\n      };\r\n    case \"UNMARK_ALL_TODOS\":\r\n      return {\r\n        ...state,\r\n        data: state.data.map((todo) => {\r\n          return {\r\n            ...todo,\r\n            completed: false,\r\n          };\r\n        }),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}