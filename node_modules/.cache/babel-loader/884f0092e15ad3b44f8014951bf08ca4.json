{"ast":null,"code":"var _jsxFileName = \"D:\\\\Rim\\\\react-app\\\\src\\\\contexts\\\\AppContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport useFirestore from \"../components/hooks/useFirestore\"; // import { useAuth } from \"./AuthContext\";\n\nimport { db } from \"../firebase/config\";\nimport { addDoc, collection, serverTimestamp, updateDoc, doc } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AppContext = /*#__PURE__*/React.createContext();\nexport const useAppContext = () => {\n  _s();\n\n  return useContext(AppContext);\n};\n\n_s(useAppContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport const AppProvider = ({\n  children\n}) => {\n  _s2();\n\n  // const { user } = useAuth();\n  // const condition = React.useMemo(() => {\n  //   return {\n  //     fieldName: \"\",\n  //     operator: \"\",\n  //     compareValue: \"\",\n  //   };\n  // }, []);\n  const addDocument = (FirestoreCollection, data) => {\n    addDoc(collection(db, FirestoreCollection), { ...data,\n      createdAt: serverTimestamp()\n    });\n  };\n\n  const updateDocument = (collection, docID, data) => {\n    updateDoc(doc(db, collection, docID), { ...data,\n      lastModified: serverTimestamp()\n    });\n  };\n\n  const users = useFirestore(\"users\", \"\");\n  const value = {\n    users,\n    addDocument,\n    updateDocument\n  };\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 10\n  }, this);\n};\n\n_s2(AppProvider, \"z+tbBdftgbdPYydQl8IZeTUfpME=\", false, function () {\n  return [useFirestore];\n});\n\n_c = AppProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"sources":["D:/Rim/react-app/src/contexts/AppContext.js"],"names":["React","useContext","useFirestore","db","addDoc","collection","serverTimestamp","updateDoc","doc","AppContext","createContext","useAppContext","AppProvider","children","addDocument","FirestoreCollection","data","createdAt","updateDocument","docID","lastModified","users","value"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,YAAP,MAAyB,kCAAzB,C,CACA;;AACA,SAASC,EAAT,QAAmB,oBAAnB;AACA,SACEC,MADF,EAEEC,UAFF,EAGEC,eAHF,EAIEC,SAJF,EAKEC,GALF,QAMO,oBANP;;AAQA,OAAO,MAAMC,UAAU,gBAAGT,KAAK,CAACU,aAAN,EAAnB;AAEP,OAAO,MAAMC,aAAa,GAAG;AAAA;;AAAA,SAAMV,UAAU,CAACQ,UAAD,CAAhB;AAAA,CAAtB;;GAAME,a;;AAEb,OAAO,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,QAAMC,WAAW,GAAG,CAACC,mBAAD,EAAsBC,IAAtB,KAA+B;AACjDZ,IAAAA,MAAM,CAACC,UAAU,CAACF,EAAD,EAAKY,mBAAL,CAAX,EAAsC,EAC1C,GAAGC,IADuC;AAE1CC,MAAAA,SAAS,EAAEX,eAAe;AAFgB,KAAtC,CAAN;AAID,GALD;;AAOA,QAAMY,cAAc,GAAG,CAACb,UAAD,EAAac,KAAb,EAAoBH,IAApB,KAA6B;AAClDT,IAAAA,SAAS,CAACC,GAAG,CAACL,EAAD,EAAKE,UAAL,EAAiBc,KAAjB,CAAJ,EAA6B,EACpC,GAAGH,IADiC;AAEpCI,MAAAA,YAAY,EAAEd,eAAe;AAFO,KAA7B,CAAT;AAID,GALD;;AAOA,QAAMe,KAAK,GAAGnB,YAAY,CAAC,OAAD,EAAU,EAAV,CAA1B;AAEA,QAAMoB,KAAK,GAAG;AAAED,IAAAA,KAAF;AAASP,IAAAA,WAAT;AAAsBI,IAAAA;AAAtB,GAAd;AAEA,sBAAO,QAAC,UAAD,CAAY,QAAZ;AAAqB,IAAA,KAAK,EAAEI,KAA5B;AAAA,cAAoCT;AAApC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CA7BM;;IAAMD,W;UAwBGV,Y;;;KAxBHU,W","sourcesContent":["import React, { useContext } from \"react\";\r\nimport useFirestore from \"../components/hooks/useFirestore\";\r\n// import { useAuth } from \"./AuthContext\";\r\nimport { db } from \"../firebase/config\";\r\nimport {\r\n  addDoc,\r\n  collection,\r\n  serverTimestamp,\r\n  updateDoc,\r\n  doc,\r\n} from \"firebase/firestore\";\r\n\r\nexport const AppContext = React.createContext();\r\n\r\nexport const useAppContext = () => useContext(AppContext);\r\n\r\nexport const AppProvider = ({ children }) => {\r\n  // const { user } = useAuth();\r\n  // const condition = React.useMemo(() => {\r\n  //   return {\r\n  //     fieldName: \"\",\r\n  //     operator: \"\",\r\n  //     compareValue: \"\",\r\n  //   };\r\n  // }, []);\r\n\r\n  const addDocument = (FirestoreCollection, data) => {\r\n    addDoc(collection(db, FirestoreCollection), {\r\n      ...data,\r\n      createdAt: serverTimestamp(),\r\n    });\r\n  };\r\n\r\n  const updateDocument = (collection, docID, data) => {\r\n    updateDoc(doc(db, collection, docID), {\r\n      ...data,\r\n      lastModified: serverTimestamp(),\r\n    });\r\n  };\r\n\r\n  const users = useFirestore(\"users\", \"\");\r\n\r\n  const value = { users, addDocument, updateDocument };\r\n\r\n  return <AppContext.Provider value={value}>{children}</AppContext.Provider>;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}