{"ast":null,"code":"var _jsxFileName = \"D:\\\\Rim\\\\react-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from \"react\";\nimport axios from \"axios\";\nimport { useCallback, useMemo, useReducer } from \"react\";\nimport { useEffect, useState, useRef } from \"react\";\nimport \"./App.css\";\nimport TodoApp from \"./TodoApp\";\nimport * as SC from \"./style\";\nimport { SearchForm } from \"./components/SearchForm\";\nimport { List } from \"./components/List\"; //Custom Hook\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const usePersistentState = (key, initialState) => {\n  _s();\n\n  const [value, setValue] = useState(localStorage.getItem(key) || initialState);\n  const isMounted = useRef(false);\n  useEffect(() => {\n    if (!isMounted.current) {\n      isMounted.current = true;\n    } else {\n      localStorage.setItem(key, value);\n    }\n  }, [key, value]);\n  return [value, setValue];\n}; //Reducer\n//Stories reducer\n\n_s(usePersistentState, \"O08EfRTMQFMYxvVhkINOVBH9cGE=\");\n\nconst storiesReducer = (state, action) => {\n  switch (action.type) {\n    case \"STORIES_FETCH_INIT\":\n      return { ...state,\n        isLoading: true,\n        isError: false\n      };\n\n    case \"STORIES_FETCH_SUCCESS\":\n      return { ...state,\n        isLoading: false,\n        isError: false,\n        data: action.payload\n      };\n\n    case \"STORIES_FETCH_FAILURE\":\n      return { ...state,\n        isLoading: false,\n        isError: true\n      };\n\n    case \"REMOVE_STORY\":\n      return { ...state,\n        data: state.data.filter(story => story.objectID !== action.payload.objectID)\n      };\n\n    default:\n      throw new Error();\n  }\n};\n\nconst App = () => {\n  _s2();\n\n  const [stories, dispatchStories] = useReducer(storiesReducer, {\n    data: [],\n    isLoading: false,\n    isError: false\n  });\n  const [searchTerm, setSearchTerm] = usePersistentState(\"search\", \"React\");\n  const API_ENDPOINT = \"https://hn.algolia.com/api/v1/search?query=\";\n  const [url, setUrl] = useState(`${API_ENDPOINT}${searchTerm}`);\n  const handleFetchStories = useCallback(async () => {\n    dispatchStories({\n      type: \"STORIES_FETCH_INIT\"\n    });\n\n    try {\n      const respone = await axios.get(url);\n      dispatchStories({\n        type: \"STORIES_FETCH_SUCCESS\",\n        payload: respone.data.hits\n      });\n    } catch {\n      dispatchStories({\n        type: \"STORIES_FETCH_FAILURE\"\n      });\n    }\n  }, [url]);\n  useEffect(() => {\n    handleFetchStories();\n  }, [handleFetchStories]);\n  const handleRemoveStory = useCallback(item => {\n    dispatchStories({\n      type: \"REMOVE_STORY\",\n      payload: item\n    });\n  }, []);\n  const handleSearchInput = useCallback(e => setSearchTerm(e.target.value), [setSearchTerm]);\n  const handleSearchSubmit = useCallback(e => {\n    setUrl(`${API_ENDPOINT}${searchTerm}`);\n    e.preventDefault();\n  }, [searchTerm]);\n\n  const getSumComments = stories => {\n    return stories.data.reduce((result, value) => result + value.num_comments, 0);\n  };\n\n  const sumComments = useMemo(() => getSumComments(stories), [stories]);\n  return /*#__PURE__*/_jsxDEV(SC.StyledContainer, {\n    children: [/*#__PURE__*/_jsxDEV(TodoApp, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SC.StyledHeadlinePrimary, {\n      children: [\"My Hacker Stories with \", sumComments, \" comments\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchForm, {\n      searchTerm: searchTerm,\n      onSearchSubmit: handleSearchSubmit,\n      onSearchInput: handleSearchInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), stories.isError && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Oops! Something went wrong...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }, this), stories.isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(List, {\n      list: stories.data,\n      onRemoveItem: handleRemoveStory\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(App, \"KTva93/hNQjk/pKEvS/4ejtI5lk=\", false, function () {\n  return [usePersistentState];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/Rim/react-app/src/App.js"],"names":["React","axios","useCallback","useMemo","useReducer","useEffect","useState","useRef","TodoApp","SC","SearchForm","List","usePersistentState","key","initialState","value","setValue","localStorage","getItem","isMounted","current","setItem","storiesReducer","state","action","type","isLoading","isError","data","payload","filter","story","objectID","Error","App","stories","dispatchStories","searchTerm","setSearchTerm","API_ENDPOINT","url","setUrl","handleFetchStories","respone","get","hits","handleRemoveStory","item","handleSearchInput","e","target","handleSearchSubmit","preventDefault","getSumComments","reduce","result","num_comments","sumComments"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport { useCallback, useMemo, useReducer } from \"react\";\nimport { useEffect, useState, useRef } from \"react\";\nimport \"./App.css\";\nimport TodoApp from \"./TodoApp\";\nimport * as SC from \"./style\";\nimport { SearchForm } from \"./components/SearchForm\";\nimport { List } from \"./components/List\";\n\n//Custom Hook\nexport const usePersistentState = (key, initialState) => {\n  const [value, setValue] = useState(localStorage.getItem(key) || initialState);\n  const isMounted = useRef(false);\n  useEffect(() => {\n    if (!isMounted.current) {\n      isMounted.current = true;\n    } else {\n      localStorage.setItem(key, value);\n    }\n  }, [key, value]);\n\n  return [value, setValue];\n};\n\n//Reducer\n//Stories reducer\nconst storiesReducer = (state, action) => {\n  switch (action.type) {\n    case \"STORIES_FETCH_INIT\":\n      return {\n        ...state,\n        isLoading: true,\n        isError: false,\n      };\n    case \"STORIES_FETCH_SUCCESS\":\n      return {\n        ...state,\n        isLoading: false,\n        isError: false,\n        data: action.payload,\n      };\n    case \"STORIES_FETCH_FAILURE\":\n      return {\n        ...state,\n        isLoading: false,\n        isError: true,\n      };\n    case \"REMOVE_STORY\":\n      return {\n        ...state,\n        data: state.data.filter(\n          (story) => story.objectID !== action.payload.objectID\n        ),\n      };\n    default:\n      throw new Error();\n  }\n};\n\nconst App = () => {\n  const [stories, dispatchStories] = useReducer(storiesReducer, {\n    data: [],\n    isLoading: false,\n    isError: false,\n  });\n  const [searchTerm, setSearchTerm] = usePersistentState(\"search\", \"React\");\n  const API_ENDPOINT = \"https://hn.algolia.com/api/v1/search?query=\";\n  const [url, setUrl] = useState(`${API_ENDPOINT}${searchTerm}`);\n\n  const handleFetchStories = useCallback(async () => {\n    dispatchStories({\n      type: \"STORIES_FETCH_INIT\",\n    });\n\n    try {\n      const respone = await axios.get(url);\n      dispatchStories({\n        type: \"STORIES_FETCH_SUCCESS\",\n        payload: respone.data.hits,\n      });\n    } catch {\n      dispatchStories({\n        type: \"STORIES_FETCH_FAILURE\",\n      });\n    }\n  }, [url]);\n\n  useEffect(() => {\n    handleFetchStories();\n  }, [handleFetchStories]);\n\n  const handleRemoveStory = useCallback((item) => {\n    dispatchStories({\n      type: \"REMOVE_STORY\",\n      payload: item,\n    });\n  }, []);\n\n  const handleSearchInput = useCallback(\n    (e) => setSearchTerm(e.target.value),\n    [setSearchTerm]\n  );\n\n  const handleSearchSubmit = useCallback(\n    (e) => {\n      setUrl(`${API_ENDPOINT}${searchTerm}`);\n      e.preventDefault();\n    },\n    [searchTerm]\n  );\n\n  const getSumComments = (stories) => {\n    return stories.data.reduce(\n      (result, value) => result + value.num_comments,\n      0\n    );\n  };\n\n  const sumComments = useMemo(() => getSumComments(stories), [stories]);\n\n  return (\n    <SC.StyledContainer>\n      <TodoApp />\n\n      <SC.StyledHeadlinePrimary>\n        My Hacker Stories with {sumComments} comments\n      </SC.StyledHeadlinePrimary>\n\n      <SearchForm\n        searchTerm={searchTerm}\n        onSearchSubmit={handleSearchSubmit}\n        onSearchInput={handleSearchInput}\n      />\n\n      {stories.isError && (\n        <p>\n          <strong>Oops! Something went wrong...</strong>\n        </p>\n      )}\n\n      {stories.isLoading ? (\n        <p>\n          <strong>Loading...</strong>\n        </p>\n      ) : (\n        <List list={stories.data} onRemoveItem={handleRemoveStory} />\n      )}\n    </SC.StyledContainer>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}