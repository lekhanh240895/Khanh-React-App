{"ast":null,"code":"var _jsxFileName = \"D:\\\\Rim\\\\react-app\\\\src\\\\components\\\\HackerNewStoriesApp\\\\InputWithLabel.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport * as SC from \"./style\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const InputWithLabel = ({\n  isFocused,\n  children,\n  type = \"text\",\n  id,\n  value,\n  onInputChange,\n  checked\n}) => {\n  _s();\n\n  const inputRef = React.useRef(null);\n  React.useEffect(() => {\n    if (isFocused && inputRef.current) {\n      inputRef.current.focus();\n    } // eslint-disable-next-line\n\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SC.StyledLabel, {\n      htmlFor: id,\n      children: [\" \", children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(SC.StyledInput, {\n      id: id,\n      type: type,\n      value: value,\n      onChange: onInputChange,\n      ref: inputRef,\n      checked: checked\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(InputWithLabel, \"cBQ6FQ+sf5H+lvNONLKqtm4aeQ8=\");\n\n_c = InputWithLabel;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputWithLabel\");","map":{"version":3,"sources":["D:/Rim/react-app/src/components/HackerNewStoriesApp/InputWithLabel.js"],"names":["React","SC","InputWithLabel","isFocused","children","type","id","value","onInputChange","checked","inputRef","useRef","useEffect","current","focus"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,EAAZ,MAAoB,SAApB;;;AACA,OAAO,MAAMC,cAAc,GAAG,CAAC;AAC7BC,EAAAA,SAD6B;AAE7BC,EAAAA,QAF6B;AAG7BC,EAAAA,IAAI,GAAG,MAHsB;AAI7BC,EAAAA,EAJ6B;AAK7BC,EAAAA,KAL6B;AAM7BC,EAAAA,aAN6B;AAO7BC,EAAAA;AAP6B,CAAD,KAQxB;AAAA;;AACJ,QAAMC,QAAQ,GAAGV,KAAK,CAACW,MAAN,CAAa,IAAb,CAAjB;AACAX,EAAAA,KAAK,CAACY,SAAN,CAAgB,MAAM;AACpB,QAAIT,SAAS,IAAIO,QAAQ,CAACG,OAA1B,EAAmC;AACjCH,MAAAA,QAAQ,CAACG,OAAT,CAAiBC,KAAjB;AACD,KAHmB,CAIpB;;AACD,GALD;AAOA,sBACE;AAAA,4BACE,QAAC,EAAD,CAAI,WAAJ;AAAgB,MAAA,OAAO,EAAER,EAAzB;AAAA,sBAA+BF,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,uBAGE,QAAC,EAAD,CAAI,WAAJ;AACE,MAAA,EAAE,EAAEE,EADN;AAEE,MAAA,IAAI,EAAED,IAFR;AAGE,MAAA,KAAK,EAAEE,KAHT;AAIE,MAAA,QAAQ,EAAEC,aAJZ;AAKE,MAAA,GAAG,EAAEE,QALP;AAME,MAAA,OAAO,EAAED;AANX;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA,kBADF;AAcD,CA/BM;;GAAMP,c;;KAAAA,c","sourcesContent":["import React from \"react\";\r\nimport * as SC from \"./style\";\r\nexport const InputWithLabel = ({\r\n  isFocused,\r\n  children,\r\n  type = \"text\",\r\n  id,\r\n  value,\r\n  onInputChange,\r\n  checked,\r\n}) => {\r\n  const inputRef = React.useRef(null);\r\n  React.useEffect(() => {\r\n    if (isFocused && inputRef.current) {\r\n      inputRef.current.focus();\r\n    }\r\n    // eslint-disable-next-line\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <SC.StyledLabel htmlFor={id}> {children}</SC.StyledLabel>\r\n      &nbsp;\r\n      <SC.StyledInput\r\n        id={id}\r\n        type={type}\r\n        value={value}\r\n        onChange={onInputChange}\r\n        ref={inputRef}\r\n        checked={checked}\r\n      ></SC.StyledInput>\r\n    </>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}