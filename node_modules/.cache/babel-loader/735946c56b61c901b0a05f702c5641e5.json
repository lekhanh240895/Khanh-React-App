{"ast":null,"code":"var _jsxFileName = \"D:\\\\Rim\\\\react-app\\\\src\\\\components\\\\UpdateProfile\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useEffect, useMemo } from \"react\";\nimport { Form, Card, Button, Alert\n/* ProgressBar */\n} from \"react-bootstrap\";\nimport { Link, useHistory, Prompt } from \"react-router-dom\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport { useAppContext } from \"../../contexts/AppContext\";\nimport useFirestore from \"../hooks/useFirestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UpdateProfile = () => {\n  _s();\n\n  var _displayNameRef$curre2, _emailRef$current2, _passwordRef$current2, _passwordConfirmRef$c2;\n\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const passwordConfirmRef = useRef();\n  const displayNameRef = useRef();\n  const [error, setError] = useState(\"\");\n  const {\n    user,\n    updateUserEmail,\n    updateUserPassword,\n    updateUserProfile\n  } = useAuth();\n  const [isSucced, setIsSucced] = useState(false);\n  const history = useHistory();\n  const [isBlocking, setIsBlocking] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const {\n    updateDocument\n  } = useAppContext();\n  useEffect(() => {\n    var _displayNameRef$curre, _emailRef$current, _passwordRef$current, _passwordConfirmRef$c;\n\n    if (user.displayName !== ((_displayNameRef$curre = displayNameRef.current) === null || _displayNameRef$curre === void 0 ? void 0 : _displayNameRef$curre.value) || ((_emailRef$current = emailRef.current) === null || _emailRef$current === void 0 ? void 0 : _emailRef$current.value) !== user.email || ((_passwordRef$current = passwordRef.current) === null || _passwordRef$current === void 0 ? void 0 : _passwordRef$current.value) || ((_passwordConfirmRef$c = passwordConfirmRef.current) === null || _passwordConfirmRef$c === void 0 ? void 0 : _passwordConfirmRef$c.value)) {\n      setIsLoading(false);\n    } else {\n      setIsLoading(true);\n    } //eslint-disable-next-line\n\n  }, [(_displayNameRef$curre2 = displayNameRef.current) === null || _displayNameRef$curre2 === void 0 ? void 0 : _displayNameRef$curre2.value, (_emailRef$current2 = emailRef.current) === null || _emailRef$current2 === void 0 ? void 0 : _emailRef$current2.value, (_passwordRef$current2 = passwordRef.current) === null || _passwordRef$current2 === void 0 ? void 0 : _passwordRef$current2.value, (_passwordConfirmRef$c2 = passwordConfirmRef.current) === null || _passwordConfirmRef$c2 === void 0 ? void 0 : _passwordConfirmRef$c2.value]);\n  const condition = useMemo(() => {\n    return {\n      fieldName: \"email\",\n      operator: \"==\",\n      compareValue: user.email\n    };\n  }, [user.email]);\n  const userDocs = useFirestore(\"users\", condition);\n\n  const handleUpdateDocument = () => {\n    updateDocument(\"users\", userDocs[0].id, {\n      displayName: user.displayName,\n      email: user.email,\n      photoURL: user.photoURL,\n      uid: user.email\n    });\n  };\n\n  const handleUpdateProfileSubmit = e => {\n    e.preventDefault();\n    setIsBlocking(false);\n    setError(\"\");\n    setIsLoading(true);\n    const promises = [];\n\n    if (passwordConfirmRef.current.value !== passwordRef.current.value) {\n      return setError(\"Password does not match\");\n    }\n\n    if (passwordRef.current.value) {\n      promises.push(updateUserPassword(passwordRef.current.value));\n    }\n\n    if (emailRef.current.value !== user.email) {\n      promises.push(updateUserEmail(emailRef.current.value));\n    }\n\n    if (displayNameRef.current.value !== user.displayName) {\n      promises.push(updateUserProfile(displayNameRef.current.value, user.photoURL));\n    }\n\n    Promise.all(promises).then(() => {\n      setIsSucced(true);\n      handleUpdateDocument();\n      setTimeout(() => history.push(\"/profile\"), 1000);\n    }).catch(error => {\n      const errMessage = error.message.replace(\"Firebase: \", \"\");\n      return setError(errMessage);\n    }).finally(() => {\n      setIsLoading(false);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"d-flex flex-row justify-content-center align-items-center\",\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      style: {\n        maxWidth: \"400px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        as: \"h1\",\n        className: \"mb-4\",\n        children: \"Update Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Prompt, {\n        when: isBlocking,\n        message: \"Seem you are not finishing your works. Are you sure want to leave?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), isSucced && /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"success\",\n        className: \"text-center\",\n        style: {\n          fontWeight: \"600\",\n          fontSize: \"1.5rem\"\n        },\n        children: \"Update Successfull. Redirecting....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleUpdateProfileSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            htmlFor: \"displayName\",\n            children: \"Display Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            id: \"displayName\",\n            type: \"text\",\n            ref: displayNameRef,\n            defaultValue: user === null || user === void 0 ? void 0 : user.displayName,\n            required: true,\n            onChange: e => {\n              setIsBlocking(e.target.value.length > 0);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            htmlFor: \"email\",\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            id: \"email\",\n            type: \"email\",\n            ref: emailRef,\n            required: true,\n            defaultValue: user === null || user === void 0 ? void 0 : user.email,\n            onChange: e => setIsBlocking(e.target.value.length > 0)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            htmlFor: \"password\",\n            children: \"New password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            id: \"password\",\n            type: \"password\",\n            ref: passwordRef,\n            placeholder: \"Leave it blank to keep your password\",\n            onChange: e => setIsBlocking(e.target.value.length > 0)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            htmlFor: \"passwordConfirm\",\n            children: \"Confirm New Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            id: \"passwordConfirm\",\n            type: \"password\",\n            ref: passwordConfirmRef,\n            placeholder: \"Leave it blank to keep your password\",\n            onChange: e => setIsBlocking(e.target.value.length > 0)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          disabled: isLoading,\n          type: \"submit\",\n          className: \"w-100 my-3\",\n          children: \"Update profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/profile\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UpdateProfile, \"U36hxzPjg4OFFVFiwnLLmqfiAUo=\", false, function () {\n  return [useAuth, useHistory, useAppContext, useFirestore];\n});\n\n_c = UpdateProfile;\nexport default UpdateProfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateProfile\");","map":{"version":3,"sources":["D:/Rim/react-app/src/components/UpdateProfile/index.js"],"names":["React","useRef","useState","useEffect","useMemo","Form","Card","Button","Alert","Link","useHistory","Prompt","useAuth","useAppContext","useFirestore","UpdateProfile","emailRef","passwordRef","passwordConfirmRef","displayNameRef","error","setError","user","updateUserEmail","updateUserPassword","updateUserProfile","isSucced","setIsSucced","history","isBlocking","setIsBlocking","isLoading","setIsLoading","updateDocument","displayName","current","value","email","condition","fieldName","operator","compareValue","userDocs","handleUpdateDocument","id","photoURL","uid","handleUpdateProfileSubmit","e","preventDefault","promises","push","Promise","all","then","setTimeout","catch","errMessage","message","replace","finally","maxWidth","fontWeight","fontSize","target","length"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect, useMemo } from \"react\";\r\nimport { Form, Card, Button, Alert /* ProgressBar */ } from \"react-bootstrap\";\r\nimport { Link, useHistory, Prompt } from \"react-router-dom\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport { useAppContext } from \"../../contexts/AppContext\";\r\nimport useFirestore from \"../hooks/useFirestore\";\r\n\r\nexport const UpdateProfile = () => {\r\n  const emailRef = useRef();\r\n  const passwordRef = useRef();\r\n  const passwordConfirmRef = useRef();\r\n  const displayNameRef = useRef();\r\n\r\n  const [error, setError] = useState(\"\");\r\n  const { user, updateUserEmail, updateUserPassword, updateUserProfile } =\r\n    useAuth();\r\n  const [isSucced, setIsSucced] = useState(false);\r\n  const history = useHistory();\r\n  const [isBlocking, setIsBlocking] = useState(false);\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const { updateDocument } = useAppContext();\r\n\r\n  useEffect(() => {\r\n    if (\r\n      user.displayName !== displayNameRef.current?.value ||\r\n      emailRef.current?.value !== user.email ||\r\n      passwordRef.current?.value ||\r\n      passwordConfirmRef.current?.value\r\n    ) {\r\n      setIsLoading(false);\r\n    } else {\r\n      setIsLoading(true);\r\n    }\r\n    //eslint-disable-next-line\r\n  }, [\r\n    displayNameRef.current?.value,\r\n    emailRef.current?.value,\r\n    passwordRef.current?.value,\r\n    passwordConfirmRef.current?.value,\r\n  ]);\r\n\r\n  const condition = useMemo(() => {\r\n    return {\r\n      fieldName: \"email\",\r\n      operator: \"==\",\r\n      compareValue: user.email,\r\n    };\r\n  }, [user.email]);\r\n\r\n  const userDocs = useFirestore(\"users\", condition);\r\n\r\n  const handleUpdateDocument = () => {\r\n    updateDocument(\"users\", userDocs[0].id, {\r\n      displayName: user.displayName,\r\n      email: user.email,\r\n      photoURL: user.photoURL,\r\n      uid: user.email,\r\n    });\r\n  };\r\n\r\n  const handleUpdateProfileSubmit = (e) => {\r\n    e.preventDefault();\r\n    setIsBlocking(false);\r\n    setError(\"\");\r\n    setIsLoading(true);\r\n    const promises = [];\r\n    if (passwordConfirmRef.current.value !== passwordRef.current.value) {\r\n      return setError(\"Password does not match\");\r\n    }\r\n\r\n    if (passwordRef.current.value) {\r\n      promises.push(updateUserPassword(passwordRef.current.value));\r\n    }\r\n\r\n    if (emailRef.current.value !== user.email) {\r\n      promises.push(updateUserEmail(emailRef.current.value));\r\n    }\r\n\r\n    if (displayNameRef.current.value !== user.displayName) {\r\n      promises.push(\r\n        updateUserProfile(displayNameRef.current.value, user.photoURL)\r\n      );\r\n    }\r\n\r\n    Promise.all(promises)\r\n      .then(() => {\r\n        setIsSucced(true);\r\n        handleUpdateDocument();\r\n        setTimeout(() => history.push(\"/profile\"), 1000);\r\n      })\r\n      .catch((error) => {\r\n        const errMessage = error.message.replace(\"Firebase: \", \"\");\r\n        return setError(errMessage);\r\n      })\r\n      .finally(() => {\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Card className=\"d-flex flex-row justify-content-center align-items-center\">\r\n      <Card.Body style={{ maxWidth: \"400px\" }}>\r\n        <Card.Header as=\"h1\" className=\"mb-4\">\r\n          Update Profile\r\n        </Card.Header>\r\n\r\n        <Prompt\r\n          when={isBlocking}\r\n          message=\"Seem you are not finishing your works. Are you sure want to leave?\"\r\n        />\r\n\r\n        {isSucced && (\r\n          <Alert\r\n            variant=\"success\"\r\n            className=\"text-center\"\r\n            style={{ fontWeight: \"600\", fontSize: \"1.5rem\" }}\r\n          >\r\n            Update Successfull. Redirecting....\r\n          </Alert>\r\n        )}\r\n        {error && <Alert variant=\"danger\">{error}</Alert>}\r\n\r\n        <Form onSubmit={handleUpdateProfileSubmit}>\r\n          <Form.Group>\r\n            <Form.Label htmlFor=\"displayName\">Display Name:</Form.Label>\r\n            <Form.Control\r\n              id=\"displayName\"\r\n              type=\"text\"\r\n              ref={displayNameRef}\r\n              defaultValue={user?.displayName}\r\n              required\r\n              onChange={(e) => {\r\n                setIsBlocking(e.target.value.length > 0);\r\n              }}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group>\r\n            <Form.Label htmlFor=\"email\">Email:</Form.Label>\r\n            <Form.Control\r\n              id=\"email\"\r\n              type=\"email\"\r\n              ref={emailRef}\r\n              required\r\n              defaultValue={user?.email}\r\n              onChange={(e) => setIsBlocking(e.target.value.length > 0)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group>\r\n            <Form.Label htmlFor=\"password\">New password:</Form.Label>\r\n            <Form.Control\r\n              id=\"password\"\r\n              type=\"password\"\r\n              ref={passwordRef}\r\n              placeholder=\"Leave it blank to keep your password\"\r\n              onChange={(e) => setIsBlocking(e.target.value.length > 0)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group>\r\n            <Form.Label htmlFor=\"passwordConfirm\">\r\n              Confirm New Password:\r\n            </Form.Label>\r\n            <Form.Control\r\n              id=\"passwordConfirm\"\r\n              type=\"password\"\r\n              ref={passwordConfirmRef}\r\n              placeholder=\"Leave it blank to keep your password\"\r\n              onChange={(e) => setIsBlocking(e.target.value.length > 0)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Button disabled={isLoading} type=\"submit\" className=\"w-100 my-3\">\r\n            Update profile\r\n          </Button>\r\n        </Form>\r\n        <div className=\"text-center\">\r\n          <Link to=\"/profile\">Cancel</Link>\r\n        </div>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default UpdateProfile;\r\n"]},"metadata":{},"sourceType":"module"}