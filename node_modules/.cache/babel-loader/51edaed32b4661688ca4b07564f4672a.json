{"ast":null,"code":"var _jsxFileName = \"D:\\\\Rim\\\\react-app\\\\src\\\\components\\\\Homepage\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { ProgressBar, Alert, Form, Button, Row, Col, Container, Image } from \"react-bootstrap\";\nimport { storage } from \"../../firebase/config\";\nimport { ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Homepage() {\n  _s();\n\n  const [images, setImages] = useState([]);\n  const [urls, setUrls] = useState([]);\n  const [progress, setProgress] = useState();\n  const [error, setError] = useState();\n  const {\n    user\n  } = useAuth();\n\n  const handleInputChange = e => {\n    for (let i = 0; i < e.target.value.length; i++) {\n      setImages(prevState => [...prevState, e.target.files[i]]);\n    }\n  };\n\n  const handleUploadImages = path => {\n    const promises = [];\n    images.forEach(image => {\n      const imagesRef = ref(storage, `${user.email}/${path}/${image.name}`);\n      const metadata = {\n        contentType: \"image/jpeg\"\n      };\n      setProgress(true);\n      const uploadTask = uploadBytesResumable(imagesRef, image, metadata);\n      promises.push(uploadTask);\n      uploadTask.on(\"state_changed\", snapshot => {\n        const progress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n        setProgress(progress);\n      }, error => setError(error.message), async () => {\n        const url = await getDownloadURL(imagesRef);\n        setUrls(prevState => [...prevState, url]);\n      });\n    });\n    Promise.all(promises).then(() => setProgress(false)).catch(error => setError(error.message)).finally(() => {});\n  }; // console.log({ urls, images });\n\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [error && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }, this), progress && /*#__PURE__*/_jsxDEV(ProgressBar, {\n      now: progress,\n      max: \"100\",\n      label: `Loading...${progress}%`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Homepage\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          htmlFor: \"addImgs\",\n          children: \"Add Images\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          multiple: true,\n          id: \"addImgs\",\n          type: \"file\",\n          onChange: e => handleInputChange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleUploadImages(\"Images\"),\n          children: \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: urls.map((url, index) => /*#__PURE__*/_jsxDEV(Col, {\n            xs: 6,\n            style: {\n              listStyle: \"none\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Image, {\n              fluid: true,\n              src: url,\n              alt: url,\n              style: {\n                height: \"50vw\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 17\n            }, this)\n          }, url + index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Homepage, \"wdKXc+BpH06GnJmL0iEksd/ep7s=\", false, function () {\n  return [useAuth];\n});\n\n_c = Homepage;\n\nvar _c;\n\n$RefreshReg$(_c, \"Homepage\");","map":{"version":3,"sources":["D:/Rim/react-app/src/components/Homepage/index.js"],"names":["React","useState","ProgressBar","Alert","Form","Button","Row","Col","Container","Image","storage","ref","uploadBytesResumable","getDownloadURL","useAuth","Homepage","images","setImages","urls","setUrls","progress","setProgress","error","setError","user","handleInputChange","e","i","target","value","length","prevState","files","handleUploadImages","path","promises","forEach","image","imagesRef","email","name","metadata","contentType","uploadTask","push","on","snapshot","bytesTransferred","totalBytes","message","url","Promise","all","then","catch","finally","map","index","listStyle","height"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  ProgressBar,\r\n  Alert,\r\n  Form,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Container,\r\n  Image,\r\n} from \"react-bootstrap\";\r\nimport { storage } from \"../../firebase/config\";\r\nimport { ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\n\r\nexport default function Homepage() {\r\n  const [images, setImages] = useState([]);\r\n  const [urls, setUrls] = useState([]);\r\n  const [progress, setProgress] = useState();\r\n  const [error, setError] = useState();\r\n  const { user } = useAuth();\r\n\r\n  const handleInputChange = (e) => {\r\n    for (let i = 0; i < e.target.value.length; i++) {\r\n      setImages((prevState) => [...prevState, e.target.files[i]]);\r\n    }\r\n  };\r\n\r\n  const handleUploadImages = (path) => {\r\n    const promises = [];\r\n    images.forEach((image) => {\r\n      const imagesRef = ref(storage, `${user.email}/${path}/${image.name}`);\r\n      const metadata = {\r\n        contentType: \"image/jpeg\",\r\n      };\r\n      setProgress(true);\r\n      const uploadTask = uploadBytesResumable(imagesRef, image, metadata);\r\n      promises.push(uploadTask);\r\n\r\n      uploadTask.on(\r\n        \"state_changed\",\r\n        (snapshot) => {\r\n          const progress =\r\n            (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n          setProgress(progress);\r\n        },\r\n        (error) => setError(error.message),\r\n        async () => {\r\n          const url = await getDownloadURL(imagesRef);\r\n          setUrls((prevState) => [...prevState, url]);\r\n        }\r\n      );\r\n    });\r\n\r\n    Promise.all(promises)\r\n      .then(() => setProgress(false))\r\n      .catch((error) => setError(error.message))\r\n      .finally(() => {});\r\n  };\r\n\r\n  // console.log({ urls, images });\r\n  return (\r\n    <Container>\r\n      {error && <Alert variant=\"danger\">{error}</Alert>}\r\n      {progress && (\r\n        <ProgressBar\r\n          now={progress}\r\n          max=\"100\"\r\n          label={`Loading...${progress}%`}\r\n        />\r\n      )}\r\n      <h1>Homepage</h1>\r\n\r\n      <Form>\r\n        <Form.Group>\r\n          <Form.Label htmlFor=\"addImgs\">Add Images</Form.Label>\r\n          <Form.Control\r\n            multiple\r\n            id=\"addImgs\"\r\n            type=\"file\"\r\n            onChange={(e) => handleInputChange(e)}\r\n          />\r\n          <Button onClick={handleUploadImages(\"Images\")}>Upload</Button>\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <Row>\r\n            {urls.map((url, index) => (\r\n              <Col xs={6} key={url + index} style={{ listStyle: \"none\" }}>\r\n                <Image fluid src={url} alt={url} style={{ height: \"50vw\" }} />\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n        </Form.Group>\r\n      </Form>\r\n    </Container>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}