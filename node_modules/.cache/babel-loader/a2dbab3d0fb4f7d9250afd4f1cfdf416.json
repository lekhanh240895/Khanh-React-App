{"ast":null,"code":"import _objectSpread from\"D:/Rim/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";//Reducer\n//Stories reducer\nexport var storiesReducer=function storiesReducer(state,action){switch(action.type){case\"STORIES_FETCH_INIT\":return _objectSpread(_objectSpread({},state),{},{isLoading:true,isError:false});case\"STORIES_FETCH_SUCCESS\":return _objectSpread(_objectSpread({},state),{},{isLoading:false,isError:false,data:action.payload.page===0?action.payload.list:state.data.concat(action.payload.list),page:action.payload.page});case\"STORIES_FETCH_FAILURE\":return _objectSpread(_objectSpread({},state),{},{isLoading:false,isError:true});case\"REMOVE_STORY\":return _objectSpread(_objectSpread({},state),{},{data:state.data.filter(function(story){return story.objectID!==action.payload.objectID;})});default:throw new Error();}};export default storiesReducer;","map":{"version":3,"sources":["D:/Rim/react-app/src/components/HackerNewStoriesApp/reducers.js"],"names":["storiesReducer","state","action","type","isLoading","isError","data","payload","page","list","concat","filter","story","objectID","Error"],"mappings":"sIAAA;AACA;AACA,MAAO,IAAMA,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,KAAD,CAAQC,MAAR,CAAmB,CAC/C,OAAQA,MAAM,CAACC,IAAf,EACE,IAAK,oBAAL,CACE,sCACKF,KADL,MAEEG,SAAS,CAAE,IAFb,CAGEC,OAAO,CAAE,KAHX,GAKF,IAAK,uBAAL,CACE,sCACKJ,KADL,MAEEG,SAAS,CAAE,KAFb,CAGEC,OAAO,CAAE,KAHX,CAIEC,IAAI,CACFJ,MAAM,CAACK,OAAP,CAAeC,IAAf,GAAwB,CAAxB,CACIN,MAAM,CAACK,OAAP,CAAeE,IADnB,CAEIR,KAAK,CAACK,IAAN,CAAWI,MAAX,CAAkBR,MAAM,CAACK,OAAP,CAAeE,IAAjC,CAPR,CAQED,IAAI,CAAEN,MAAM,CAACK,OAAP,CAAeC,IARvB,GAUF,IAAK,uBAAL,CACE,sCACKP,KADL,MAEEG,SAAS,CAAE,KAFb,CAGEC,OAAO,CAAE,IAHX,GAKF,IAAK,cAAL,CACE,sCACKJ,KADL,MAEEK,IAAI,CAAEL,KAAK,CAACK,IAAN,CAAWK,MAAX,CACJ,SAACC,KAAD,QAAWA,CAAAA,KAAK,CAACC,QAAN,GAAmBX,MAAM,CAACK,OAAP,CAAeM,QAA7C,EADI,CAFR,GAMF,QACE,KAAM,IAAIC,CAAAA,KAAJ,EAAN,CAhCJ,CAkCD,CAnCM,CAqCP,cAAed,CAAAA,cAAf","sourcesContent":["//Reducer\r\n//Stories reducer\r\nexport const storiesReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"STORIES_FETCH_INIT\":\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        isError: false,\r\n      };\r\n    case \"STORIES_FETCH_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        isError: false,\r\n        data:\r\n          action.payload.page === 0\r\n            ? action.payload.list\r\n            : state.data.concat(action.payload.list),\r\n        page: action.payload.page,\r\n      };\r\n    case \"STORIES_FETCH_FAILURE\":\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        isError: true,\r\n      };\r\n    case \"REMOVE_STORY\":\r\n      return {\r\n        ...state,\r\n        data: state.data.filter(\r\n          (story) => story.objectID !== action.payload.objectID\r\n        ),\r\n      };\r\n    default:\r\n      throw new Error();\r\n  }\r\n};\r\n\r\nexport default storiesReducer;\r\n"]},"metadata":{},"sourceType":"module"}