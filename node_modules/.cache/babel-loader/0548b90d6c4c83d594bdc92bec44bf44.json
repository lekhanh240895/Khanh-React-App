{"ast":null,"code":"var _jsxFileName = \"D:\\\\Rim\\\\react-app\\\\src\\\\contexts\\\\AuthContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { auth } from \"../firebase/config\";\nimport { createUserWithEmailAndPassword, onAuthStateChanged, signInWithEmailAndPassword, signOut, sendPasswordResetEmail, updateEmail, updatePassword, updateProfile, FacebookAuthProvider, GoogleAuthProvider, signInWithPopup } from \"@firebase/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext();\nexport const useAuth = () => {\n  _s();\n\n  return useContext(AuthContext);\n};\n\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  const signup = (email, password) => createUserWithEmailAndPassword(auth, email, password);\n\n  const login = (email, password) => signInWithEmailAndPassword(auth, email, password);\n\n  const loginWithFacebook = async () => {\n    const fbProvider = new FacebookAuthProvider();\n    fbProvider.addScope(\"user_birthday\");\n    fbProvider.setCustomParameters({\n      display: \"popup\" //Login dưới dạng popup\n\n    });\n    const result = await signInWithPopup(auth, fbProvider); // const fbToken = result.credential.accessToken;\n\n    setUser(result.user);\n  };\n\n  const loginWithGoogle = async () => {\n    const ggProvider = new GoogleAuthProvider();\n    ggProvider.addScope(\"https://www.googleapis.com/auth/contacts.readonly\");\n    ggProvider.setCustomParameters({\n      login_hint: \"user@example.com\"\n    });\n    const result = await signInWithPopup(auth, ggProvider); // const credential = ggProvider.credentialFromResult(auth, result);\n    // const ggToken = credential.accessToken;\n\n    setUser(result.user);\n  };\n\n  const logout = () => signOut(auth);\n\n  const resetPassword = email => sendPasswordResetEmail(auth, email);\n\n  const updateUserEmail = email => updateEmail(user, email);\n\n  const updateUserPassword = password => updatePassword(user, password);\n\n  const updateUserProfile = (name, url) => updateProfile(user, {\n    displayName: name,\n    photoURL: url\n  });\n\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, currentUser => {\n      if (currentUser) {\n        setUser(currentUser);\n      }\n\n      console.log({\n        user\n      });\n      setLoading(false);\n    });\n    return unsubscribe;\n  }, []);\n  const value = {\n    user,\n    signup,\n    login,\n    loginWithFacebook,\n    loginWithGoogle,\n    logout,\n    resetPassword,\n    updateUserEmail,\n    updateUserPassword,\n    updateUserProfile\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n\n_c = AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["D:/Rim/react-app/src/contexts/AuthContext.js"],"names":["React","useContext","useState","useEffect","auth","createUserWithEmailAndPassword","onAuthStateChanged","signInWithEmailAndPassword","signOut","sendPasswordResetEmail","updateEmail","updatePassword","updateProfile","FacebookAuthProvider","GoogleAuthProvider","signInWithPopup","AuthContext","createContext","useAuth","AuthProvider","children","user","setUser","loading","setLoading","signup","email","password","login","loginWithFacebook","fbProvider","addScope","setCustomParameters","display","result","loginWithGoogle","ggProvider","login_hint","logout","resetPassword","updateUserEmail","updateUserPassword","updateUserProfile","name","url","displayName","photoURL","unsubscribe","currentUser","console","log","value"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\r\nimport { auth } from \"../firebase/config\";\r\nimport {\r\n  createUserWithEmailAndPassword,\r\n  onAuthStateChanged,\r\n  signInWithEmailAndPassword,\r\n  signOut,\r\n  sendPasswordResetEmail,\r\n  updateEmail,\r\n  updatePassword,\r\n  updateProfile,\r\n  FacebookAuthProvider,\r\n  GoogleAuthProvider,\r\n  signInWithPopup,\r\n} from \"@firebase/auth\";\r\n\r\nconst AuthContext = React.createContext();\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const signup = (email, password) =>\r\n    createUserWithEmailAndPassword(auth, email, password);\r\n\r\n  const login = (email, password) =>\r\n    signInWithEmailAndPassword(auth, email, password);\r\n\r\n  const loginWithFacebook = async () => {\r\n    const fbProvider = new FacebookAuthProvider();\r\n    fbProvider.addScope(\"user_birthday\");\r\n    fbProvider.setCustomParameters({\r\n      display: \"popup\", //Login dưới dạng popup\r\n    });\r\n    const result = await signInWithPopup(auth, fbProvider);\r\n    // const fbToken = result.credential.accessToken;\r\n    setUser(result.user);\r\n  };\r\n\r\n  const loginWithGoogle = async () => {\r\n    const ggProvider = new GoogleAuthProvider();\r\n    ggProvider.addScope(\"https://www.googleapis.com/auth/contacts.readonly\");\r\n    ggProvider.setCustomParameters({\r\n      login_hint: \"user@example.com\",\r\n    });\r\n    const result = await signInWithPopup(auth, ggProvider);\r\n    // const credential = ggProvider.credentialFromResult(auth, result);\r\n    // const ggToken = credential.accessToken;\r\n\r\n    setUser(result.user);\r\n  };\r\n\r\n  const logout = () => signOut(auth);\r\n\r\n  const resetPassword = (email) => sendPasswordResetEmail(auth, email);\r\n\r\n  const updateUserEmail = (email) => updateEmail(user, email);\r\n\r\n  const updateUserPassword = (password) => updatePassword(user, password);\r\n\r\n  const updateUserProfile = (name, url) =>\r\n    updateProfile(user, {\r\n      displayName: name,\r\n      photoURL: url,\r\n    });\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = onAuthStateChanged(auth, (currentUser) => {\r\n      if (currentUser) {\r\n        setUser(currentUser);\r\n      }\r\n      console.log({ user });\r\n      setLoading(false);\r\n    });\r\n\r\n    return unsubscribe;\r\n  }, []);\r\n\r\n  const value = {\r\n    user,\r\n    signup,\r\n    login,\r\n    loginWithFacebook,\r\n    loginWithGoogle,\r\n    logout,\r\n    resetPassword,\r\n    updateUserEmail,\r\n    updateUserPassword,\r\n    updateUserProfile,\r\n  };\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}