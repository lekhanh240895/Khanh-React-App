{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { db } from \"../../firebase/config\";\nimport { collection, onSnapshot, orderBy } from \"firebase/firestore\";\nexport function useFilestore(collections, condition) {\n  _s();\n\n  const [documents, setDocuments] = useState([]);\n  useEffect(() => {\n    let collectionRef = orderBy(collection(db, collections), \"createdAt\");\n    const unsubcribe = onSnapshot(collectionRef, snapshot => {\n      if (condition) {\n        if (!condition.compareValue || !condition.compareValue.length) {\n          return;\n        }\n\n        collectionRef = collectionRef.where(condition.fieldValue, condition.operator, condition.compareValue);\n      }\n\n      const data = snapshot.docs.map(doc => ({ ...doc.data(),\n        id: doc.id\n      }));\n      setDocuments(data);\n    });\n    return unsubcribe;\n  }, [collections, condition]);\n  return documents;\n}\n\n_s(useFilestore, \"yer53JIs/Enm5EWW99jBywEKfS0=\");","map":{"version":3,"sources":["D:/Rim/react-app/src/components/hooks/useFilestore.js"],"names":["useEffect","useState","db","collection","onSnapshot","orderBy","useFilestore","collections","condition","documents","setDocuments","collectionRef","unsubcribe","snapshot","compareValue","length","where","fieldValue","operator","data","docs","map","doc","id"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,EAAT,QAAmB,uBAAnB;AACA,SAASC,UAAT,EAAqBC,UAArB,EAAiCC,OAAjC,QAAgD,oBAAhD;AAEA,OAAO,SAASC,YAAT,CAAsBC,WAAtB,EAAmCC,SAAnC,EAA8C;AAAA;;AACnD,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,EAAD,CAA1C;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIW,aAAa,GAAGN,OAAO,CAACF,UAAU,CAACD,EAAD,EAAKK,WAAL,CAAX,EAA8B,WAA9B,CAA3B;AACA,UAAMK,UAAU,GAAGR,UAAU,CAACO,aAAD,EAAiBE,QAAD,IAAc;AACzD,UAAIL,SAAJ,EAAe;AACb,YAAI,CAACA,SAAS,CAACM,YAAX,IAA2B,CAACN,SAAS,CAACM,YAAV,CAAuBC,MAAvD,EAA+D;AAC7D;AACD;;AACDJ,QAAAA,aAAa,GAAGA,aAAa,CAACK,KAAd,CACdR,SAAS,CAACS,UADI,EAEdT,SAAS,CAACU,QAFI,EAGdV,SAAS,CAACM,YAHI,CAAhB;AAKD;;AAED,YAAMK,IAAI,GAAGN,QAAQ,CAACO,IAAT,CAAcC,GAAd,CAAmBC,GAAD,KAAU,EACvC,GAAGA,GAAG,CAACH,IAAJ,EADoC;AAEvCI,QAAAA,EAAE,EAAED,GAAG,CAACC;AAF+B,OAAV,CAAlB,CAAb;AAIAb,MAAAA,YAAY,CAACS,IAAD,CAAZ;AACD,KAjB4B,CAA7B;AAkBA,WAAOP,UAAP;AACD,GArBQ,EAqBN,CAACL,WAAD,EAAcC,SAAd,CArBM,CAAT;AAuBA,SAAOC,SAAP;AACD;;GA1BeH,Y","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { db } from \"../../firebase/config\";\r\nimport { collection, onSnapshot, orderBy } from \"firebase/firestore\";\r\n\r\nexport function useFilestore(collections, condition) {\r\n  const [documents, setDocuments] = useState([]);\r\n  useEffect(() => {\r\n    let collectionRef = orderBy(collection(db, collections), \"createdAt\");\r\n    const unsubcribe = onSnapshot(collectionRef, (snapshot) => {\r\n      if (condition) {\r\n        if (!condition.compareValue || !condition.compareValue.length) {\r\n          return;\r\n        }\r\n        collectionRef = collectionRef.where(\r\n          condition.fieldValue,\r\n          condition.operator,\r\n          condition.compareValue\r\n        );\r\n      }\r\n\r\n      const data = snapshot.docs.map((doc) => ({\r\n        ...doc.data(),\r\n        id: doc.id,\r\n      }));\r\n      setDocuments(data);\r\n    });\r\n    return unsubcribe;\r\n  }, [collections, condition]);\r\n\r\n  return documents;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}