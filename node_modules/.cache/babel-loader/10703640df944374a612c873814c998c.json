{"ast":null,"code":"var _jsxFileName = \"D:\\\\Rim\\\\react-app\\\\src\\\\components\\\\TodoApp\\\\InputWithLabel.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const InputWithLabel = ({\n  isFocused,\n  checked,\n  value,\n  type = \"text\",\n  id,\n  children,\n  onInputChange\n}) => {\n  _s();\n\n  const inputRef = React.useRef(null);\n\n  if (isFocused && inputRef.current) {\n    inputRef.current.focus();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      width: \"90%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      style: {\n        width: \"70%\",\n        margin: \"10px\",\n        textTransform: \"capitalize\"\n      },\n      htmlFor: id,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n      style: {\n        width: \"20%\"\n      },\n      value: value,\n      id: id,\n      type: type,\n      onChange: onInputChange,\n      checked: checked,\n      ref: inputRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 7\n  }, this);\n};\n\n_s(InputWithLabel, \"iD9XNNsNOlNDckBemnvlLS+aHYk=\");\n\n_c = InputWithLabel;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputWithLabel\");","map":{"version":3,"sources":["D:/Rim/react-app/src/components/TodoApp/InputWithLabel.js"],"names":["React","InputWithLabel","isFocused","checked","value","type","id","children","onInputChange","inputRef","useRef","current","focus","display","width","margin","textTransform"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAO,MAAMC,cAAc,GAAG,CAAC;AAC3BC,EAAAA,SAD2B;AAE3BC,EAAAA,OAF2B;AAG3BC,EAAAA,KAH2B;AAI3BC,EAAAA,IAAI,GAAG,MAJoB;AAK3BC,EAAAA,EAL2B;AAM3BC,EAAAA,QAN2B;AAO3BC,EAAAA;AAP2B,CAAD,KAQtB;AAAA;;AACJ,QAAMC,QAAQ,GAAGT,KAAK,CAACU,MAAN,CAAa,IAAb,CAAjB;;AACA,MAAIR,SAAS,IAAIO,QAAQ,CAACE,OAA1B,EAAmC;AACjCF,IAAAA,QAAQ,CAACE,OAAT,CAAiBC,KAAjB;AACD;;AAED,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAE,MAAX;AAAmBC,MAAAA,KAAK,EAAE;AAA1B,KAAZ;AAAA,4BACE;AACE,MAAA,KAAK,EAAE;AAAEA,QAAAA,KAAK,EAAE,KAAT;AAAgBC,QAAAA,MAAM,EAAE,MAAxB;AAAgCC,QAAAA,aAAa,EAAE;AAA/C,OADT;AAEE,MAAA,OAAO,EAAEV,EAFX;AAAA,gBAIGC;AAJH;AAAA;AAAA;AAAA;AAAA,YADF,uBAQE;AACE,MAAA,KAAK,EAAE;AAAEO,QAAAA,KAAK,EAAE;AAAT,OADT;AAEE,MAAA,KAAK,EAAEV,KAFT;AAGE,MAAA,EAAE,EAAEE,EAHN;AAIE,MAAA,IAAI,EAAED,IAJR;AAKE,MAAA,QAAQ,EAAEG,aALZ;AAME,MAAA,OAAO,EAAEL,OANX;AAOE,MAAA,GAAG,EAAEM;AAPP;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CAlCI;;GAAMR,c;;KAAAA,c","sourcesContent":["import React from 'react'\r\n\r\nexport const InputWithLabel = ({\r\n    isFocused,\r\n    checked,\r\n    value,\r\n    type = \"text\",\r\n    id,\r\n    children,\r\n    onInputChange,\r\n  }) => {\r\n    const inputRef = React.useRef(null);\r\n    if (isFocused && inputRef.current) {\r\n      inputRef.current.focus();\r\n    }\r\n  \r\n    return (\r\n      <div style={{ display: \"flex\", width: \"90%\" }}>\r\n        <label\r\n          style={{ width: \"70%\", margin: \"10px\", textTransform: \"capitalize\" }}\r\n          htmlFor={id}\r\n        >\r\n          {children}\r\n        </label>\r\n        &nbsp;\r\n        <input\r\n          style={{ width: \"20%\" }}\r\n          value={value}\r\n          id={id}\r\n          type={type}\r\n          onChange={onInputChange}\r\n          checked={checked}\r\n          ref={inputRef}\r\n        />\r\n      </div>\r\n    );\r\n  };"]},"metadata":{},"sourceType":"module"}