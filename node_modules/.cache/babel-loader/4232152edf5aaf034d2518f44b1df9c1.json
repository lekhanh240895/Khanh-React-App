{"ast":null,"code":"var _jsxFileName = \"D:\\\\Rim\\\\react-app\\\\src\\\\components\\\\Homepage\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button, Modal, Form, ProgressBar, Alert, Image } from \"react-bootstrap\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport { Prompt } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { storage } from \"../../firebase/config\";\nimport { ref, uploadBytesResumable, getDownloadURL, deleteObject } from \"firebase/storage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UploadFileModal() {\n  _s();\n\n  const {\n    user\n  } = useAuth();\n  const [error, setError] = useState(\"\");\n  const [show, setShow] = useState(false);\n  const [isBlocking, setIsBlocking] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  /*  const [fileUpload, setFileUpload] = useState(null);\r\n  const [fileUrl, setFileUrl] = useState(\"\"); */\n\n  const [urls, setUrls] = useState([]);\n  const [progress, setProgress] = useState();\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  const handleUploadFile = (path, file) => {\n    setError(\"\");\n    setIsLoading(true);\n\n    if (file) {\n      const imageRef = ref(storage, `${user.email}/${path}/${file.name}`);\n      const metadata = {\n        contentType: \"image/jpeg\"\n      };\n      const uploadTask = uploadBytesResumable(imageRef, file, metadata);\n      uploadTask.on(\"state_changed\", snapshot => {\n        const progress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n        setProgress(progress);\n      }, error => setError(error.message), async () => {\n        const url = await getDownloadURL(imageRef);\n        setUrls(urls.concat(url));\n        setProgress(null);\n        setIsLoading(false);\n      });\n    }\n  };\n\n  console.log(urls);\n  /*  const handleCancelUploadFile = (path, file) => {\r\n    if (file) {\r\n      const imagesRef = ref(storage, `${user.email}/${path}/${file.name}`);\r\n      deleteObject(imagesRef);\r\n      setFileUrl(\"\");\r\n      setFileUpload(null);\r\n    } else {\r\n      setShow(false);\r\n      setFileUrl(\"\");\r\n    }\r\n  }; */\n\n  const handleInputChange = e => {\n    if (e.target.files[0]) {\n      for (let i = 0; i < e.target.files.length; i++) {\n        const newImage = e.target.files[i];\n        handleUploadFile(\"Images\", newImage);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-3  d-flex justify-content-center\",\n    children: [error && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Prompt, {\n      when: isBlocking,\n      message: (location, action) => {\n        return location.pathname.startsWith(\"/profile\") ? true : `Are you sure you want to go to ${location.pathname}?`;\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleShow,\n      children: \"Click\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n          id: \"photo\",\n          type: \"file\",\n          multiple: true,\n          onChange: e => {\n            setIsBlocking(e.target.value.length > 0);\n            handleInputChange(e);\n          },\n          accept: \".jpg, .jpeg, .png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), fileUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: \"relative\"\n          },\n          className: \"d-flex flex-column justify-content-center align-items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: \"absolute\",\n              top: \"1.25rem\",\n              right: \"0.75rem\",\n              cursor: \"pointer\"\n            },\n            children: !isLoading && /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              className: \"closed-icon\",\n              icon: [\"fas\", \"times\"],\n              size: \"lg\",\n              onClick: () => handleCancelUploadFile(\"Images-upload\", fileUpload)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Image, {\n              variant: \"top\",\n              src: fileUrl,\n              alt: \"Avatar\",\n              className: \"my-3\",\n              fluid: true,\n              style: {\n                borderRadius: \"10px\",\n                width: \"500px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this), progress && /*#__PURE__*/_jsxDEV(ProgressBar, {\n            animated: true,\n            now: progress,\n            \"visibility-hidden\": true,\n            label: `Loading...${progress}%`,\n            max: \"100\",\n            className: \"w-75 mb-3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: handleClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UploadFileModal, \"PD5epWnEsSzcj7xuAcT77EjCXIQ=\", false, function () {\n  return [useAuth];\n});\n\n_c = UploadFileModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadFileModal\");","map":{"version":3,"sources":["D:/Rim/react-app/src/components/Homepage/index.js"],"names":["React","useState","Button","Modal","Form","ProgressBar","Alert","Image","useAuth","Prompt","FontAwesomeIcon","storage","ref","uploadBytesResumable","getDownloadURL","deleteObject","UploadFileModal","user","error","setError","show","setShow","isBlocking","setIsBlocking","isLoading","setIsLoading","urls","setUrls","progress","setProgress","handleClose","handleShow","handleUploadFile","path","file","imageRef","email","name","metadata","contentType","uploadTask","on","snapshot","bytesTransferred","totalBytes","message","url","concat","console","log","handleInputChange","e","target","files","i","length","newImage","location","action","pathname","startsWith","value","fileUrl","position","top","right","cursor","handleCancelUploadFile","fileUpload","borderRadius","width"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  Form,\r\n  ProgressBar,\r\n  Alert,\r\n  Image,\r\n} from \"react-bootstrap\";\r\n\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport { Prompt } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { storage } from \"../../firebase/config\";\r\nimport {\r\n  ref,\r\n  uploadBytesResumable,\r\n  getDownloadURL,\r\n  deleteObject,\r\n} from \"firebase/storage\";\r\n\r\nexport default function UploadFileModal() {\r\n  const { user } = useAuth();\r\n  const [error, setError] = useState(\"\");\r\n  const [show, setShow] = useState(false);\r\n  const [isBlocking, setIsBlocking] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  /*  const [fileUpload, setFileUpload] = useState(null);\r\n  const [fileUrl, setFileUrl] = useState(\"\"); */\r\n\r\n  const [urls, setUrls] = useState([]);\r\n\r\n  const [progress, setProgress] = useState();\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const handleUploadFile = (path, file) => {\r\n    setError(\"\");\r\n    setIsLoading(true);\r\n\r\n    if (file) {\r\n      const imageRef = ref(storage, `${user.email}/${path}/${file.name}`);\r\n      const metadata = {\r\n        contentType: \"image/jpeg\",\r\n      };\r\n      const uploadTask = uploadBytesResumable(imageRef, file, metadata);\r\n\r\n      uploadTask.on(\r\n        \"state_changed\",\r\n        (snapshot) => {\r\n          const progress =\r\n            (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n          setProgress(progress);\r\n        },\r\n        (error) => setError(error.message),\r\n        async () => {\r\n          const url = await getDownloadURL(imageRef);\r\n          setUrls(urls.concat(url));\r\n          setProgress(null);\r\n          setIsLoading(false);\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  console.log(urls);\r\n  /*  const handleCancelUploadFile = (path, file) => {\r\n    if (file) {\r\n      const imagesRef = ref(storage, `${user.email}/${path}/${file.name}`);\r\n      deleteObject(imagesRef);\r\n      setFileUrl(\"\");\r\n      setFileUpload(null);\r\n    } else {\r\n      setShow(false);\r\n      setFileUrl(\"\");\r\n    }\r\n  }; */\r\n\r\n  const handleInputChange = (e) => {\r\n    if (e.target.files[0]) {\r\n      for (let i = 0; i < e.target.files.length; i++) {\r\n        const newImage = e.target.files[i];\r\n        handleUploadFile(\"Images\", newImage);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"mb-3  d-flex justify-content-center\">\r\n      {error && <Alert variant=\"danger\">{error}</Alert>}\r\n\r\n      <Prompt\r\n        when={isBlocking}\r\n        message={(location, action) => {\r\n          return location.pathname.startsWith(\"/profile\")\r\n            ? true\r\n            : `Are you sure you want to go to ${location.pathname}?`;\r\n        }}\r\n      />\r\n\r\n      <Button onClick={handleShow}>Click</Button>\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Body>\r\n          <Form.Control\r\n            id=\"photo\"\r\n            type=\"file\"\r\n            multiple\r\n            onChange={(e) => {\r\n              setIsBlocking(e.target.value.length > 0);\r\n              handleInputChange(e);\r\n            }}\r\n            accept=\".jpg, .jpeg, .png\"\r\n          ></Form.Control>\r\n\r\n          {fileUrl && (\r\n            <div\r\n              style={{ position: \"relative\" }}\r\n              className=\"d-flex flex-column justify-content-center align-items-center\"\r\n            >\r\n              <div\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: \"1.25rem\",\r\n                  right: \"0.75rem\",\r\n                  cursor: \"pointer\",\r\n                }}\r\n              >\r\n                {!isLoading && (\r\n                  <FontAwesomeIcon\r\n                    className=\"closed-icon\"\r\n                    icon={[\"fas\", \"times\"]}\r\n                    size=\"lg\"\r\n                    onClick={() =>\r\n                      handleCancelUploadFile(\"Images-upload\", fileUpload)\r\n                    }\r\n                  />\r\n                )}\r\n              </div>\r\n\r\n              <div>\r\n                <Image\r\n                  variant=\"top\"\r\n                  src={fileUrl}\r\n                  alt=\"Avatar\"\r\n                  className=\"my-3\"\r\n                  fluid\r\n                  style={{\r\n                    borderRadius: \"10px\",\r\n                    width: \"500px\",\r\n                  }}\r\n                />\r\n              </div>\r\n\r\n              {progress && (\r\n                <ProgressBar\r\n                  animated\r\n                  now={progress}\r\n                  visibility-hidden\r\n                  label={`Loading...${progress}%`}\r\n                  max=\"100\"\r\n                  className=\"w-75 mb-3\"\r\n                />\r\n              )}\r\n            </div>\r\n          )}\r\n        </Modal.Body>\r\n\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\">Save Changes</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}