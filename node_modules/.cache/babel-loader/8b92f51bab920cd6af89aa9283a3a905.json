{"ast":null,"code":"import React from'react';import*as SC from'./style';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export var InputWithLabel=function InputWithLabel(_ref){var isFocused=_ref.isFocused,children=_ref.children,_ref$type=_ref.type,type=_ref$type===void 0?\"text\":_ref$type,id=_ref.id,value=_ref.value,onInputChange=_ref.onInputChange,checked=_ref.checked;var inputRef=React.useRef(null);React.useEffect(function(){if(isFocused&&inputRef.current){inputRef.current.focus();}});return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(SC.StyledLabel,{htmlFor:id,children:[\" \",children]}),\"\\xA0\",/*#__PURE__*/_jsx(SC.StyledInput,{id:id,type:type,value:value,onChange:onInputChange,ref:inputRef,checked:checked})]});};","map":{"version":3,"sources":["D:/Rim/react-app/src/components/InputWithLabel.js"],"names":["React","SC","InputWithLabel","isFocused","children","type","id","value","onInputChange","checked","inputRef","useRef","useEffect","current","focus"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,GAAKC,CAAAA,EAAZ,KAAoB,SAApB,C,6IACA,MAAO,IAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,MAQtB,IAPJC,CAAAA,SAOI,MAPJA,SAOI,CANJC,QAMI,MANJA,QAMI,gBALJC,IAKI,CALJA,IAKI,oBALG,MAKH,WAJJC,EAII,MAJJA,EAII,CAHJC,KAGI,MAHJA,KAGI,CAFJC,aAEI,MAFJA,aAEI,CADJC,OACI,MADJA,OACI,CACJ,GAAMC,CAAAA,QAAQ,CAAGV,KAAK,CAACW,MAAN,CAAa,IAAb,CAAjB,CACAX,KAAK,CAACY,SAAN,CAAgB,UAAM,CACpB,GAAIT,SAAS,EAAIO,QAAQ,CAACG,OAA1B,CAAmC,CACjCH,QAAQ,CAACG,OAAT,CAAiBC,KAAjB,GACD,CACF,CAJD,EAMA,mBACE,wCACE,MAAC,EAAD,CAAI,WAAJ,EAAgB,OAAO,CAAER,EAAzB,eAA+BF,QAA/B,GADF,qBAGE,KAAC,EAAD,CAAI,WAAJ,EACE,EAAE,CAAEE,EADN,CAEE,IAAI,CAAED,IAFR,CAGE,KAAK,CAAEE,KAHT,CAIE,QAAQ,CAAEC,aAJZ,CAKE,GAAG,CAAEE,QALP,CAME,OAAO,CAAED,OANX,EAHF,GADF,CAcD,CA9BI","sourcesContent":["import React from 'react'\r\nimport * as SC from './style';\r\nexport const InputWithLabel = ({\r\n    isFocused,\r\n    children,\r\n    type = \"text\",\r\n    id,\r\n    value,\r\n    onInputChange,\r\n    checked,\r\n  }) => {\r\n    const inputRef = React.useRef(null);\r\n    React.useEffect(() => {\r\n      if (isFocused && inputRef.current) {\r\n        inputRef.current.focus();\r\n      }\r\n    });\r\n  \r\n    return (\r\n      <>\r\n        <SC.StyledLabel htmlFor={id}> {children}</SC.StyledLabel>\r\n        &nbsp;\r\n        <SC.StyledInput\r\n          id={id}\r\n          type={type}\r\n          value={value}\r\n          onChange={onInputChange}\r\n          ref={inputRef}\r\n          checked={checked}\r\n        ></SC.StyledInput>\r\n      </>\r\n    );\r\n  };"]},"metadata":{},"sourceType":"module"}