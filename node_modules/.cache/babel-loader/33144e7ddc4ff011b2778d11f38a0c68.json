{"ast":null,"code":"var _jsxFileName = \"D:\\\\Rim\\\\react-app\\\\src\\\\components\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport axios from \"axios\";\nimport { useCallback, useMemo, useReducer, useEffect, useState } from \"react\";\nimport * as SC from \"./style\";\n/* import TodoApp from \"./TodoApp\"; */\n\nimport { SearchForm } from \"./SearchForm\";\nimport { List } from \"./List\";\nimport { LastSearches } from \"./LastSearches\";\nimport { usePersistentState } from \"./hooks/Custom Hook\";\nimport storiesReducer from \"./reducers\"; //https://hn.algolia.com/api Hacker News API\n\n/* const API_ENDPOINT = \"https://hn.algolia.com/api/v1/search?query=\"; */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE = \"https://hn.algolia.com/api/v1\";\nconst API_SEARCH = \"/search\";\nconst PARAM_SEARCH = \"query=\";\n\nconst getUrl = searchTerm => `${API_BASE}${API_SEARCH}?${PARAM_SEARCH}${searchTerm}`;\n\nconst App = () => {\n  _s();\n\n  const [stories, dispatchStories] = useReducer(storiesReducer, {\n    data: [],\n    isLoading: false,\n    isError: false\n  });\n  const [searchTerm, setSearchTerm] = usePersistentState(\"search\", \"React\");\n  const [urls, setUrls] = useState([getUrl(searchTerm)]); //Sorting\n\n  const extractSearchTerm = url => url.replace(API_ENDPOINT, \"\");\n\n  const getLastSearches = urls => urls.reduce((result, url, index) => {\n    const searchTerm = extractSearchTerm(url);\n\n    if (index === 0) {\n      return result.concat(searchTerm);\n    }\n\n    const previousSearchTerm = result[result.length - 1];\n\n    if (previousSearchTerm === searchTerm) {\n      return result;\n    } else {\n      return result.concat(searchTerm);\n    }\n  }, []).slice(-6).slice(0, -1);\n\n  const lastSearchs = getLastSearches(urls); //Fetch data from server\n\n  const handleFetchStories = useCallback(async () => {\n    dispatchStories({\n      type: \"STORIES_FETCH_INIT\"\n    });\n\n    try {\n      const lastUrl = urls[urls.length - 1];\n      const respone = await axios.get(lastUrl);\n      dispatchStories({\n        type: \"STORIES_FETCH_SUCCESS\",\n        payload: respone.data.hits\n      });\n    } catch {\n      dispatchStories({\n        type: \"STORIES_FETCH_FAILURE\"\n      });\n    }\n  }, [urls]);\n  useEffect(() => {\n    handleFetchStories();\n  }, [handleFetchStories]);\n  const handleRemoveStory = useCallback(item => {\n    dispatchStories({\n      type: \"REMOVE_STORY\",\n      payload: item\n    });\n  }, []);\n  const handleSearchInput = useCallback(e => setSearchTerm(e.target.value), [setSearchTerm]);\n\n  const handleSearchSubmit = e => {\n    handleSearch(searchTerm);\n    e.preventDefault();\n  };\n\n  const handleLastSearch = searchTerm => {\n    handleSearch(searchTerm);\n    setSearchTerm(searchTerm);\n  };\n\n  const handleSearch = useCallback(searchTerm => {\n    const url = getUrl(searchTerm);\n    setUrls(urls.concat(url));\n  }, [urls]); //useMemo get sum ... of stories\n\n  const getSumComments = stories => {\n    return stories.data.reduce((result, value) => result + value.num_comments, 0);\n  };\n\n  const sumComments = useMemo(() => getSumComments(stories), [stories]);\n  return /*#__PURE__*/_jsxDEV(SC.StyledContainer, {\n    children: [/*#__PURE__*/_jsxDEV(SC.StyledHeadlinePrimary, {\n      children: [\"My Hacker Stories with \", sumComments, \" comments\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchForm, {\n      searchTerm: searchTerm,\n      onSearchSubmit: handleSearchSubmit,\n      onSearchInput: handleSearchInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LastSearches, {\n      lastSearchs: lastSearchs,\n      onLastSearch: handleLastSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), stories.isError && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Oops! Something went wrong...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }, this), stories.isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(List, {\n      list: stories.data,\n      onRemoveItem: handleRemoveStory\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"CI1PII12/5CgaYb8rigg0fKubJw=\", false, function () {\n  return [usePersistentState];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/Rim/react-app/src/components/App.js"],"names":["React","axios","useCallback","useMemo","useReducer","useEffect","useState","SC","SearchForm","List","LastSearches","usePersistentState","storiesReducer","API_BASE","API_SEARCH","PARAM_SEARCH","getUrl","searchTerm","App","stories","dispatchStories","data","isLoading","isError","setSearchTerm","urls","setUrls","extractSearchTerm","url","replace","API_ENDPOINT","getLastSearches","reduce","result","index","concat","previousSearchTerm","length","slice","lastSearchs","handleFetchStories","type","lastUrl","respone","get","payload","hits","handleRemoveStory","item","handleSearchInput","e","target","value","handleSearchSubmit","handleSearch","preventDefault","handleLastSearch","getSumComments","num_comments","sumComments"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport { useCallback, useMemo, useReducer, useEffect, useState } from \"react\";\nimport * as SC from \"./style\";\n/* import TodoApp from \"./TodoApp\"; */\nimport { SearchForm } from \"./SearchForm\";\nimport { List } from \"./List\";\nimport { LastSearches } from \"./LastSearches\";\nimport { usePersistentState } from \"./hooks/Custom Hook\";\nimport storiesReducer from \"./reducers\";\n\n\n//https://hn.algolia.com/api Hacker News API\n\n/* const API_ENDPOINT = \"https://hn.algolia.com/api/v1/search?query=\"; */\nconst API_BASE = \"https://hn.algolia.com/api/v1\";\nconst API_SEARCH = \"/search\"\nconst PARAM_SEARCH = \"query=\"\nconst getUrl = (searchTerm) => `${API_BASE}${API_SEARCH}?${PARAM_SEARCH}${searchTerm}`;\n\nconst App = () => {\n  const [stories, dispatchStories] = useReducer(storiesReducer, {\n    data: [],\n    isLoading: false,\n    isError: false,\n  });\n\n  const [searchTerm, setSearchTerm] = usePersistentState(\"search\", \"React\");\n  const [urls, setUrls] = useState([getUrl(searchTerm)]);\n\n  //Sorting\n  const extractSearchTerm = (url) => url.replace(API_ENDPOINT, \"\");\n  const getLastSearches = (urls) =>\n    urls\n      .reduce((result, url, index) => {\n        const searchTerm = extractSearchTerm(url);\n        if (index === 0) {\n          return result.concat(searchTerm);\n        }\n        const previousSearchTerm = result[result.length - 1];\n        if (previousSearchTerm === searchTerm) {\n          return result;\n        } else {\n          return result.concat(searchTerm);\n        }\n      }, [])\n      .slice(-6)\n      .slice(0, -1);\n\n  const lastSearchs = getLastSearches(urls);\n\n  //Fetch data from server\n  const handleFetchStories = useCallback(async () => {\n    dispatchStories({\n      type: \"STORIES_FETCH_INIT\",\n    });\n\n    try {\n      const lastUrl = urls[urls.length - 1];\n      const respone = await axios.get(lastUrl);\n      dispatchStories({\n        type: \"STORIES_FETCH_SUCCESS\",\n        payload: respone.data.hits,\n      });\n    } catch {\n      dispatchStories({\n        type: \"STORIES_FETCH_FAILURE\",\n      });\n    }\n  }, [urls]);\n\n  useEffect(() => {\n    handleFetchStories();\n  }, [handleFetchStories]);\n\n  const handleRemoveStory = useCallback((item) => {\n    dispatchStories({\n      type: \"REMOVE_STORY\",\n      payload: item,\n    });\n  }, []);\n\n  const handleSearchInput = useCallback(\n    (e) => setSearchTerm(e.target.value),\n    [setSearchTerm]\n  );\n\n  const handleSearchSubmit = (e) => {\n    handleSearch(searchTerm);\n    e.preventDefault();\n  };\n\n  const handleLastSearch = (searchTerm) => {\n    handleSearch(searchTerm);\n    setSearchTerm(searchTerm);\n  };\n\n  const handleSearch = useCallback(\n    (searchTerm) => {\n      const url = getUrl(searchTerm);\n      setUrls(urls.concat(url));\n    },\n    [urls]\n  );\n\n  //useMemo get sum ... of stories\n  const getSumComments = (stories) => {\n    return stories.data.reduce(\n      (result, value) => result + value.num_comments,\n      0\n    );\n  };\n\n  const sumComments = useMemo(() => getSumComments(stories), [stories]);\n\n  return (\n    <SC.StyledContainer>\n      {/*  <TodoApp /> */}\n\n      <SC.StyledHeadlinePrimary>\n        My Hacker Stories with {sumComments} comments\n      </SC.StyledHeadlinePrimary>\n\n      <SearchForm\n        searchTerm={searchTerm}\n        onSearchSubmit={handleSearchSubmit}\n        onSearchInput={handleSearchInput}\n      />\n\n      <LastSearches lastSearchs={lastSearchs} onLastSearch={handleLastSearch} />\n\n      {stories.isError && (\n        <p>\n          <strong>Oops! Something went wrong...</strong>\n        </p>\n      )}\n\n      {stories.isLoading ? (\n        <p>\n          <strong>Loading...</strong>\n        </p>\n      ) : (\n        <List list={stories.data} onRemoveItem={handleRemoveStory} />\n      )}\n    </SC.StyledContainer>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}