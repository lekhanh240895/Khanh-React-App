{"ast":null,"code":"var _jsxFileName = \"D:\\\\Rim\\\\react-app\\\\src\\\\components\\\\UpdateProfile\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useEffect, useMemo } from \"react\";\nimport { Form, Card, Button, Alert, ProgressBar } from \"react-bootstrap\";\nimport { Link, useHistory, Prompt } from \"react-router-dom\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport { storage } from \"../../firebase/config\";\nimport { ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\nimport { v1 as uuidv1 } from \"uuid\"; // Create timestamp uuid: uuidv1()\n// Create random uuid: uuidv4()\n\nimport { useAppContext } from \"../../contexts/AppContext\";\nimport useFirestore from \"../hooks/useFirestore\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UpdateProfile = () => {\n  _s();\n\n  var _displayNameRef$curre, _emailRef$current, _passwordRef$current, _passwordConfirmRef$c;\n\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const passwordConfirmRef = useRef();\n  const displayNameRef = useRef();\n  const [error, setError] = useState(\"\");\n  const {\n    user,\n    updateUserEmail,\n    updateUserPassword,\n    updateUserProfile\n  } = useAuth();\n  const [isSucced, setIsSucced] = useState(false);\n  const history = useHistory();\n  const [isBlocking, setIsBlocking] = useState(false);\n  const [photoUrl, photoUrlUpload] = useState(false);\n  const [fileUpload, setFileUpload] = useState(null);\n  const [fileUrl, setFileUrl] = useState(\"\");\n  const [progress, setProgress] = useState();\n  const [isLoading, setIsLoading] = useState(false);\n  const {\n    updateDocument\n  } = useAppContext();\n  useEffect(() => {\n    if (user.displayName !== displayNameRef.current.value || fileUrl || emailRef.current.value !== user.email || passwordRef.current.value || passwordConfirmRef.current.value) {\n      setIsLoading(true);\n    } else {\n      setIsLoading(false);\n    } //eslint-disable-next-line\n\n  }, [fileUrl, (_displayNameRef$curre = displayNameRef.current) === null || _displayNameRef$curre === void 0 ? void 0 : _displayNameRef$curre.value, (_emailRef$current = emailRef.current) === null || _emailRef$current === void 0 ? void 0 : _emailRef$current.value, (_passwordRef$current = passwordRef.current) === null || _passwordRef$current === void 0 ? void 0 : _passwordRef$current.value, (_passwordConfirmRef$c = passwordConfirmRef.current) === null || _passwordConfirmRef$c === void 0 ? void 0 : _passwordConfirmRef$c.value]);\n  const condition = useMemo(() => {\n    return {\n      fieldName: \"email\",\n      operator: \"==\",\n      compareValue: user.email\n    };\n  }, [user.email]);\n  const userDocs = useFirestore(\"users\", condition);\n\n  const handleUpdateDocument = () => {\n    updateDocument(\"users\", userDocs[0].id, {\n      displayName: user.displayName,\n      email: user.email,\n      photoURL: user.photoURL,\n      uid: user.email\n    });\n  }; //Upload photo to Firebase Storage\n\n\n  const handleUploadFile = (path, file) => {\n    const imagesRef = ref(storage, `${user.email}/${path}/${file.name}`);\n    const metadata = {\n      contentType: \"image/jpeg\"\n    };\n    const uploadTask = uploadBytesResumable(imagesRef, file, metadata);\n    uploadTask.on(\"state_changed\", snapshot => {\n      const progress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n      setProgress(progress);\n    }, error => setError(error.message), async () => {\n      try {\n        const url = await getDownloadURL(imagesRef);\n        setFileUrl(url);\n        setProgress(null);\n      } catch (error) {\n        setError(error.message);\n      }\n    });\n  };\n\n  const handleInputChange = async e => {\n    if (e.target.files[0]) {\n      photoUrlUpload(false);\n      handleUploadFile(\"Images-upload\", e.target.files[0]);\n      setFileUpload(e.target.files[0]);\n    } else {\n      photoUrlUpload(true);\n      setFileUpload(null);\n    }\n  };\n\n  console.log(fileUpload);\n\n  const handleInputURLChange = async e => {\n    if (e.target.value.length > 0) {\n      // Get Blob File from an URL\n      // let blob = await fetch(urlUpload).then((res) => res.blob());\n      // const { v1: uuidv1 } = require(\"uuid\");\n      // Get a File from an URL\n      const file = await fetch(e.target.value).then(res => res.blob()).then(blobRes => new File([blobRes], uuidv1())).catch(error => setError(error.message));\n      handleUploadFile(\"Images-upload\", file);\n      setFileUpload(file);\n    } else {\n      setFileUpload(null);\n    }\n  }; //Update Profile\n\n\n  const handleUpdateProfileSubmit = e => {\n    e.preventDefault();\n    setIsBlocking(false);\n    setError(\"\");\n    setIsLoading(false);\n\n    if (passwordConfirmRef.current.value !== passwordRef.current.value) {\n      return setError(\"Password does not match\");\n    }\n\n    const promises = [];\n\n    if (passwordRef.current.value) {\n      promises.push(updateUserPassword(passwordRef.current.value));\n    }\n\n    if (emailRef.current.value !== user.email) {\n      promises.push(updateUserEmail(emailRef.current.value));\n    }\n\n    if (fileUrl !== \"\") {\n      promises.push(updateUserProfile(displayNameRef.current.value, fileUrl));\n    } else {\n      promises.push(updateUserProfile(displayNameRef.current.value, user.profileURL));\n    }\n\n    Promise.all(promises).then(() => {\n      setIsSucced(true);\n      handleUpdateDocument();\n      handleUploadFile(\"Avatar\", fileUpload);\n      setTimeout(() => history.push(\"/profile\"), 1000);\n    }).catch(error => {\n      const errMessage = error.message.replace(\"Firebase: \", \"\");\n      return setError(errMessage);\n    }).finally(() => {\n      setIsLoading(true);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"d-flex flex-row justify-content-center align-items-center\",\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      style: {\n        maxWidth: \"400px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        as: \"h1\",\n        className: \"mb-4\",\n        children: \"Update Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Prompt, {\n        when: isBlocking,\n        message: \"Seem you are not finishing your works. Are you sure want to leave?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), isSucced && /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"success\",\n        className: \"text-center\",\n        style: {\n          fontWeight: \"600\",\n          fontSize: \"1.5rem\"\n        },\n        children: \"Update Successfull. Redirecting....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleUpdateProfileSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            htmlFor: \"displayName\",\n            children: \"Display Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            id: \"displayName\",\n            type: \"text\",\n            ref: displayNameRef,\n            defaultValue: user === null || user === void 0 ? void 0 : user.displayName,\n            required: true,\n            onChange: e => {\n              setIsBlocking(e.target.value.length > 0);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            htmlFor: \"photo\",\n            children: \"Change Avatar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            id: \"photo\",\n            type: \"file\",\n            onChange: e => {\n              setIsBlocking(e.target.value.length > 0);\n              handleInputChange(e);\n            },\n            accept: \".jpg, .jpeg, .png\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this), fileUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex flex-column justify-content-center align-items-center\",\n            children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n              variant: \"top\",\n              src: fileUrl,\n              alt: \"Avatar\",\n              className: \"w-100 my-3\",\n              style: {\n                height: \"auto\",\n                borderRadius: \"10px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: [\"fas\", \"times\"],\n              onClick: () => setFileUrl(\"\"),\n              size: \"lg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 17\n            }, this), progress && /*#__PURE__*/_jsxDEV(ProgressBar, {\n              animated: true,\n              now: progress,\n              label: `Loading...${progress}%`,\n              max: \"100\",\n              className: \"w-75 mb-3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            htmlFor: \"URLphoto\",\n            children: \"URL of your photo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            id: \"URLphoto\",\n            type: \"text\",\n            onChange: e => {\n              setIsBlocking(e.target.value.length > 0);\n              handleInputURLChange(e);\n            },\n            disabled: !photoUrl,\n            placeholder: \"E.g: https://picsum.photos/50\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            htmlFor: \"email\",\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            id: \"email\",\n            type: \"email\",\n            ref: emailRef,\n            required: true,\n            defaultValue: user.email,\n            onChange: e => setIsBlocking(e.target.value.length > 0)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            htmlFor: \"password\",\n            children: \"New password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            id: \"password\",\n            type: \"password\",\n            ref: passwordRef,\n            placeholder: \"Leave it blank to keep your password\",\n            onChange: e => setIsBlocking(e.target.value.length > 0)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            htmlFor: \"passwordConfirm\",\n            children: \"Confirm New Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            id: \"passwordConfirm\",\n            type: \"password\",\n            ref: passwordConfirmRef,\n            placeholder: \"Leave it blank to keep your password\",\n            onChange: e => setIsBlocking(e.target.value.length > 0)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          disabled: !isLoading,\n          type: \"submit\",\n          className: \"w-100 my-3\",\n          children: \"Update profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/profile\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UpdateProfile, \"zU7k7IHa6A1lunMswW0C/nAnmlk=\", false, function () {\n  return [useAuth, useHistory, useAppContext, useFirestore];\n});\n\n_c = UpdateProfile;\nexport default UpdateProfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateProfile\");","map":{"version":3,"sources":["D:/Rim/react-app/src/components/UpdateProfile/index.js"],"names":["React","useRef","useState","useEffect","useMemo","Form","Card","Button","Alert","ProgressBar","Link","useHistory","Prompt","useAuth","storage","ref","uploadBytesResumable","getDownloadURL","v1","uuidv1","useAppContext","useFirestore","FontAwesomeIcon","UpdateProfile","emailRef","passwordRef","passwordConfirmRef","displayNameRef","error","setError","user","updateUserEmail","updateUserPassword","updateUserProfile","isSucced","setIsSucced","history","isBlocking","setIsBlocking","photoUrl","photoUrlUpload","fileUpload","setFileUpload","fileUrl","setFileUrl","progress","setProgress","isLoading","setIsLoading","updateDocument","displayName","current","value","email","condition","fieldName","operator","compareValue","userDocs","handleUpdateDocument","id","photoURL","uid","handleUploadFile","path","file","imagesRef","name","metadata","contentType","uploadTask","on","snapshot","bytesTransferred","totalBytes","message","url","handleInputChange","e","target","files","console","log","handleInputURLChange","length","fetch","then","res","blob","blobRes","File","catch","handleUpdateProfileSubmit","preventDefault","promises","push","profileURL","Promise","all","setTimeout","errMessage","replace","finally","maxWidth","fontWeight","fontSize","height","borderRadius"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect, useMemo } from \"react\";\r\nimport { Form, Card, Button, Alert, ProgressBar } from \"react-bootstrap\";\r\nimport { Link, useHistory, Prompt } from \"react-router-dom\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport { storage } from \"../../firebase/config\";\r\nimport { ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\r\nimport { v1 as uuidv1 } from \"uuid\";\r\n// Create timestamp uuid: uuidv1()\r\n// Create random uuid: uuidv4()\r\nimport { useAppContext } from \"../../contexts/AppContext\";\r\nimport useFirestore from \"../hooks/useFirestore\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nexport const UpdateProfile = () => {\r\n  const emailRef = useRef();\r\n  const passwordRef = useRef();\r\n  const passwordConfirmRef = useRef();\r\n  const displayNameRef = useRef();\r\n\r\n  const [error, setError] = useState(\"\");\r\n  const { user, updateUserEmail, updateUserPassword, updateUserProfile } =\r\n    useAuth();\r\n  const [isSucced, setIsSucced] = useState(false);\r\n  const history = useHistory();\r\n  const [isBlocking, setIsBlocking] = useState(false);\r\n  const [photoUrl, photoUrlUpload] = useState(false);\r\n\r\n  const [fileUpload, setFileUpload] = useState(null);\r\n  const [fileUrl, setFileUrl] = useState(\"\");\r\n  const [progress, setProgress] = useState();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const { updateDocument } = useAppContext();\r\n\r\n  useEffect(() => {\r\n    if (\r\n      user.displayName !== displayNameRef.current.value ||\r\n      fileUrl ||\r\n      emailRef.current.value !== user.email ||\r\n      passwordRef.current.value ||\r\n      passwordConfirmRef.current.value\r\n    ) {\r\n      setIsLoading(true);\r\n    } else {\r\n      setIsLoading(false);\r\n    }\r\n    //eslint-disable-next-line\r\n  }, [\r\n    fileUrl,\r\n    displayNameRef.current?.value,\r\n    emailRef.current?.value,\r\n    passwordRef.current?.value,\r\n    passwordConfirmRef.current?.value,\r\n  ]);\r\n\r\n  const condition = useMemo(() => {\r\n    return {\r\n      fieldName: \"email\",\r\n      operator: \"==\",\r\n      compareValue: user.email,\r\n    };\r\n  }, [user.email]);\r\n  const userDocs = useFirestore(\"users\", condition);\r\n\r\n  const handleUpdateDocument = () => {\r\n    updateDocument(\"users\", userDocs[0].id, {\r\n      displayName: user.displayName,\r\n      email: user.email,\r\n      photoURL: user.photoURL,\r\n      uid: user.email,\r\n    });\r\n  };\r\n\r\n  //Upload photo to Firebase Storage\r\n  const handleUploadFile = (path, file) => {\r\n    const imagesRef = ref(storage, `${user.email}/${path}/${file.name}`);\r\n    const metadata = {\r\n      contentType: \"image/jpeg\",\r\n    };\r\n    const uploadTask = uploadBytesResumable(imagesRef, file, metadata);\r\n\r\n    uploadTask.on(\r\n      \"state_changed\",\r\n      (snapshot) => {\r\n        const progress =\r\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n        setProgress(progress);\r\n      },\r\n      (error) => setError(error.message),\r\n      async () => {\r\n        try {\r\n          const url = await getDownloadURL(imagesRef);\r\n          setFileUrl(url);\r\n          setProgress(null);\r\n        } catch (error) {\r\n          setError(error.message);\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  const handleInputChange = async (e) => {\r\n    if (e.target.files[0]) {\r\n      photoUrlUpload(false);\r\n      handleUploadFile(\"Images-upload\", e.target.files[0]);\r\n      setFileUpload(e.target.files[0]);\r\n    } else {\r\n      photoUrlUpload(true);\r\n      setFileUpload(null);\r\n    }\r\n  };\r\n\r\n  console.log(fileUpload)\r\n  \r\n  const handleInputURLChange = async (e) => {\r\n    if (e.target.value.length > 0) {\r\n      // Get Blob File from an URL\r\n      // let blob = await fetch(urlUpload).then((res) => res.blob());\r\n\r\n      // const { v1: uuidv1 } = require(\"uuid\");\r\n      // Get a File from an URL\r\n      const file = await fetch(e.target.value)\r\n        .then((res) => res.blob())\r\n        .then((blobRes) => new File([blobRes], uuidv1()))\r\n        .catch((error) => setError(error.message));\r\n\r\n      handleUploadFile(\"Images-upload\", file);\r\n      setFileUpload(file);\r\n    } else {\r\n      setFileUpload(null);\r\n    }\r\n  };\r\n\r\n  //Update Profile\r\n  const handleUpdateProfileSubmit = (e) => {\r\n    e.preventDefault();\r\n    setIsBlocking(false);\r\n    setError(\"\");\r\n    setIsLoading(false);\r\n\r\n    if (passwordConfirmRef.current.value !== passwordRef.current.value) {\r\n      return setError(\"Password does not match\");\r\n    }\r\n\r\n    const promises = [];\r\n\r\n    if (passwordRef.current.value) {\r\n      promises.push(updateUserPassword(passwordRef.current.value));\r\n    }\r\n\r\n    if (emailRef.current.value !== user.email) {\r\n      promises.push(updateUserEmail(emailRef.current.value));\r\n    }\r\n\r\n    if (fileUrl !== \"\") {\r\n      promises.push(updateUserProfile(displayNameRef.current.value, fileUrl));\r\n    } else {\r\n      promises.push(\r\n        updateUserProfile(displayNameRef.current.value, user.profileURL)\r\n      );\r\n    }\r\n\r\n    Promise.all(promises)\r\n      .then(() => {\r\n        setIsSucced(true);\r\n        handleUpdateDocument();\r\n        handleUploadFile(\"Avatar\", fileUpload);\r\n        setTimeout(() => history.push(\"/profile\"), 1000);\r\n      })\r\n      .catch((error) => {\r\n        const errMessage = error.message.replace(\"Firebase: \", \"\");\r\n        return setError(errMessage);\r\n      })\r\n      .finally(() => {\r\n        setIsLoading(true);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Card className=\"d-flex flex-row justify-content-center align-items-center\">\r\n      <Card.Body style={{ maxWidth: \"400px\" }}>\r\n        <Card.Header as=\"h1\" className=\"mb-4\">\r\n          Update Profile\r\n        </Card.Header>\r\n\r\n        <Prompt\r\n          when={isBlocking}\r\n          message=\"Seem you are not finishing your works. Are you sure want to leave?\"\r\n        />\r\n\r\n        {isSucced && (\r\n          <Alert\r\n            variant=\"success\"\r\n            className=\"text-center\"\r\n            style={{ fontWeight: \"600\", fontSize: \"1.5rem\" }}\r\n          >\r\n            Update Successfull. Redirecting....\r\n          </Alert>\r\n        )}\r\n        {error && <Alert variant=\"danger\">{error}</Alert>}\r\n\r\n        <Form onSubmit={handleUpdateProfileSubmit}>\r\n          <Form.Group>\r\n            <Form.Label htmlFor=\"displayName\">Display Name:</Form.Label>\r\n            <Form.Control\r\n              id=\"displayName\"\r\n              type=\"text\"\r\n              ref={displayNameRef}\r\n              defaultValue={user?.displayName}\r\n              required\r\n              onChange={(e) => {\r\n                setIsBlocking(e.target.value.length > 0);\r\n              }}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group>\r\n            <Form.Label htmlFor=\"photo\">Change Avatar</Form.Label>\r\n\r\n            <Form.Control\r\n              id=\"photo\"\r\n              type=\"file\"\r\n              onChange={(e) => {\r\n                setIsBlocking(e.target.value.length > 0);\r\n                handleInputChange(e);\r\n              }}\r\n              accept=\".jpg, .jpeg, .png\"\r\n            ></Form.Control>\r\n\r\n            {fileUrl && (\r\n              <div className=\"d-flex flex-column justify-content-center align-items-center\">\r\n                <Card.Img\r\n                  variant=\"top\"\r\n                  src={fileUrl}\r\n                  alt=\"Avatar\"\r\n                  className=\"w-100 my-3\"\r\n                  style={{\r\n                    height: \"auto\",\r\n                    borderRadius: \"10px\",\r\n                  }}\r\n                />\r\n\r\n                <FontAwesomeIcon\r\n                  icon={[\"fas\", \"times\"]}\r\n                  onClick={() => setFileUrl(\"\")}\r\n                  size=\"lg\"\r\n                />\r\n\r\n                {progress && (\r\n                  <ProgressBar\r\n                    animated\r\n                    now={progress}\r\n                    label={`Loading...${progress}%`}\r\n                    max=\"100\"\r\n                    className=\"w-75 mb-3\"\r\n                  />\r\n                )}\r\n              </div>\r\n            )}\r\n          </Form.Group>\r\n\r\n          <Form.Group>\r\n            <Form.Label htmlFor=\"URLphoto\">URL of your photo</Form.Label>\r\n\r\n            <Form.Control\r\n              id=\"URLphoto\"\r\n              type=\"text\"\r\n              onChange={(e) => {\r\n                setIsBlocking(e.target.value.length > 0);\r\n                handleInputURLChange(e);\r\n              }}\r\n              disabled={!photoUrl}\r\n              placeholder=\"E.g: https://picsum.photos/50\"\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group>\r\n            <Form.Label htmlFor=\"email\">Email:</Form.Label>\r\n            <Form.Control\r\n              id=\"email\"\r\n              type=\"email\"\r\n              ref={emailRef}\r\n              required\r\n              defaultValue={user.email}\r\n              onChange={(e) => setIsBlocking(e.target.value.length > 0)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group>\r\n            <Form.Label htmlFor=\"password\">New password:</Form.Label>\r\n            <Form.Control\r\n              id=\"password\"\r\n              type=\"password\"\r\n              ref={passwordRef}\r\n              placeholder=\"Leave it blank to keep your password\"\r\n              onChange={(e) => setIsBlocking(e.target.value.length > 0)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group>\r\n            <Form.Label htmlFor=\"passwordConfirm\">\r\n              Confirm New Password:\r\n            </Form.Label>\r\n            <Form.Control\r\n              id=\"passwordConfirm\"\r\n              type=\"password\"\r\n              ref={passwordConfirmRef}\r\n              placeholder=\"Leave it blank to keep your password\"\r\n              onChange={(e) => setIsBlocking(e.target.value.length > 0)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Button disabled={!isLoading} type=\"submit\" className=\"w-100 my-3\">\r\n            Update profile\r\n          </Button>\r\n        </Form>\r\n        <div className=\"text-center\">\r\n          <Link to=\"/profile\">Cancel</Link>\r\n        </div>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default UpdateProfile;\r\n"]},"metadata":{},"sourceType":"module"}