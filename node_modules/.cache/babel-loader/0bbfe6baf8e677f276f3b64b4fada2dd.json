{"ast":null,"code":"var _jsxFileName = \"D:\\\\Rim\\\\react-app\\\\src\\\\components\\\\Pagination.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { usePagination, DOTS } from \"./hooks/usePagination\";\nimport classnames from \"classnames\";\nimport \"./Pagination.css\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledPaginationPrevious = styled.li`\n  cursor: pointer;\n  &.page-item {\n    &.disabled {\n      pointer-events: none;\n      font-size: 50px;\n    }\n  }\n`;\n_c = StyledPaginationPrevious;\nexport default function Pagination(props) {\n  _s();\n\n  const {\n    onPageChange,\n    totalCount,\n    siblingCount = 1,\n    currentPage,\n    pageSize,\n    onFetchMore\n  } = props;\n  const paginationRange = usePagination({\n    totalCount,\n    siblingCount,\n    currentPage,\n    pageSize\n  });\n\n  if (currentPage <= 0 & paginationRange.length < 2) {\n    return null;\n  }\n\n  const onPrevious = () => onPageChange(currentPage - 1);\n\n  const onNext = () => {\n    onPageChange(currentPage + 1);\n    onFetchMore();\n  };\n\n  let lastPage = paginationRange[paginationRange.length - 1];\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"pagination pagination-sm\",\n    children: [/*#__PURE__*/_jsxDEV(StyledPaginationPrevious, {\n      className: classnames(\"page-item\", {\n        disabled: currentPage === 1\n      }),\n      onClick: onPrevious,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"page-link\",\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), paginationRange.map((pageNumber, index) => {\n      // If the pageItem is a DOT, render the DOTS unicode character\n      if (pageNumber === DOTS) {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"page-item page-link\",\n          children: \"\\u2026\"\n        }, Math.random(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this);\n      } // Render our Page Pills\n\n\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: classnames(\"page-item\", {\n          active: pageNumber === currentPage\n        }),\n        onClick: () => onPageChange(pageNumber),\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"page-link\",\n          children: pageNumber\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)\n      }, pageNumber, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"li\", {\n      className: classnames(\"page-item\"),\n      onClick: onNext,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"page-link\",\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Pagination, \"19HqfiXoIUMweeBbakf/FHNBwW4=\", false, function () {\n  return [usePagination];\n});\n\n_c2 = Pagination;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StyledPaginationPrevious\");\n$RefreshReg$(_c2, \"Pagination\");","map":{"version":3,"sources":["D:/Rim/react-app/src/components/Pagination.js"],"names":["React","usePagination","DOTS","classnames","styled","StyledPaginationPrevious","li","Pagination","props","onPageChange","totalCount","siblingCount","currentPage","pageSize","onFetchMore","paginationRange","length","onPrevious","onNext","lastPage","disabled","map","pageNumber","index","Math","random","active"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,IAAxB,QAAoC,uBAApC;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAO,kBAAP;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAGA,MAAMC,wBAAwB,GAAGD,MAAM,CAACE,EAAG;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;KAAMD,wB;AAUN,eAAe,SAASE,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AACxC,QAAM;AACJC,IAAAA,YADI;AAEJC,IAAAA,UAFI;AAGJC,IAAAA,YAAY,GAAG,CAHX;AAIJC,IAAAA,WAJI;AAKJC,IAAAA,QALI;AAMJC,IAAAA;AANI,MAOFN,KAPJ;AASA,QAAMO,eAAe,GAAGd,aAAa,CAAC;AACpCS,IAAAA,UADoC;AAEpCC,IAAAA,YAFoC;AAGpCC,IAAAA,WAHoC;AAIpCC,IAAAA;AAJoC,GAAD,CAArC;;AAOA,MAAKD,WAAW,IAAI,CAAhB,GAAsBG,eAAe,CAACC,MAAhB,GAAyB,CAAnD,EAAuD;AACrD,WAAO,IAAP;AACD;;AAED,QAAMC,UAAU,GAAG,MAAMR,YAAY,CAACG,WAAW,GAAG,CAAf,CAArC;;AACA,QAAMM,MAAM,GAAG,MAAM;AACnBT,IAAAA,YAAY,CAACG,WAAW,GAAG,CAAf,CAAZ;AACAE,IAAAA,WAAW;AACZ,GAHD;;AAKA,MAAIK,QAAQ,GAAGJ,eAAe,CAACA,eAAe,CAACC,MAAhB,GAAyB,CAA1B,CAA9B;AAEA,sBACE;AAAI,IAAA,SAAS,EAAC,0BAAd;AAAA,4BACE,QAAC,wBAAD;AACE,MAAA,SAAS,EAAEb,UAAU,CAAC,WAAD,EAAc;AAAEiB,QAAAA,QAAQ,EAAER,WAAW,KAAK;AAA5B,OAAd,CADvB;AAEE,MAAA,OAAO,EAAEK,UAFX;AAAA,6BAIE;AAAM,QAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,YADF,EAQGF,eAAe,CAACM,GAAhB,CAAoB,CAACC,UAAD,EAAaC,KAAb,KAAuB;AAC1C;AACA,UAAID,UAAU,KAAKpB,IAAnB,EAAyB;AACvB,4BACE;AAAwB,UAAA,SAAS,EAAC,qBAAlC;AAAA;AAAA,WAASsB,IAAI,CAACC,MAAL,EAAT;AAAA;AAAA;AAAA;AAAA,gBADF;AAKD,OARyC,CAU1C;;;AACA,0BACE;AAEE,QAAA,SAAS,EAAEtB,UAAU,CAAC,WAAD,EAAc;AACjCuB,UAAAA,MAAM,EAAEJ,UAAU,KAAKV;AADU,SAAd,CAFvB;AAKE,QAAA,OAAO,EAAE,MAAMH,YAAY,CAACa,UAAD,CAL7B;AAAA,+BAOE;AAAM,UAAA,SAAS,EAAC,WAAhB;AAAA,oBAA6BA;AAA7B;AAAA;AAAA;AAAA;AAAA;AAPF,SACOA,UADP;AAAA;AAAA;AAAA;AAAA,cADF;AAWD,KAtBA,CARH,eAgCE;AAAI,MAAA,SAAS,EAAEnB,UAAU,CAAC,WAAD,CAAzB;AAAwC,MAAA,OAAO,EAAEe,MAAjD;AAAA,6BACE;AAAM,QAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAhCF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsCD;;GAnEuBX,U;UAUEN,a;;;MAVFM,U","sourcesContent":["import React from \"react\";\r\nimport { usePagination, DOTS } from \"./hooks/usePagination\";\r\nimport classnames from \"classnames\";\r\nimport \"./Pagination.css\";\r\nimport styled from \"styled-components\";\r\n\r\n\r\nconst StyledPaginationPrevious = styled.li`\r\n  cursor: pointer;\r\n  &.page-item {\r\n    &.disabled {\r\n      pointer-events: none;\r\n      font-size: 50px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function Pagination(props) {\r\n  const {\r\n    onPageChange,\r\n    totalCount,\r\n    siblingCount = 1,\r\n    currentPage,\r\n    pageSize,\r\n    onFetchMore,\r\n  } = props;\r\n\r\n  const paginationRange = usePagination({\r\n    totalCount,\r\n    siblingCount,\r\n    currentPage,\r\n    pageSize,\r\n  });\r\n\r\n  if ((currentPage <= 0) & (paginationRange.length < 2)) {\r\n    return null;\r\n  }\r\n\r\n  const onPrevious = () => onPageChange(currentPage - 1);\r\n  const onNext = () => {\r\n    onPageChange(currentPage + 1);\r\n    onFetchMore();\r\n  };\r\n\r\n  let lastPage = paginationRange[paginationRange.length - 1];\r\n\r\n  return (\r\n    <ul className=\"pagination pagination-sm\">\r\n      <StyledPaginationPrevious\r\n        className={classnames(\"page-item\", { disabled: currentPage === 1 })}\r\n        onClick={onPrevious}\r\n      >\r\n        <span className=\"page-link\">Previous</span>\r\n      </StyledPaginationPrevious>\r\n\r\n      {paginationRange.map((pageNumber, index) => {\r\n        // If the pageItem is a DOT, render the DOTS unicode character\r\n        if (pageNumber === DOTS) {\r\n          return (\r\n            <li key={Math.random()} className=\"page-item page-link\">\r\n              &#8230;\r\n            </li>\r\n          );\r\n        }\r\n\r\n        // Render our Page Pills\r\n        return (\r\n          <li\r\n            key={pageNumber}\r\n            className={classnames(\"page-item\", {\r\n              active: pageNumber === currentPage,\r\n            })}\r\n            onClick={() => onPageChange(pageNumber)}\r\n          >\r\n            <span className=\"page-link\">{pageNumber}</span>\r\n          </li>\r\n        );\r\n      })}\r\n\r\n      <li className={classnames(\"page-item\")} onClick={onNext}>\r\n        <span className=\"page-link\">Next</span>\r\n      </li>\r\n    </ul>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}