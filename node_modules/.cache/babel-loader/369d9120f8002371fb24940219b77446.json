{"ast":null,"code":"var _jsxFileName = \"D:\\\\Rim\\\\react-app\\\\src\\\\components\\\\Homepage\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { ProgressBar, Alert, Button, Row, Col, Container, Image, Modal, Card, Form } from \"react-bootstrap\";\nimport { storage } from \"../../firebase/config\";\nimport { ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { v1 as uuidv4 } from \"uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Homepage() {\n  _s();\n\n  const [images, setImages] = useState([]);\n  const [urls, setUrls] = useState([]);\n  const [progress, setProgress] = useState();\n  const [error, setError] = useState();\n  const {\n    user\n  } = useAuth();\n  const [show, setShow] = useState(false);\n\n  const handleShow = () => setShow(true);\n\n  const handleClose = () => setShow(false);\n\n  const handleInputChange = e => {\n    for (let i = 0; i < e.target.files.length; i++) {\n      const newImage = e.target.files[i]; // setImages((prevState) => [...prevState, newImage]);\n\n      handleUpload(\"Images\", newImage);\n    }\n  };\n\n  const handleUpload = (path, file) => {\n    const imagesRef = ref(storage, `${user.email}/${path}/${file.name}`);\n    const metadata = {\n      contentType: \"image/jpeg\"\n    };\n    const uploadTask = uploadBytesResumable(imagesRef, file, metadata);\n    uploadTask.on(\"state_changed\", snapshot => {\n      const progress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n      setProgress(progress);\n    }, error => setError(error.message), async () => {\n      try {\n        const url = await getDownloadURL(imagesRef);\n        setUrls(urls.concat(url));\n        setProgress(null);\n      } catch (error) {\n        setError(error.message);\n      }\n    });\n  };\n  /* const handleUploadImages = (path) => {\r\n    setProgress(true);\r\n    images.map((image) => {\r\n      const imagesRef = ref(storage, user.email + `/${path}/` + image.name);\r\n      const metadata = {\r\n        contentType: \"image/jpeg\",\r\n      };\r\n        const uploadTask = uploadBytesResumable(imagesRef, image, metadata);\r\n      uploadTask.on(\r\n        \"state_changed\",\r\n        (snapshot) => {\r\n          const progress =\r\n            (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n          setProgress(progress);\r\n        },\r\n        (error) => setError(error.message),\r\n        async () => {\r\n          const url = await getDownloadURL(imagesRef);\r\n          setUrls((prevState) => [...prevState, url]);\r\n        }\r\n      );\r\n     \r\n    });\r\n  }; */\n\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [error && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Homepage\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Body, {\n        children: \"Alo Alo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Add Images\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: [\"fas\", \"images\"],\n            onClick: handleShow\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Form, {\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              htmlFor: \"images\",\n              children: \"Select a photo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              id: \"images\",\n              multiple: true,\n              type: \"file\",\n              onChange: e => {\n                handleInputChange(e);\n              },\n              accept: \".jpg, .jpeg, .png\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), progress && /*#__PURE__*/_jsxDEV(ProgressBar, {\n          now: progress,\n          max: \"100\",\n          label: `Loading...${progress}%`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: urls.map((url, index) => /*#__PURE__*/_jsxDEV(Col, {\n            xs: 6,\n            style: {},\n            children: /*#__PURE__*/_jsxDEV(Image, {\n              fluid: true,\n              src: url,\n              alt: url,\n              style: {\n                height: \"50vw\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 17\n            }, this)\n          }, url + index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: handleClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleUpload(\"Images\"),\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Homepage, \"eP9vy2FohaNePueoB4UnvIXGuOg=\", false, function () {\n  return [useAuth];\n});\n\n_c = Homepage;\n\nvar _c;\n\n$RefreshReg$(_c, \"Homepage\");","map":{"version":3,"sources":["D:/Rim/react-app/src/components/Homepage/index.js"],"names":["React","useState","ProgressBar","Alert","Button","Row","Col","Container","Image","Modal","Card","Form","storage","ref","uploadBytesResumable","getDownloadURL","useAuth","FontAwesomeIcon","v1","uuidv4","Homepage","images","setImages","urls","setUrls","progress","setProgress","error","setError","user","show","setShow","handleShow","handleClose","handleInputChange","e","i","target","files","length","newImage","handleUpload","path","file","imagesRef","email","name","metadata","contentType","uploadTask","on","snapshot","bytesTransferred","totalBytes","message","url","concat","map","index","height"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  ProgressBar,\r\n  Alert,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Container,\r\n  Image,\r\n  Modal,\r\n  Card,\r\n  Form,\r\n} from \"react-bootstrap\";\r\nimport { storage } from \"../../firebase/config\";\r\nimport { ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { v1 as uuidv4 } from \"uuid\";\r\n\r\nexport default function Homepage() {\r\n  const [images, setImages] = useState([]);\r\n  const [urls, setUrls] = useState([]);\r\n  const [progress, setProgress] = useState();\r\n  const [error, setError] = useState();\r\n  const { user } = useAuth();\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleShow = () => setShow(true);\r\n  const handleClose = () => setShow(false);\r\n\r\n  const handleInputChange = (e) => {\r\n    for (let i = 0; i < e.target.files.length; i++) {\r\n      const newImage = e.target.files[i];\r\n      // setImages((prevState) => [...prevState, newImage]);\r\n      handleUpload(\"Images\", newImage)\r\n    }\r\n  };\r\n\r\n  const handleUpload = (path, file) => {\r\n    const imagesRef = ref(storage, `${user.email}/${path}/${file.name}`);\r\n    const metadata = {\r\n      contentType: \"image/jpeg\",\r\n    };\r\n    const uploadTask = uploadBytesResumable(imagesRef, file, metadata);\r\n\r\n    uploadTask.on(\r\n      \"state_changed\",\r\n      (snapshot) => {\r\n        const progress =\r\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n        setProgress(progress);\r\n      },\r\n      (error) => setError(error.message),\r\n      async () => {\r\n        try {\r\n          const url = await getDownloadURL(imagesRef);\r\n          setUrls(urls.concat(url));\r\n          setProgress(null);\r\n        } catch (error) {\r\n          setError(error.message);\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  /* const handleUploadImages = (path) => {\r\n    setProgress(true);\r\n    images.map((image) => {\r\n      const imagesRef = ref(storage, user.email + `/${path}/` + image.name);\r\n      const metadata = {\r\n        contentType: \"image/jpeg\",\r\n      };\r\n\r\n      const uploadTask = uploadBytesResumable(imagesRef, image, metadata);\r\n      uploadTask.on(\r\n        \"state_changed\",\r\n        (snapshot) => {\r\n          const progress =\r\n            (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n          setProgress(progress);\r\n        },\r\n        (error) => setError(error.message),\r\n        async () => {\r\n          const url = await getDownloadURL(imagesRef);\r\n          setUrls((prevState) => [...prevState, url]);\r\n        }\r\n      );\r\n     \r\n    });\r\n  }; */\r\n\r\n  return (\r\n    <Container>\r\n      {error && <Alert variant=\"danger\">{error}</Alert>}\r\n\r\n      <h1>Homepage</h1>\r\n\r\n      <Card>\r\n        <Card.Body>Alo Alo</Card.Body>\r\n        <Card.Footer>\r\n          <div>\r\n            <span>Add Images</span>\r\n            <FontAwesomeIcon icon={[\"fas\", \"images\"]} onClick={handleShow} />\r\n          </div>\r\n        </Card.Footer>\r\n      </Card>\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Group>\r\n              <Form.Label htmlFor=\"images\">Select a photo</Form.Label>\r\n              <Form.Control\r\n                id=\"images\"\r\n                multiple\r\n                type=\"file\"\r\n                onChange={(e) => {\r\n                  handleInputChange(e);\r\n                }}\r\n                accept=\".jpg, .jpeg, .png\"\r\n              ></Form.Control>\r\n            </Form.Group>\r\n          </Form>\r\n\r\n          {progress && (\r\n            <ProgressBar\r\n              now={progress}\r\n              max=\"100\"\r\n              label={`Loading...${progress}%`}\r\n            />\r\n          )}\r\n\r\n          <Row>\r\n            {urls.map((url, index) => (\r\n              <Col xs={6} key={url + index} style={{}}>\r\n                <Image fluid src={url} alt={url} style={{ height: \"50vw\" }} />\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n        </Modal.Body>\r\n\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={handleUpload(\"Images\")}>\r\n            Save Changes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </Container>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}