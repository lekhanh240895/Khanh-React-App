{"ast":null,"code":"var _jsxFileName = \"D:\\\\Rim\\\\react-app\\\\src\\\\components\\\\UpdateProfile\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { Form, Card, Button, Alert } from \"react-bootstrap\";\nimport { Link, useHistory, Prompt } from \"react-router-dom\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport { storage } from \"../../firebase/config\";\nimport { ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UpdateProfile = () => {\n  _s();\n\n  var _displayNameRef$curre, _user$displayName;\n\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const passwordConfirmRef = useRef();\n  const displayNameRef = useRef();\n  const [error, setError] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const {\n    user,\n    updateUserEmail,\n    updateUserPassword,\n    updateUserProfile\n  } = useAuth();\n  const [isSucced, setIsSucced] = useState(false);\n  const history = useHistory();\n  const [isBlocking, setIsBlocking] = useState(false);\n  const [fileUrl, setFileUrl] = useState(\"\");\n  const [isPhotoUrlDisabled, setIsPhotoUrlDisabled] = useState(false);\n  const [imageFile, setImageFile] = useState();\n  const [urlUpload, setUrlUpload] = useState(\"\");\n\n  const handleInputChange = async file => {\n    if (file) {\n      setIsPhotoUrlDisabled(true);\n      setImageFile(file);\n    } else {\n      setIsPhotoUrlDisabled(false);\n    }\n  };\n\n  const handleUploadPhoto = async file => {\n    const imagesRef = ref(storage, \"images/\" + file.name);\n    const uploadTask = uploadBytesResumable(imagesRef, file);\n    uploadTask.on(\"state_changed\", snapshot => {}, error => setError(error.message), async () => {\n      try {\n        const url = await getDownloadURL(imagesRef);\n        setFileUrl(url);\n      } catch (error) {\n        setError(error.message);\n      }\n    });\n  };\n\n  const handleInputURLChange = e => {\n    setUrlUpload(e.target.value);\n  };\n\n  const handleUploadByURL = () => {\n    setFileUrl(urlUpload);\n  };\n\n  useEffect(() => {\n    if (user.displayName === displayNameRef.current.value & imageFile === \"\") {\n      setIsLoading(true);\n    } else {\n      setIsLoading(false);\n    }\n  }, [user, imageFile, (_displayNameRef$curre = displayNameRef.current) === null || _displayNameRef$curre === void 0 ? void 0 : _displayNameRef$curre.value]);\n\n  const handleUpdateProfileSubmit = e => {\n    e.preventDefault();\n    setIsBlocking(false);\n\n    if (passwordConfirmRef.current.value !== passwordRef.current.value) {\n      return setError(\"Password does not match!\");\n    }\n\n    const promises = [];\n    setError(\"\");\n    setIsLoading(true);\n\n    if (passwordRef.current.value) {\n      promises.push(updateUserPassword(passwordRef.current.value));\n    }\n\n    if (emailRef.current.value !== user.email) {\n      promises.push(updateUserEmail(emailRef.current.value));\n    } //Display name & Photo\n    // if (\n    //   (user.displayName === displayNameRef.current.value) &\n    //   (fileUrl !== \"\") &\n    //   (fileUrl !== user.photoURL)\n    // ) {\n    //   promises.push(updateUserProfile(user.displayName, fileUrl));\n    // } else if (\n    //   (user.displayName !== displayNameRef.current.value) &\n    //   (fileUrl === \"\")\n    // ) {\n    //   promises.push(\n    //     updateUserProfile(displayNameRef.current.value, user.photoURL)\n    //   );\n    // } else if (\n    //   (user.displayName !== displayNameRef.current.value) &\n    //   (fileUrl !== \"\") &\n    //   (fileUrl !== user.photoURL)\n    // ) {\n    //   promises.push(updateUserProfile(displayNameRef.current.value, fileUrl));\n    // }\n\n\n    if (fileUrl !== \"\") {\n      promises.push(updateUserProfile(displayNameRef.current.value, fileUrl));\n    } else {\n      promises.push(updateUserProfile(displayNameRef.current.value, user.profileURL));\n    }\n\n    if (fileUrl !== \"\" & fileUrl !== user.photoURL) {\n      promises.push(updateUserProfile(displayNameRef.current.value, fileUrl));\n    } else if (fileUrl === \"\") {\n      promises.push(updateUserProfile(displayNameRef.current.value, user.photoURL));\n    }\n\n    Promise.all(promises).then(() => {\n      setIsSucced(true);\n      setTimeout(() => history.push(\"/\"), 1500);\n    }).catch(error => {\n      const errMessage = error.message.replace(\"Firebase: \", \"\");\n      return setError(errMessage);\n    }).finally(() => {\n      setIsLoading(false);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"d-flex flex-row justify-content-center align-items-center\",\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      style: {\n        maxWidth: \"400px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        as: \"h1\",\n        className: \"mb-4\",\n        children: \"Update Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Prompt, {\n        when: isBlocking,\n        message: \"Seem you are not finishing your works. Are you sure want to leave?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), isSucced && /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"success\",\n        className: \"text-center\",\n        style: {\n          fontWeight: \"600\",\n          fontSize: \"1.5rem\"\n        },\n        children: \"Update Successfull. Redirecting....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3 text-center d-flex justify-content-center\",\n        children: user.profileURL ? /*#__PURE__*/_jsxDEV(Card.Img, {\n          variant: \"top\",\n          src: fileUrl ? fileUrl : user.profileURL,\n          alt: \"Avatar\",\n          style: {\n            width: \"100px\",\n            height: \"100px\",\n            borderRadius: \"50%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"100px\",\n            height: \"100px\",\n            border: \"1px solid #0B3D6B\",\n            borderRadius: \"50%\",\n            background: \"#0B3D6B\"\n          },\n          className: \"text-white d-flex justify-content-center align-items-center\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontSize: \"30px\",\n              fontWeight: \"600\"\n            },\n            children: (_user$displayName = user.displayName) === null || _user$displayName === void 0 ? void 0 : _user$displayName.charAt(0)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleUpdateProfileSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            htmlFor: \"displayName\",\n            children: \"Display Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            id: \"displayName\",\n            type: \"text\",\n            ref: displayNameRef,\n            defaultValue: user === null || user === void 0 ? void 0 : user.displayName,\n            required: true,\n            onChange: e => {\n              setIsBlocking(e.target.value.length > 0);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            htmlFor: \"photo\",\n            children: \"Upload your photo:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            id: \"photo\",\n            type: \"file\",\n            onChange: e => {\n              setIsBlocking(e.target.value.length > 0);\n              handleInputChange(e.target.files[0]);\n            },\n            accept: \".jpg, .jpeg, .png\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"mt-2\",\n            variant: \"outline-primary\",\n            onClick: () => handleUploadPhoto(imageFile),\n            children: \"Upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            htmlFor: \"URLphoto\",\n            children: \"Or URL of your photo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            id: \"URLphoto\",\n            type: \"text\",\n            onChange: e => {\n              setIsBlocking(e.target.value.length > 0);\n              handleInputURLChange(e);\n            },\n            disabled: isPhotoUrlDisabled,\n            placeholder: \"E.g: https://picsum.photos/50\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outline-primary\",\n            className: \"mt-2\",\n            onClick: handleUploadByURL,\n            children: \"Upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            htmlFor: \"email\",\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            id: \"email\",\n            type: \"email\",\n            ref: emailRef,\n            required: true,\n            defaultValue: user === null || user === void 0 ? void 0 : user.email,\n            onChange: e => setIsBlocking(e.target.value.length > 0)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            htmlFor: \"password\",\n            children: \"New password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            id: \"password\",\n            type: \"password\",\n            ref: passwordRef,\n            placeholder: \"Leave it blank to keep your password\",\n            onChange: e => setIsBlocking(e.target.value.length > 0)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            htmlFor: \"passwordConfirm\",\n            children: \"Confirm New Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            id: \"passwordConfirm\",\n            type: \"password\",\n            ref: passwordConfirmRef,\n            placeholder: \"Leave it blank to keep your password\",\n            onChange: e => setIsBlocking(e.target.value.length > 0)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          disabled: isLoading,\n          type: \"submit\",\n          className: \"w-100 my-3\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UpdateProfile, \"WGrp4XzVNVLCQP2HgPNjOCsyUbI=\", false, function () {\n  return [useAuth, useHistory];\n});\n\n_c = UpdateProfile;\nexport default UpdateProfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateProfile\");","map":{"version":3,"sources":["D:/Rim/react-app/src/components/UpdateProfile/index.js"],"names":["React","useRef","useState","useEffect","Form","Card","Button","Alert","Link","useHistory","Prompt","useAuth","storage","ref","uploadBytesResumable","getDownloadURL","UpdateProfile","emailRef","passwordRef","passwordConfirmRef","displayNameRef","error","setError","isLoading","setIsLoading","user","updateUserEmail","updateUserPassword","updateUserProfile","isSucced","setIsSucced","history","isBlocking","setIsBlocking","fileUrl","setFileUrl","isPhotoUrlDisabled","setIsPhotoUrlDisabled","imageFile","setImageFile","urlUpload","setUrlUpload","handleInputChange","file","handleUploadPhoto","imagesRef","name","uploadTask","on","snapshot","message","url","handleInputURLChange","e","target","value","handleUploadByURL","displayName","current","handleUpdateProfileSubmit","preventDefault","promises","push","email","profileURL","photoURL","Promise","all","then","setTimeout","catch","errMessage","replace","finally","maxWidth","fontWeight","fontSize","width","height","borderRadius","border","background","charAt","length","files"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\r\nimport { Form, Card, Button, Alert } from \"react-bootstrap\";\r\nimport { Link, useHistory, Prompt } from \"react-router-dom\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport { storage } from \"../../firebase/config\";\r\nimport { ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\r\n\r\nexport const UpdateProfile = () => {\r\n  const emailRef = useRef();\r\n  const passwordRef = useRef();\r\n  const passwordConfirmRef = useRef();\r\n  const displayNameRef = useRef();\r\n\r\n  const [error, setError] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const { user, updateUserEmail, updateUserPassword, updateUserProfile } =\r\n    useAuth();\r\n  const [isSucced, setIsSucced] = useState(false);\r\n  const history = useHistory();\r\n  const [isBlocking, setIsBlocking] = useState(false);\r\n  const [fileUrl, setFileUrl] = useState(\"\");\r\n  const [isPhotoUrlDisabled, setIsPhotoUrlDisabled] = useState(false);\r\n  const [imageFile, setImageFile] = useState();\r\n  const [urlUpload, setUrlUpload] = useState(\"\");\r\n\r\n  const handleInputChange = async (file) => {\r\n    if (file) {\r\n      setIsPhotoUrlDisabled(true);\r\n      setImageFile(file);\r\n    } else {\r\n      setIsPhotoUrlDisabled(false);\r\n    }\r\n  };\r\n\r\n  const handleUploadPhoto = async (file) => {\r\n    const imagesRef = ref(storage, \"images/\" + file.name);\r\n    const uploadTask = uploadBytesResumable(imagesRef, file);\r\n    uploadTask.on(\r\n      \"state_changed\",\r\n      (snapshot) => {},\r\n      (error) => setError(error.message),\r\n      async () => {\r\n        try {\r\n          const url = await getDownloadURL(imagesRef);\r\n          setFileUrl(url);\r\n        } catch (error) {\r\n          setError(error.message);\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  const handleInputURLChange = (e) => {\r\n    setUrlUpload(e.target.value);\r\n  };\r\n  const handleUploadByURL = () => {\r\n    setFileUrl(urlUpload);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (\r\n      (user.displayName === displayNameRef.current.value) &\r\n      (imageFile === \"\")\r\n    ) {\r\n      setIsLoading(true);\r\n    } else {\r\n      setIsLoading(false);\r\n    }\r\n  }, [user, imageFile, displayNameRef.current?.value]);\r\n\r\n  const handleUpdateProfileSubmit = (e) => {\r\n    e.preventDefault();\r\n    setIsBlocking(false);\r\n\r\n    if (passwordConfirmRef.current.value !== passwordRef.current.value) {\r\n      return setError(\"Password does not match!\");\r\n    }\r\n\r\n    const promises = [];\r\n    setError(\"\");\r\n    setIsLoading(true);\r\n\r\n    if (passwordRef.current.value) {\r\n      promises.push(updateUserPassword(passwordRef.current.value));\r\n    }\r\n\r\n    if (emailRef.current.value !== user.email) {\r\n      promises.push(updateUserEmail(emailRef.current.value));\r\n    }\r\n\r\n    //Display name & Photo\r\n    // if (\r\n    //   (user.displayName === displayNameRef.current.value) &\r\n    //   (fileUrl !== \"\") &\r\n    //   (fileUrl !== user.photoURL)\r\n    // ) {\r\n    //   promises.push(updateUserProfile(user.displayName, fileUrl));\r\n    // } else if (\r\n    //   (user.displayName !== displayNameRef.current.value) &\r\n    //   (fileUrl === \"\")\r\n    // ) {\r\n    //   promises.push(\r\n    //     updateUserProfile(displayNameRef.current.value, user.photoURL)\r\n    //   );\r\n    // } else if (\r\n    //   (user.displayName !== displayNameRef.current.value) &\r\n    //   (fileUrl !== \"\") &\r\n    //   (fileUrl !== user.photoURL)\r\n    // ) {\r\n    //   promises.push(updateUserProfile(displayNameRef.current.value, fileUrl));\r\n    // }\r\n\r\n    if (fileUrl !== \"\") {\r\n      promises.push(updateUserProfile(displayNameRef.current.value, fileUrl));\r\n    } else {\r\n      promises.push(\r\n        updateUserProfile(displayNameRef.current.value, user.profileURL)\r\n      );\r\n    }\r\n\r\n    if ((fileUrl !== \"\") & (fileUrl !== user.photoURL)) {\r\n      promises.push(updateUserProfile(displayNameRef.current.value, fileUrl));\r\n    } else if (fileUrl === \"\") {\r\n      promises.push(\r\n        updateUserProfile(displayNameRef.current.value, user.photoURL)\r\n      );\r\n    }\r\n\r\n    Promise.all(promises)\r\n      .then(() => {\r\n        setIsSucced(true);\r\n        setTimeout(() => history.push(\"/\"), 1500);\r\n      })\r\n      .catch((error) => {\r\n        const errMessage = error.message.replace(\"Firebase: \", \"\");\r\n        return setError(errMessage);\r\n      })\r\n      .finally(() => {\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Card className=\"d-flex flex-row justify-content-center align-items-center\">\r\n      <Card.Body style={{ maxWidth: \"400px\" }}>\r\n        <Card.Header as=\"h1\" className=\"mb-4\">\r\n          Update Profile\r\n        </Card.Header>\r\n\r\n        <Prompt\r\n          when={isBlocking}\r\n          message=\"Seem you are not finishing your works. Are you sure want to leave?\"\r\n        />\r\n        {isSucced && (\r\n          <Alert\r\n            variant=\"success\"\r\n            className=\"text-center\"\r\n            style={{ fontWeight: \"600\", fontSize: \"1.5rem\" }}\r\n          >\r\n            Update Successfull. Redirecting....\r\n          </Alert>\r\n        )}\r\n        {error && <Alert variant=\"danger\">{error}</Alert>}\r\n        <div className=\"mb-3 text-center d-flex justify-content-center\">\r\n          {user.profileURL ? (\r\n            <Card.Img\r\n              variant=\"top\"\r\n              src={fileUrl ? fileUrl : user.profileURL}\r\n              alt=\"Avatar\"\r\n              style={{\r\n                width: \"100px\",\r\n                height: \"100px\",\r\n                borderRadius: \"50%\",\r\n              }}\r\n            />\r\n          ) : (\r\n            <div\r\n              style={{\r\n                width: \"100px\",\r\n                height: \"100px\",\r\n                border: \"1px solid #0B3D6B\",\r\n                borderRadius: \"50%\",\r\n                background: \"#0B3D6B\",\r\n              }}\r\n              className=\"text-white d-flex justify-content-center align-items-center\"\r\n            >\r\n              <span style={{ fontSize: \"30px\", fontWeight: \"600\" }}>\r\n                {user.displayName?.charAt(0)}\r\n              </span>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <Form onSubmit={handleUpdateProfileSubmit}>\r\n          <Form.Group>\r\n            <Form.Label htmlFor=\"displayName\">Display Name:</Form.Label>\r\n            <Form.Control\r\n              id=\"displayName\"\r\n              type=\"text\"\r\n              ref={displayNameRef}\r\n              defaultValue={user?.displayName}\r\n              required\r\n              onChange={(e) => {\r\n                setIsBlocking(e.target.value.length > 0);\r\n              }}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group>\r\n            <Form.Label htmlFor=\"photo\">Upload your photo:</Form.Label>\r\n\r\n            <Form.Control\r\n              id=\"photo\"\r\n              type=\"file\"\r\n              onChange={(e) => {\r\n                setIsBlocking(e.target.value.length > 0);\r\n                handleInputChange(e.target.files[0]);\r\n              }}\r\n              accept=\".jpg, .jpeg, .png\"\r\n            ></Form.Control>\r\n\r\n            <Button\r\n              className=\"mt-2\"\r\n              variant=\"outline-primary\"\r\n              onClick={() => handleUploadPhoto(imageFile)}\r\n            >\r\n              Upload\r\n            </Button>\r\n          </Form.Group>\r\n\r\n          <Form.Group>\r\n            <Form.Label htmlFor=\"URLphoto\">Or URL of your photo</Form.Label>\r\n\r\n            <Form.Control\r\n              id=\"URLphoto\"\r\n              type=\"text\"\r\n              onChange={(e) => {\r\n                setIsBlocking(e.target.value.length > 0);\r\n                handleInputURLChange(e);\r\n              }}\r\n              disabled={isPhotoUrlDisabled}\r\n              placeholder=\"E.g: https://picsum.photos/50\"\r\n            ></Form.Control>\r\n\r\n            <Button\r\n              variant=\"outline-primary\"\r\n              className=\"mt-2\"\r\n              onClick={handleUploadByURL}\r\n            >\r\n              Upload\r\n            </Button>\r\n          </Form.Group>\r\n\r\n          <Form.Group>\r\n            <Form.Label htmlFor=\"email\">Email:</Form.Label>\r\n            <Form.Control\r\n              id=\"email\"\r\n              type=\"email\"\r\n              ref={emailRef}\r\n              required\r\n              defaultValue={user?.email}\r\n              onChange={(e) => setIsBlocking(e.target.value.length > 0)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group>\r\n            <Form.Label htmlFor=\"password\">New password:</Form.Label>\r\n            <Form.Control\r\n              id=\"password\"\r\n              type=\"password\"\r\n              ref={passwordRef}\r\n              placeholder=\"Leave it blank to keep your password\"\r\n              onChange={(e) => setIsBlocking(e.target.value.length > 0)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group>\r\n            <Form.Label htmlFor=\"passwordConfirm\">\r\n              Confirm New Password:\r\n            </Form.Label>\r\n            <Form.Control\r\n              id=\"passwordConfirm\"\r\n              type=\"password\"\r\n              ref={passwordConfirmRef}\r\n              placeholder=\"Leave it blank to keep your password\"\r\n              onChange={(e) => setIsBlocking(e.target.value.length > 0)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Button disabled={isLoading} type=\"submit\" className=\"w-100 my-3\">\r\n            Update\r\n          </Button>\r\n        </Form>\r\n        <div className=\"text-center\">\r\n          <Link to=\"/\">Cancel</Link>\r\n        </div>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default UpdateProfile;\r\n"]},"metadata":{},"sourceType":"module"}