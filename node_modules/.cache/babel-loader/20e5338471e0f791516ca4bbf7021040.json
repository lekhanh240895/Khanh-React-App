{"ast":null,"code":"var _jsxFileName = \"D:\\\\Rim\\\\react-app\\\\src\\\\components\\\\TodoApp\\\\List.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { sortBy } from \"lodash\";\nimport { InputWithLabel } from \"./InputWithLabel\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SORTS = {\n  NONE: list => list,\n  TITLE: list => sortBy(list, \"title\")\n};\nexport const List = ({\n  list,\n  onRemoveTodo,\n  onCheckedTodo,\n  onCheckboxChange\n}) => {\n  _s();\n\n  const [sort, setSort] = React.useState({\n    sortKey: \"NONE\",\n    isReversed: false\n  });\n\n  const handleSort = sortKey => {\n    const isReversed = sort.sortKey === sortKey && !sort.isReversed;\n    setSort({\n      sortKey,\n      isReversed\n    });\n  };\n\n  const sortFunction = SORTS[sort.sortKey];\n  const sortedList = sort.isReversed ? sortFunction(list).reverse() : sortFunction(list);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"markAllTodos\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"markAllTodos\",\n          type: \"checkbox\",\n          onChange: e => onCheckboxChange(list, e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Mark all works\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => handleSort(\"TITLE\"),\n        children: \"Sort List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        listStyle: \"none\"\n      },\n      children: sortedList.map(todo => /*#__PURE__*/_jsxDEV(Item, {\n        todo: todo,\n        onRemoveTodo: onRemoveTodo,\n        onCheckedTodo: onCheckedTodo\n      }, todo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(List, \"hguTD1yFJOvaCpY8MofT4x+bfEY=\");\n\n_c = List;\n\nconst Item = ({\n  todo,\n  onRemoveTodo,\n  onCheckedTodo\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"end\",\n      margin: \"10px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        padding: \"5px\",\n        margin: \"5px\",\n        width: \"10%\"\n      },\n      onClick: () => onRemoveTodo(todo),\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputWithLabel, {\n      id: todo.id,\n      value: todo.title,\n      checked: todo.completed,\n      type: \"checkbox\",\n      onInputChange: () => onCheckedTodo(todo),\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          whiteSpace: \"nowrap\",\n          overflow: \"hidden\",\n          textOverflow: \"ellipsis\"\n        },\n        children: todo.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Item;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"List\");\n$RefreshReg$(_c2, \"Item\");","map":{"version":3,"sources":["D:/Rim/react-app/src/components/TodoApp/List.js"],"names":["React","sortBy","InputWithLabel","SORTS","NONE","list","TITLE","List","onRemoveTodo","onCheckedTodo","onCheckboxChange","sort","setSort","useState","sortKey","isReversed","handleSort","sortFunction","sortedList","reverse","e","listStyle","map","todo","id","Item","display","justifyContent","margin","padding","width","title","completed","whiteSpace","overflow","textOverflow"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { sortBy } from \"lodash\";\r\nimport { InputWithLabel } from \"./InputWithLabel\";\r\n\r\nconst SORTS = {\r\n  NONE: (list) => list,\r\n  TITLE: (list) => sortBy(list, \"title\"),\r\n};\r\n\r\nexport const List = ({\r\n  list,\r\n  onRemoveTodo,\r\n  onCheckedTodo,\r\n  onCheckboxChange,\r\n}) => {\r\n  const [sort, setSort] = React.useState({\r\n    sortKey: \"NONE\",\r\n    isReversed: false,\r\n  });\r\n  const handleSort = (sortKey) => {\r\n    const isReversed = sort.sortKey === sortKey && !sort.isReversed;\r\n    setSort({ sortKey, isReversed });\r\n  };\r\n\r\n  const sortFunction = SORTS[sort.sortKey];\r\n  const sortedList = sort.isReversed\r\n    ? sortFunction(list).reverse()\r\n    : sortFunction(list);\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div>\r\n        <label htmlFor=\"markAllTodos\">\r\n          <input\r\n            id=\"markAllTodos\"\r\n            type=\"checkbox\"\r\n            onChange={(e) => onCheckboxChange(list, e)}\r\n          />\r\n\r\n          <span>Mark all works</span>\r\n        </label>\r\n      </div>\r\n\r\n      <div>\r\n        <button type=\"button\" onClick={() => handleSort(\"TITLE\")}>\r\n          Sort List\r\n        </button>\r\n      </div>\r\n\r\n      <div style={{ listStyle: \"none\" }}>\r\n        {sortedList.map((todo) => (\r\n          <Item\r\n            todo={todo}\r\n            onRemoveTodo={onRemoveTodo}\r\n            onCheckedTodo={onCheckedTodo}\r\n            key={todo.id}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Item = ({ todo, onRemoveTodo, onCheckedTodo }) => {\r\n  return (\r\n    <div style={{ display: \"flex\", justifyContent: \"end\", margin: \"10px\" }}>\r\n      <button\r\n        style={{\r\n          padding: \"5px\",\r\n          margin: \"5px\",\r\n          width: \"10%\",\r\n        }}\r\n        onClick={() => onRemoveTodo(todo)}\r\n      >\r\n        Delete\r\n      </button>\r\n\r\n      <InputWithLabel\r\n        id={todo.id}\r\n        value={todo.title}\r\n        checked={todo.completed}\r\n        type=\"checkbox\"\r\n        onInputChange={() => onCheckedTodo(todo)}\r\n      >\r\n        <span\r\n          style={{\r\n            whiteSpace: \"nowrap\",\r\n            overflow: \"hidden\",\r\n            textOverflow: \"ellipsis\",\r\n          }}\r\n        >\r\n          {todo.title}\r\n        </span>\r\n      </InputWithLabel>\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}