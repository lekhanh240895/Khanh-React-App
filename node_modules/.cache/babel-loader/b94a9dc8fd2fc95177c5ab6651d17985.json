{"ast":null,"code":"var _jsxFileName = \"D:\\\\Rim\\\\react-app\\\\src\\\\components\\\\Homepage\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { ProgressBar, Alert, Form, Button, Row, Col, Container, Image, Card } from \"react-bootstrap\";\nimport { storage } from \"../../firebase/config\";\nimport { ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Homepage() {\n  _s();\n\n  const [images, setImages] = useState([]);\n  const [urls, setUrls] = useState([]);\n  const [progress, setProgress] = useState();\n  const [error, setError] = useState();\n  const {\n    user\n  } = useAuth();\n\n  const handleInputChange = e => {\n    for (let i = 0; i < e.target.value.length; i++) {\n      setImages(prevState => [...prevState, e.target.files[i]]);\n    }\n  };\n\n  const handleUploadImages = path => {\n    const promises = [];\n    images.forEach(image => {\n      const imagesRef = ref(storage, `${user.email}/${path}/${image.name}`);\n      const metadata = {\n        contentType: \"image/jpeg\"\n      };\n      setProgress(true);\n      const uploadTask = uploadBytesResumable(imagesRef, image, metadata);\n      promises.push(uploadTask);\n      uploadTask.on(\"state_changed\", snapshot => {\n        const progress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n        setProgress(progress);\n      }, error => setError(error.message), async () => {\n        const url = await getDownloadURL(imagesRef);\n        setUrls(prevState => [...prevState, url]);\n      });\n    });\n    Promise.all(promises).then(() => setProgress(false)).catch(error => setError(error.message)).finally(() => {});\n  }; // console.log({ urls, images });\n\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"d-flex flex-row justify-content-center align-items-center\",\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      style: {\n        maxWidth: \"400px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        as: \"h2\",\n        style: {\n          textAlign: \"center\",\n          fontWeight: \"700\",\n          fontSize: \"40px\",\n          letterSpacing: \"2\"\n        },\n        className: \"mb-4\",\n        children: \"Homepage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 19\n      }, this), progress && /*#__PURE__*/_jsxDEV(ProgressBar, {\n        now: progress,\n        max: \"100\",\n        label: `Loading...${progress}%`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            htmlFor: \"addImgs\",\n            children: \"Add Images\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            multiple: true,\n            id: \"addImgs\",\n            type: \"file\",\n            onChange: e => handleInputChange(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleUploadImages(\"Images\"),\n            children: \"Upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: urls.map((url, index) => /*#__PURE__*/_jsxDEV(Col, {\n              xs: 6,\n              style: {\n                listStyle: \"none\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Image, {\n                fluid: true,\n                src: url,\n                alt: url,\n                style: {\n                  height: \"50vw\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 19\n              }, this)\n            }, url + index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Homepage, \"wdKXc+BpH06GnJmL0iEksd/ep7s=\", false, function () {\n  return [useAuth];\n});\n\n_c = Homepage;\n\nvar _c;\n\n$RefreshReg$(_c, \"Homepage\");","map":{"version":3,"sources":["D:/Rim/react-app/src/components/Homepage/index.js"],"names":["React","useState","ProgressBar","Alert","Form","Button","Row","Col","Container","Image","Card","storage","ref","uploadBytesResumable","getDownloadURL","useAuth","Homepage","images","setImages","urls","setUrls","progress","setProgress","error","setError","user","handleInputChange","e","i","target","value","length","prevState","files","handleUploadImages","path","promises","forEach","image","imagesRef","email","name","metadata","contentType","uploadTask","push","on","snapshot","bytesTransferred","totalBytes","message","url","Promise","all","then","catch","finally","maxWidth","textAlign","fontWeight","fontSize","letterSpacing","map","index","listStyle","height"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  ProgressBar,\r\n  Alert,\r\n  Form,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Container,\r\n  Image,\r\n  Card,\r\n} from \"react-bootstrap\";\r\nimport { storage } from \"../../firebase/config\";\r\nimport { ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\n\r\nexport default function Homepage() {\r\n  const [images, setImages] = useState([]);\r\n  const [urls, setUrls] = useState([]);\r\n  const [progress, setProgress] = useState();\r\n  const [error, setError] = useState();\r\n  const { user } = useAuth();\r\n\r\n  const handleInputChange = (e) => {\r\n    for (let i = 0; i < e.target.value.length; i++) {\r\n      setImages((prevState) => [...prevState, e.target.files[i]]);\r\n    }\r\n  };\r\n\r\n  const handleUploadImages = (path) => {\r\n    const promises = [];\r\n    images.forEach((image) => {\r\n      const imagesRef = ref(storage, `${user.email}/${path}/${image.name}`);\r\n      const metadata = {\r\n        contentType: \"image/jpeg\",\r\n      };\r\n      setProgress(true);\r\n      const uploadTask = uploadBytesResumable(imagesRef, image, metadata);\r\n      promises.push(uploadTask);\r\n\r\n      uploadTask.on(\r\n        \"state_changed\",\r\n        (snapshot) => {\r\n          const progress =\r\n            (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n          setProgress(progress);\r\n        },\r\n        (error) => setError(error.message),\r\n        async () => {\r\n          const url = await getDownloadURL(imagesRef);\r\n          setUrls((prevState) => [...prevState, url]);\r\n        }\r\n      );\r\n    });\r\n\r\n    Promise.all(promises)\r\n      .then(() => setProgress(false))\r\n      .catch((error) => setError(error.message))\r\n      .finally(() => {});\r\n  };\r\n\r\n  // console.log({ urls, images });\r\n  return (\r\n    <Card className=\"d-flex flex-row justify-content-center align-items-center\">\r\n      <Card.Body style={{ maxWidth: \"400px\" }}>\r\n        <Card.Header\r\n          as=\"h2\"\r\n          style={{\r\n            textAlign: \"center\",\r\n            fontWeight: \"700\",\r\n            fontSize: \"40px\",\r\n            letterSpacing: \"2\",\r\n          }}\r\n          className=\"mb-4\"\r\n        >\r\n          Homepage\r\n        </Card.Header>\r\n\r\n        {error && <Alert variant=\"danger\">{error}</Alert>}\r\n        {progress && (\r\n          <ProgressBar\r\n            now={progress}\r\n            max=\"100\"\r\n            label={`Loading...${progress}%`}\r\n          />\r\n        )}\r\n\r\n        <Form>\r\n          <Form.Group>\r\n            <Form.Label htmlFor=\"addImgs\">Add Images</Form.Label>\r\n            <Form.Control\r\n              multiple\r\n              id=\"addImgs\"\r\n              type=\"file\"\r\n              onChange={(e) => handleInputChange(e)}\r\n            />\r\n            <Button onClick={handleUploadImages(\"Images\")}>Upload</Button>\r\n          </Form.Group>\r\n\r\n          <Form.Group>\r\n            <Row>\r\n              {urls.map((url, index) => (\r\n                <Col xs={6} key={url + index} style={{ listStyle: \"none\" }}>\r\n                  <Image fluid src={url} alt={url} style={{ height: \"50vw\" }} />\r\n                </Col>\r\n              ))}\r\n            </Row>\r\n          </Form.Group>\r\n        </Form>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}