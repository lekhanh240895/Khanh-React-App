{"ast":null,"code":"var _jsxFileName = \"D:\\\\Rim\\\\react-app\\\\src\\\\components\\\\HackerNewStoriesApp\\\\List.js\",\n    _s = $RefreshSig$();\n\nimport * as SC from \"./style\";\nimport React from \"react\";\nimport { sortBy } from \"lodash\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SORTS = {\n  NONE: list => list,\n  TITLE: list => sortBy(list, \"title\"),\n  AUTHOR: list => sortBy(list, \"author\"),\n  NUM_COMMENTS: list => sortBy(list, \"num_comments\").reverse(),\n  POINTS: list => sortBy(list, \"points\").reverse()\n};\nexport const List = /*#__PURE__*/React.memo(_c = _s(({\n  list,\n  onRemoveItem,\n  onFetchMore,\n  page\n}) => {\n  _s();\n\n  const [sort, setSort] = React.useState({\n    sortKey: \"NONE\",\n    isReversed: false,\n    isSorted: false\n  });\n\n  const handleSort = sortKey => {\n    const isReversed = sortKey === sort.sortKey && !sort.isReversed;\n    const isSorted = sortKey === sort.sortKey && !sort.isSorted;\n    /*  setSort({ sortKey: sortKey, isReversed: isReversed }); */\n\n    setSort({\n      sortKey,\n      isReversed,\n      isSorted\n    }); //JS Object initializers\n  };\n\n  const sortFunction = SORTS[sort.sortKey];\n  const sortedList = sort.isReversed ? sortFunction(list).reverse() : sortFunction(list);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(SC.StyledItem, {\n        children: [/*#__PURE__*/_jsxDEV(SC.StyledButtonSmall, {\n          type: \"button\",\n          onClick: () => handleSort(\"TITLE\"),\n          style: {\n            width: \"40%\",\n            fontSize: \"18px\",\n            textTransform: \"uppercase\",\n            fontWeight: \"600\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"p-2\",\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), sort.isSorted ? sort.isReversed ? /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: [\"fas\", \"arrow-up\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: [\"fas\", \"arrow-down\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SC.StyledButtonSmall, {\n          type: \"button\",\n          onClick: () => handleSort(\"AUTHOR\"),\n          style: {\n            width: \"15%\",\n            fontSize: \"18px\",\n            textTransform: \"uppercase\",\n            fontWeight: \"600\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"p-2\",\n            children: \"Author\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), sort.isSorted & sort.sortKey === \"AUTHOR\" ? sort.isReversed ? /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: [\"fas\", \"arrow-up\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: [\"fas\", \"arrow-down\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SC.StyledButtonSmall, {\n          type: \"button\",\n          onClick: () => handleSort(\"NUM_COMMENTS\"),\n          style: {\n            width: \"15%\",\n            fontSize: \"18px\",\n            textTransform: \"uppercase\",\n            fontWeight: \"600\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"p-2\",\n            children: \"Comments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), sort.isSorted & sort.sortKey === \"NUM_COMMENTS\" ? sort.isReversed ? /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: [\"fas\", \"arrow-up\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: [\"fas\", \"arrow-down\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 17\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SC.StyledButtonSmall, {\n          type: \"button\",\n          onClick: () => handleSort(\"POINTS\"),\n          style: {\n            width: \"15%\",\n            fontSize: \"18px\",\n            textTransform: \"uppercase\",\n            fontWeight: \"600\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"p-2\",\n            children: \"Points\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), sort.isSorted & sort.sortKey === \"POINTS\" ? sort.isReversed ? /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: [\"fas\", \"arrow-up\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: [\"fas\", \"arrow-down\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 17\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SC.StyledButtonSmall, {\n          style: {\n            width: \"15%\",\n            fontSize: \"18px\",\n            textTransform: \"uppercase\",\n            fontWeight: \"600\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"p-2\",\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InfiniteScroll //Infinite Scroll Fetch API\n    , {\n      dataLength: sortedList.length,\n      next: onFetchMore,\n      hasMore: true,\n      endMessage: /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Yay! You have seen it all\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this),\n      children: sortedList.map(item => /*#__PURE__*/_jsxDEV(Item, {\n        item: item,\n        onRemoveItem: onRemoveItem\n      }, item.objectID, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}, \"p3dTLIveO8UojT4/N6E1b4LfvYw=\"));\n_c2 = List;\nconst Item = /*#__PURE__*/React.memo(_c3 = ({\n  item,\n  onRemoveItem\n}) => /*#__PURE__*/_jsxDEV(SC.StyledItem, {\n  children: [/*#__PURE__*/_jsxDEV(SC.StyledColumn, {\n    style: {\n      textAlign: \"left\",\n      width: \"40%\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"a\", {\n      href: item.url,\n      children: item.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(SC.StyledColumn, {\n    style: {\n      textTransform: \"capitalize\",\n      width: \"15%\"\n    },\n    children: item.author\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(SC.StyledColumn, {\n    width: \"15%\",\n    children: item.num_comments\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(SC.StyledColumn, {\n    width: \"15%\",\n    children: item.points\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(SC.StyledColumn, {\n    width: \"15%\",\n    children: /*#__PURE__*/_jsxDEV(SC.StyledButtonSmall, {\n      type: \"button\",\n      onClick: () => onRemoveItem(item),\n      children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: [\"fas\", \"check\"],\n        size: \"sm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 151,\n  columnNumber: 3\n}, this));\n_c4 = Item;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"List$React.memo\");\n$RefreshReg$(_c2, \"List\");\n$RefreshReg$(_c3, \"Item$React.memo\");\n$RefreshReg$(_c4, \"Item\");","map":{"version":3,"sources":["D:/Rim/react-app/src/components/HackerNewStoriesApp/List.js"],"names":["SC","React","sortBy","InfiniteScroll","FontAwesomeIcon","SORTS","NONE","list","TITLE","AUTHOR","NUM_COMMENTS","reverse","POINTS","List","memo","onRemoveItem","onFetchMore","page","sort","setSort","useState","sortKey","isReversed","isSorted","handleSort","sortFunction","sortedList","width","fontSize","textTransform","fontWeight","length","textAlign","map","item","objectID","Item","url","title","author","num_comments","points"],"mappings":"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","sourcesContent":["import * as SC from \"./style\";\r\nimport React from \"react\";\r\nimport { sortBy } from \"lodash\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst SORTS = {\r\n  NONE: (list) => list,\r\n  TITLE: (list) => sortBy(list, \"title\"),\r\n  AUTHOR: (list) => sortBy(list, \"author\"),\r\n  NUM_COMMENTS: (list) => sortBy(list, \"num_comments\").reverse(),\r\n  POINTS: (list) => sortBy(list, \"points\").reverse(),\r\n};\r\n\r\nexport const List = React.memo(({ list, onRemoveItem, onFetchMore, page }) => {\r\n  const [sort, setSort] = React.useState({\r\n    sortKey: \"NONE\",\r\n    isReversed: false,\r\n    isSorted: false,\r\n  });\r\n\r\n  const handleSort = (sortKey) => {\r\n    const isReversed = sortKey === sort.sortKey && !sort.isReversed;\r\n    const isSorted = sortKey === sort.sortKey && !sort.isSorted;\r\n\r\n    /*  setSort({ sortKey: sortKey, isReversed: isReversed }); */\r\n    setSort({ sortKey, isReversed, isSorted }); //JS Object initializers\r\n  };\r\n\r\n  const sortFunction = SORTS[sort.sortKey];\r\n  const sortedList = sort.isReversed\r\n    ? sortFunction(list).reverse()\r\n    : sortFunction(list);\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <SC.StyledItem>\r\n          <SC.StyledButtonSmall\r\n            type=\"button\"\r\n            onClick={() => handleSort(\"TITLE\")}\r\n            style={{\r\n              width: \"40%\",\r\n              fontSize: \"18px\",\r\n              textTransform: \"uppercase\",\r\n              fontWeight: \"600\",\r\n            }}\r\n          >\r\n            <span className=\"p-2\">Title</span>\r\n            {sort.isSorted ? (\r\n              sort.isReversed ? (\r\n                <FontAwesomeIcon icon={[\"fas\", \"arrow-up\"]} />\r\n              ) : (\r\n                <FontAwesomeIcon icon={[\"fas\", \"arrow-down\"]} />\r\n              )\r\n            ) : null}\r\n          </SC.StyledButtonSmall>\r\n\r\n          <SC.StyledButtonSmall\r\n            type=\"button\"\r\n            onClick={() => handleSort(\"AUTHOR\")}\r\n            style={{\r\n              width: \"15%\",\r\n              fontSize: \"18px\",\r\n              textTransform: \"uppercase\",\r\n              fontWeight: \"600\",\r\n            }}\r\n          >\r\n            <span className=\"p-2\">Author</span>\r\n            {sort.isSorted & (sort.sortKey === \"AUTHOR\") ? (\r\n              sort.isReversed ? (\r\n                <FontAwesomeIcon icon={[\"fas\", \"arrow-up\"]} />\r\n              ) : (\r\n                <FontAwesomeIcon icon={[\"fas\", \"arrow-down\"]} />\r\n              )\r\n            ) : null}\r\n          </SC.StyledButtonSmall>\r\n\r\n          <SC.StyledButtonSmall\r\n            type=\"button\"\r\n            onClick={() => handleSort(\"NUM_COMMENTS\")}\r\n            style={{\r\n              width: \"15%\",\r\n              fontSize: \"18px\",\r\n              textTransform: \"uppercase\",\r\n              fontWeight: \"600\",\r\n            }}\r\n          >\r\n            <span className=\"p-2\">Comments</span>\r\n            {sort.isSorted & (sort.sortKey === \"NUM_COMMENTS\") ? (\r\n              sort.isReversed ? (\r\n                <FontAwesomeIcon icon={[\"fas\", \"arrow-up\"]} />\r\n              ) : (\r\n                <FontAwesomeIcon icon={[\"fas\", \"arrow-down\"]} />\r\n              )\r\n            ) : null}\r\n          </SC.StyledButtonSmall>\r\n\r\n          <SC.StyledButtonSmall\r\n            type=\"button\"\r\n            onClick={() => handleSort(\"POINTS\")}\r\n            style={{\r\n              width: \"15%\",\r\n              fontSize: \"18px\",\r\n              textTransform: \"uppercase\",\r\n              fontWeight: \"600\",\r\n            }}\r\n          >\r\n            <span className=\"p-2\">Points</span>\r\n            {sort.isSorted & (sort.sortKey === \"POINTS\") ? (\r\n              sort.isReversed ? (\r\n                <FontAwesomeIcon icon={[\"fas\", \"arrow-up\"]} />\r\n              ) : (\r\n                <FontAwesomeIcon icon={[\"fas\", \"arrow-down\"]} />\r\n              )\r\n            ) : null}\r\n          </SC.StyledButtonSmall>\r\n\r\n          <SC.StyledButtonSmall\r\n            style={{\r\n              width: \"15%\",\r\n              fontSize: \"18px\",\r\n              textTransform: \"uppercase\",\r\n              fontWeight: \"600\",\r\n            }}\r\n          >\r\n            <span className=\"p-2\">Actions</span>\r\n          </SC.StyledButtonSmall>\r\n        </SC.StyledItem>\r\n      </div>\r\n\r\n      <InfiniteScroll //Infinite Scroll Fetch API\r\n        dataLength={sortedList.length}\r\n        next={onFetchMore}\r\n        hasMore={true}\r\n        endMessage={\r\n          <p style={{ textAlign: \"center\" }}>\r\n            <b>Yay! You have seen it all</b>\r\n          </p>\r\n        }\r\n      >\r\n        {sortedList.map((item) => (\r\n          <Item key={item.objectID} item={item} onRemoveItem={onRemoveItem} />\r\n        ))}\r\n      </InfiniteScroll>\r\n    </div>\r\n  );\r\n});\r\n\r\nconst Item = React.memo(({ item, onRemoveItem }) => (\r\n  <SC.StyledItem>\r\n    <SC.StyledColumn style={{ textAlign: \"left\", width: \"40%\" }}>\r\n      <a href={item.url}>{item.title}</a>\r\n    </SC.StyledColumn>\r\n    <SC.StyledColumn style={{ textTransform: \"capitalize\", width: \"15%\" }}>\r\n      {item.author}\r\n    </SC.StyledColumn>\r\n    <SC.StyledColumn width=\"15%\">{item.num_comments}</SC.StyledColumn>\r\n    <SC.StyledColumn width=\"15%\">{item.points}</SC.StyledColumn>\r\n\r\n    <SC.StyledColumn width=\"15%\">\r\n      <SC.StyledButtonSmall type=\"button\" onClick={() => onRemoveItem(item)}>\r\n        <FontAwesomeIcon icon={[\"fas\", \"check\"]} size=\"sm\" />\r\n      </SC.StyledButtonSmall>\r\n    </SC.StyledColumn>\r\n  </SC.StyledItem>\r\n));\r\n"]},"metadata":{},"sourceType":"module"}