{"ast":null,"code":"var _jsxFileName = \"D:\\\\Rim\\\\react-app\\\\src\\\\TodoApp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useReducer, useState } from \"react\";\nimport { InputWithLabel } from \"./App\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst todoReducer = (state, action) => {\n  switch (action.type) {\n    case \"SET_TODOS\":\n      return action.payload;\n\n    case \"DO_TODO\":\n      return state.map(todo => {\n        if (todo.id === action.id) {\n          return { ...todo,\n            complete: true\n          };\n        } else {\n          return todo;\n        }\n      });\n\n    case \"UNDO_TODO\":\n      return state.map(todo => {\n        if (todo.id === action.id) {\n          return { ...todo,\n            complete: false\n          };\n        } else {\n          return todo;\n        }\n      });\n\n    case \"REMOVE_TODO\":\n      return state.filter(todo => todo.id !== action.payload.id);\n\n    default:\n      return state;\n\n    case \"ADD_TODO\":\n      return state.concat({\n        id: Math.random(),\n        title: action.payload,\n        complete: false\n      });\n  }\n};\n\nconst TodoApp = () => {\n  _s();\n\n  const initialTodos = [];\n  const [todos, dispatchTodos] = useReducer(todoReducer, initialTodos);\n\n  const handleTodoStatus = todo => {\n    dispatchTodos({\n      type: todo.complete ? \"UNDO_TODO\" : \"DO_TODO\",\n      id: todo.id\n    });\n  };\n\n  const handleRemoveTodo = todo => {\n    dispatchTodos({\n      type: \"REMOVE_TODO\",\n      payload: todo\n    });\n  };\n\n  const [todoQuery, setTodoQuery] = useState(\"\");\n\n  const handleTodoQuery = e => {\n    setTodoQuery(e.target.value);\n  };\n\n  const handleAddTodo = (todoQuery, e) => {\n    dispatchTodos({\n      type: \"ADD_TODO\",\n      payload: todoQuery\n    });\n  };\n\n  const onSubmitTodo = e => {\n    e.preventDefault();\n    handleAddTodo(todoQuery);\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const respone = await axios.get(`https://jsonplaceholder.typicode.com/todos`);\n      dispatchTodos({\n        type: \"SET_TODOS\",\n        payload: respone.data\n      });\n    };\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Todo List \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [\" \", todos.map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleRemoveTodo(todo),\n          children: \" Delete \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 9\n        }, this), \" & nbsp; \", /*#__PURE__*/_jsxDEV(InputWithLabel, {\n          checked: todo.completed,\n          type: \"checkbox\",\n          onInputChange: () => handleTodoStatus(todo),\n          value: todo.title,\n          children: [todo.title, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 15\n        }, this), \" \"]\n      }, todo.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 29\n      }, this)), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmitTodo,\n      children: [/*#__PURE__*/_jsxDEV(InputWithLabel, {\n        type: \"text\",\n        onInputChange: handleTodoQuery,\n        children: \"Add Todo:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 5\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \" Add \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 22\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 10\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 12\n  }, this);\n};\n\n_s(TodoApp, \"p+3lXTuaHAepSW0CaKfUslK3FH4=\");\n\n_c = TodoApp;\nexport default TodoApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoApp\");","map":{"version":3,"sources":["D:/Rim/react-app/src/TodoApp.js"],"names":["React","useEffect","useReducer","useState","InputWithLabel","axios","todoReducer","state","action","type","payload","map","todo","id","complete","filter","concat","Math","random","title","TodoApp","initialTodos","todos","dispatchTodos","handleTodoStatus","handleRemoveTodo","todoQuery","setTodoQuery","handleTodoQuery","e","target","value","handleAddTodo","onSubmitTodo","preventDefault","fetchData","respone","get","data","completed"],"mappings":"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","sourcesContent":["import React, {\r\n  useEffect,\r\n  useReducer,\r\n  useState\r\n} from \"react\";\r\nimport {\r\n  InputWithLabel\r\n} from \"./App\";\r\nimport axios from \"axios\";\r\n\r\nconst todoReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"SET_TODOS\":\r\n      return action.payload;\r\n    case \"DO_TODO\":\r\n      return state.map((todo) => {\r\n        if (todo.id === action.id) {\r\n          return {\r\n            ...todo,\r\n            complete: true\r\n          };\r\n        } else {\r\n          return todo;\r\n        }\r\n      });\r\n    case \"UNDO_TODO\":\r\n      return state.map((todo) => {\r\n        if (todo.id === action.id) {\r\n          return {\r\n            ...todo,\r\n            complete: false\r\n          };\r\n        } else {\r\n          return todo;\r\n        }\r\n      });\r\n    case \"REMOVE_TODO\":\r\n      return state.filter((todo) => todo.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n    case \"ADD_TODO\":\r\n      return state.concat({\r\n        id: Math.random(),\r\n        title: action.payload,\r\n        complete: false,\r\n      });\r\n  }\r\n};\r\n\r\nconst TodoApp = () => {\r\n  const initialTodos = [\r\n\r\n  ];\r\n  const [todos, dispatchTodos] = useReducer(todoReducer, initialTodos);\r\n\r\n  const handleTodoStatus = (todo) => {\r\n    dispatchTodos({\r\n      type: todo.complete ? \"UNDO_TODO\" : \"DO_TODO\",\r\n      id: todo.id,\r\n    });\r\n  };\r\n\r\n  const handleRemoveTodo = (todo) => {\r\n    dispatchTodos({\r\n      type: \"REMOVE_TODO\",\r\n      payload: todo,\r\n    });\r\n  };\r\n\r\n  const [todoQuery, setTodoQuery] = useState(\"\");\r\n\r\n  const handleTodoQuery = (e) => {\r\n    setTodoQuery(e.target.value);\r\n  };\r\n\r\n  const handleAddTodo = (todoQuery, e) => {\r\n    dispatchTodos({\r\n      type: \"ADD_TODO\",\r\n      payload: todoQuery,\r\n    });\r\n  };\r\n\r\n  const onSubmitTodo = (e) => {\r\n    e.preventDefault();\r\n    handleAddTodo(todoQuery);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const respone = await axios.get(`https://jsonplaceholder.typicode.com/todos`);\r\n      dispatchTodos({\r\n        type: \"SET_TODOS\",\r\n        payload: respone.data,\r\n      });\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  return ( <\r\n    div >\r\n    <\r\n    h1 > Todo List < /h1>\r\n\r\n    <\r\n    ul > {\r\n      todos.map((todo) => ( <\r\n        li key = {\r\n          todo.id\r\n        } >\r\n        <\r\n        button onClick = {\r\n          () => handleRemoveTodo(todo)\r\n        } > Delete < /button> &\r\n        nbsp; <\r\n        InputWithLabel checked = {\r\n          todo.completed\r\n        }\r\n        type = \"checkbox\"\r\n        onInputChange = {\r\n          () => handleTodoStatus(todo)\r\n        }\r\n        value = {\r\n          todo.title\r\n        }\r\n\r\n        >\r\n        {\r\n          todo.title\r\n        } <\r\n        /InputWithLabel> <\r\n        /li>\r\n      ))\r\n    } <\r\n    /ul> <\r\n    form onSubmit = {\r\n      onSubmitTodo\r\n    } >\r\n    <\r\n    InputWithLabel type = \"text\"\r\n    onInputChange = {\r\n      handleTodoQuery\r\n    } >\r\n    Add Todo:\r\n    <\r\n    /InputWithLabel> <\r\n    button type = \"submit\" > Add < /button> <\r\n    /form> <\r\n    /div>\r\n  );\r\n};\r\n\r\nexport default TodoApp;"]},"metadata":{},"sourceType":"module"}