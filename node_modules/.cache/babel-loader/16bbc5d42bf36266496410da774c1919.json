{"ast":null,"code":"var _jsxFileName = \"D:\\\\Rim\\\\react-app\\\\src\\\\contexts\\\\AuthContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { auth } from \"../firebase/config\";\nimport { createUserWithEmailAndPassword, onAuthStateChanged, signInWithEmailAndPassword, signOut } from \"@firebase/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext();\nexport const useAuth = () => {\n  _s();\n\n  return useContext(AuthContext);\n};\n\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n\n  const [currentUser, setCurrentUser] = useState();\n  const [loading, setLoading] = useState(true);\n\n  const signup = (email, password) => createUserWithEmailAndPassword(auth, email, password);\n\n  const login = (email, password) => signInWithEmailAndPassword(auth, email, password);\n\n  const logout = () => signOut(auth);\n\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, user => {\n      setCurrentUser(user);\n      setLoading(false);\n    });\n    return unsubscribe;\n  }, []);\n  const value = {\n    currentUser,\n    signup,\n    login,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(AuthProvider, \"1cdeWWSmbSz3cOWqWLAt+Ta4DMY=\");\n\n_c = AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["D:/Rim/react-app/src/contexts/AuthContext.js"],"names":["React","useContext","useState","useEffect","auth","createUserWithEmailAndPassword","onAuthStateChanged","signInWithEmailAndPassword","signOut","AuthContext","createContext","useAuth","AuthProvider","children","currentUser","setCurrentUser","loading","setLoading","signup","email","password","login","logout","unsubscribe","user","value"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,SAASC,IAAT,QAAqB,oBAArB;AACA,SACEC,8BADF,EAEEC,kBAFF,EAGEC,0BAHF,EAIEC,OAJF,QAKO,gBALP;;AAOA,MAAMC,WAAW,gBAAGT,KAAK,CAACU,aAAN,EAApB;AAEA,OAAO,MAAMC,OAAO,GAAG;AAAA;;AAAA,SAAMV,UAAU,CAACQ,WAAD,CAAhB;AAAA,CAAhB;;GAAME,O;;AACb,OAAO,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAC5C,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,EAA9C;AACA,QAAM,CAACc,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,IAAD,CAAtC;;AAEA,QAAMgB,MAAM,GAAG,CAACC,KAAD,EAAQC,QAAR,KACbf,8BAA8B,CAACD,IAAD,EAAOe,KAAP,EAAcC,QAAd,CADhC;;AAGA,QAAMC,KAAK,GAAG,CAACF,KAAD,EAAQC,QAAR,KACZb,0BAA0B,CAACH,IAAD,EAAOe,KAAP,EAAcC,QAAd,CAD5B;;AAGA,QAAME,MAAM,GAAG,MAAMd,OAAO,CAACJ,IAAD,CAA5B;;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMoB,WAAW,GAAGjB,kBAAkB,CAACF,IAAD,EAAQoB,IAAD,IAAU;AACrDT,MAAAA,cAAc,CAACS,IAAD,CAAd;AACAP,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAHqC,CAAtC;AAIA,WAAOM,WAAP;AACD,GANQ,EAMN,EANM,CAAT;AAQA,QAAME,KAAK,GAAG;AACZX,IAAAA,WADY;AAEZI,IAAAA,MAFY;AAGZG,IAAAA,KAHY;AAIZC,IAAAA;AAJY,GAAd;AAMA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEG,KAA7B;AAAA,cACGT,OAAO,IAAIH;AADd;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA/BM;;IAAMD,Y;;KAAAA,Y","sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\r\nimport { auth } from \"../firebase/config\";\r\nimport {\r\n  createUserWithEmailAndPassword,\r\n  onAuthStateChanged,\r\n  signInWithEmailAndPassword,\r\n  signOut,\r\n} from \"@firebase/auth\";\r\n\r\nconst AuthContext = React.createContext();\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\nexport const AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState();\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const signup = (email, password) =>\r\n    createUserWithEmailAndPassword(auth, email, password);\r\n\r\n  const login = (email, password) =>\r\n    signInWithEmailAndPassword(auth, email, password);\r\n\r\n  const logout = () => signOut(auth);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = onAuthStateChanged(auth, (user) => {\r\n      setCurrentUser(user);\r\n      setLoading(false);\r\n    });\r\n    return unsubscribe;\r\n  }, []);\r\n\r\n  const value = {\r\n    currentUser,\r\n    signup,\r\n    login,\r\n    logout,\r\n  };\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}