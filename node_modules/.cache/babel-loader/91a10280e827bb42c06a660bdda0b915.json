{"ast":null,"code":"var _jsxFileName = \"D:\\\\Rim\\\\react-app\\\\src\\\\components\\\\PaginateList.js\",\n    _s = $RefreshSig$();\n\nimport ReactPaginate from \"https://cdn.skypack.dev/react-paginate@7.1.3\";\nimport React, { useEffect, useState } from \"https://cdn.skypack.dev/react@17.0.1\";\nimport ReactDOM from \"https://cdn.skypack.dev/react-dom@17.0.1\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst items = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\n\nfunction Items({\n  currentItems\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"items\",\n    children: currentItems && currentItems.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Item #\", item]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Items;\nexport function PaginatedItems({\n  itemsPerPage\n}) {\n  _s();\n\n  // We start with an empty list of items.\n  const [currentItems, setCurrentItems] = useState(null);\n  const [pageCount, setPageCount] = useState(0); // Here we use item offsets; we could also use page offsets\n  // following the API or data you're working with.\n\n  const [itemOffset, setItemOffset] = useState(0);\n  useEffect(() => {\n    // Fetch items from another resources.\n    const endOffset = itemOffset + itemsPerPage;\n    console.log(`Loading items from ${itemOffset} to ${endOffset}`);\n    setCurrentItems(items.slice(itemOffset, endOffset));\n    setPageCount(Math.ceil(items.length / itemsPerPage));\n  }, [itemOffset, itemsPerPage]); // Invoke when user click to request another page.\n\n  const handlePageClick = event => {\n    const newOffset = event.selected * itemsPerPage % items.length;\n    console.log(`User requested page number ${event.selected}, which is offset ${newOffset}`);\n    setItemOffset(newOffset);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Items, {\n      currentItems: currentItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactPaginate, {\n      nextLabel: \"next >\",\n      onPageChange: handlePageClick,\n      pageRangeDisplayed: 5,\n      pageCount: pageCount,\n      previousLabel: \"< previous\",\n      pageClassName: \"page-item\",\n      pageLinkClassName: \"page-link\",\n      previousClassName: \"page-item\",\n      previousLinkClassName: \"page-link\",\n      nextClassName: \"page-item\",\n      nextLinkClassName: \"page-link\",\n      breakLabel: \"...\",\n      breakClassName: \"page-item\",\n      breakLinkClassName: \"page-link\",\n      containerClassName: \"pagination\",\n      activeClassName: \"active\",\n      renderOnZeroPageCount: null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n} // Add a <div id=\"container\"> to your HTML to see the componend rendered.\n\n_s(PaginatedItems, \"HTeX8cSP+G2jiDQZoJcFFLxPhRM=\");\n\n_c2 = PaginatedItems;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Items\");\n$RefreshReg$(_c2, \"PaginatedItems\");","map":{"version":3,"sources":["D:/Rim/react-app/src/components/PaginateList.js"],"names":["ReactPaginate","React","useEffect","useState","ReactDOM","items","Items","currentItems","map","item","PaginatedItems","itemsPerPage","setCurrentItems","pageCount","setPageCount","itemOffset","setItemOffset","endOffset","console","log","slice","Math","ceil","length","handlePageClick","event","newOffset","selected"],"mappings":"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","sourcesContent":["import ReactPaginate from \"https://cdn.skypack.dev/react-paginate@7.1.3\";\r\nimport React, {\r\n  useEffect,\r\n  useState\r\n} from \"https://cdn.skypack.dev/react@17.0.1\";\r\nimport ReactDOM from \"https://cdn.skypack.dev/react-dom@17.0.1\";\r\n\r\nconst items = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\r\n\r\nfunction Items({ currentItems }) {\r\n  return (\r\n    <div className=\"items\">\r\n    {currentItems && currentItems.map((item) => (\r\n      <div>\r\n        <h3>Item #{item}</h3>\r\n      </div>\r\n    ))}\r\n      </div>\r\n  );\r\n}\r\n\r\nexport function PaginatedItems({ itemsPerPage }) {\r\n  // We start with an empty list of items.\r\n  const [currentItems, setCurrentItems] = useState(null);\r\n  const [pageCount, setPageCount] = useState(0);\r\n  // Here we use item offsets; we could also use page offsets\r\n  // following the API or data you're working with.\r\n  const [itemOffset, setItemOffset] = useState(0);\r\n\r\n  useEffect(() => {\r\n    // Fetch items from another resources.\r\n    const endOffset = itemOffset + itemsPerPage;\r\n    console.log(`Loading items from ${itemOffset} to ${endOffset}`);\r\n    setCurrentItems(items.slice(itemOffset, endOffset));\r\n    setPageCount(Math.ceil(items.length / itemsPerPage));\r\n  }, [itemOffset, itemsPerPage]);\r\n\r\n  // Invoke when user click to request another page.\r\n  const handlePageClick = (event) => {\r\n    const newOffset = event.selected * itemsPerPage % items.length;\r\n    console.log(`User requested page number ${event.selected}, which is offset ${newOffset}`);\r\n    setItemOffset(newOffset);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Items currentItems={currentItems} />\r\n      <ReactPaginate\r\n        nextLabel=\"next >\"\r\n        onPageChange={handlePageClick}\r\n        pageRangeDisplayed={5}\r\n        pageCount={pageCount}\r\n        previousLabel=\"< previous\"\r\n        pageClassName=\"page-item\"\r\n        pageLinkClassName=\"page-link\"\r\n        previousClassName=\"page-item\"\r\n        previousLinkClassName=\"page-link\"\r\n        nextClassName=\"page-item\"\r\n        nextLinkClassName=\"page-link\"\r\n        breakLabel=\"...\"\r\n        breakClassName=\"page-item\"\r\n        breakLinkClassName=\"page-link\"\r\n        containerClassName=\"pagination\"\r\n        activeClassName=\"active\"\r\n        renderOnZeroPageCount={null}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\n// Add a <div id=\"container\"> to your HTML to see the componend rendered.\r\n"]},"metadata":{},"sourceType":"module"}