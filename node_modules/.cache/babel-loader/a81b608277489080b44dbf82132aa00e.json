{"ast":null,"code":"var _jsxFileName = \"D:\\\\Rim\\\\react-app\\\\src\\\\components\\\\UpdateProfile\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useEffect, useMemo } from \"react\";\nimport { Form, Card, Button, Alert, ProgressBar } from \"react-bootstrap\";\nimport { Link, useHistory, Prompt } from \"react-router-dom\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport { storage } from \"../../firebase/config\";\nimport { ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\nimport { v1 as uuidv1 } from \"uuid\"; // Create timestamp uuid: uuidv1()\n// Create random uuid: uuidv4()\n\nimport { useAppContext } from \"../../contexts/AppContext\";\nimport useFirestore from \"../hooks/useFirestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UpdateProfile = () => {\n  _s();\n\n  var _displayNameRef$curre, _emailRef$current, _passwordRef$current, _passwordConfirmRef$c;\n\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const passwordConfirmRef = useRef();\n  const displayNameRef = useRef();\n  const [error, setError] = useState(\"\");\n  const {\n    user,\n    updateUserEmail,\n    updateUserPassword,\n    updateUserProfile\n  } = useAuth();\n  const [isSucced, setIsSucced] = useState(false);\n  const history = useHistory();\n  const [isBlocking, setIsBlocking] = useState(false);\n  const [isPhotoUrlDisabled, setIsPhotoUrlDisabled] = useState(false);\n  const [fileUrl, setFileUrl] = useState(\"\");\n  const [imageFile, setImageFile] = useState();\n  const [urlUpload, setUrlUpload] = useState(\"\");\n  const [progress, setProgress] = useState();\n  const [showUpdateButton, setShowUpdateButton] = useState(false);\n  const [showUploadButton, setShowUploadButton] = useState(false);\n  const [showUploadUrlButton, setShowUploadUrlButton] = useState(false);\n  useEffect(() => {\n    if (user.displayName !== displayNameRef.current.value || fileUrl || emailRef.current.value !== user.email || passwordRef.current.value || passwordConfirmRef.current.value) {\n      setShowUpdateButton(true);\n    } else {\n      setShowUpdateButton(false);\n    } //eslint-disable-next-line\n\n  }, [fileUrl, (_displayNameRef$curre = displayNameRef.current) === null || _displayNameRef$curre === void 0 ? void 0 : _displayNameRef$curre.value, (_emailRef$current = emailRef.current) === null || _emailRef$current === void 0 ? void 0 : _emailRef$current.value, (_passwordRef$current = passwordRef.current) === null || _passwordRef$current === void 0 ? void 0 : _passwordRef$current.value, (_passwordConfirmRef$c = passwordConfirmRef.current) === null || _passwordConfirmRef$c === void 0 ? void 0 : _passwordConfirmRef$c.value]);\n  const {\n    updateDocument\n  } = useAppContext();\n  const condition = useMemo(() => {\n    return {\n      fieldName: \"email\",\n      operator: \"==\",\n      compareValue: user.email\n    };\n  }, [user.email]);\n  const userDocs = useFirestore(\"users\", condition);\n\n  const handleUpdateDocument = () => {\n    updateDocument(\"users\", userDocs[0].id, {\n      displayName: user.displayName,\n      email: user.email,\n      photoURL: user.photoURL,\n      uid: user.email\n    });\n  };\n\n  const hanldeUploadPhoto = file => {\n    const imagesRef = ref(storage, \"avatar/\" + file.name);\n    const metadata = {\n      contentType: \"image/jpeg\"\n    };\n    const uploadTask = uploadBytesResumable(imagesRef, file, metadata);\n    uploadTask.on(\"state_changed\", snapshot => {\n      const progress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n      setProgress(progress);\n    }, error => setError(error.message), async () => {\n      try {\n        const url = await getDownloadURL(imagesRef);\n        setFileUrl(url);\n        setShowUploadButton(false);\n      } catch (error) {\n        setError(error.message);\n      }\n    });\n  };\n\n  const handleInputChange = async e => {\n    if (e.target.files[0]) {\n      setIsPhotoUrlDisabled(true);\n      setShowUploadButton(true);\n      hanldeUploadPhoto(e.target.files[0]);\n    } else {\n      setIsPhotoUrlDisabled(false);\n    }\n  };\n\n  const handleInputURLChange = async e => {\n    if (e.target.value.length > 0) {\n      // Get Blob File from an URL\n      // let blob = await fetch(urlUpload).then((res) => res.blob());\n      // const { v1: uuidv1 } = require(\"uuid\");\n      // Get a File from an URL\n      const file = await fetch(e.target.value).then(res => res.blob()).then(blobRes => new File([blobRes], uuidv1())).catch(error => setError(error.message));\n      hanldeUploadPhoto(file);\n    }\n  }; //Update Profile\n\n\n  const handleUpdateProfileSubmit = e => {\n    e.preventDefault();\n    setIsBlocking(false);\n    setError(\"\");\n    setShowUpdateButton(false);\n\n    if (passwordConfirmRef.current.value !== passwordRef.current.value) {\n      return setError(\"Password does not match\");\n    }\n\n    const promises = [];\n\n    if (passwordRef.current.value) {\n      promises.push(updateUserPassword(passwordRef.current.value));\n    }\n\n    if (emailRef.current.value !== user.email) {\n      promises.push(updateUserEmail(emailRef.current.value));\n    }\n\n    if (fileUrl !== \"\") {\n      promises.push(updateUserProfile(displayNameRef.current.value, fileUrl));\n    } else {\n      promises.push(updateUserProfile(displayNameRef.current.value, user.profileURL));\n    }\n\n    Promise.all(promises).then(() => {\n      setIsSucced(true);\n      handleUpdateDocument();\n      setTimeout(() => history.push(\"/profile\"), 1000);\n    }).catch(error => {\n      const errMessage = error.message.replace(\"Firebase: \", \"\");\n      return setError(errMessage);\n    }).finally(() => {\n      setShowUpdateButton(true);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"d-flex flex-row justify-content-center align-items-center\",\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      style: {\n        maxWidth: \"400px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        as: \"h1\",\n        className: \"mb-4\",\n        children: \"Update Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Prompt, {\n        when: isBlocking,\n        message: \"Seem you are not finishing your works. Are you sure want to leave?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), isSucced && /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"success\",\n        className: \"text-center\",\n        style: {\n          fontWeight: \"600\",\n          fontSize: \"1.5rem\"\n        },\n        children: \"Update Successfull. Redirecting....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 19\n      }, this), progress && /*#__PURE__*/_jsxDEV(ProgressBar, {\n        animated: true,\n        now: progress,\n        label: `Loading...${progress}%`,\n        max: \"100\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleUpdateProfileSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            htmlFor: \"displayName\",\n            children: \"Display Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            id: \"displayName\",\n            type: \"text\",\n            ref: displayNameRef,\n            defaultValue: user === null || user === void 0 ? void 0 : user.displayName,\n            required: true,\n            onChange: e => {\n              setIsBlocking(e.target.value.length > 0);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            htmlFor: \"photo\",\n            children: \"Change Avatar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            id: \"photo\",\n            type: \"file\",\n            onChange: e => {\n              setIsBlocking(e.target.value.length > 0);\n              handleInputChange(e.target.files[0]);\n            },\n            accept: \".jpg, .jpeg, .png\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"my-3 text-center d-flex justify-content-center\",\n            children: /*#__PURE__*/_jsxDEV(Card.Img, {\n              variant: \"top\",\n              src: fileUrl ? fileUrl : user.photoURL,\n              alt: \"Avatar\",\n              style: {\n                width: \"75%\",\n                height: \"200px\",\n                borderRadius: \"10px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            htmlFor: \"URLphoto\",\n            children: \"URL of your photo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            id: \"URLphoto\",\n            type: \"text\",\n            onChange: e => {\n              setIsBlocking(e.target.value.length > 0);\n              handleInputURLChange(e);\n            },\n            disabled: isPhotoUrlDisabled,\n            placeholder: \"E.g: https://picsum.photos/50\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            htmlFor: \"email\",\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            id: \"email\",\n            type: \"email\",\n            ref: emailRef,\n            required: true,\n            defaultValue: user.email,\n            onChange: e => setIsBlocking(e.target.value.length > 0)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            htmlFor: \"password\",\n            children: \"New password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            id: \"password\",\n            type: \"password\",\n            ref: passwordRef,\n            placeholder: \"Leave it blank to keep your password\",\n            onChange: e => setIsBlocking(e.target.value.length > 0)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            htmlFor: \"passwordConfirm\",\n            children: \"Confirm New Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            id: \"passwordConfirm\",\n            type: \"password\",\n            ref: passwordConfirmRef,\n            placeholder: \"Leave it blank to keep your password\",\n            onChange: e => setIsBlocking(e.target.value.length > 0)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          disabled: !showUpdateButton,\n          type: \"submit\",\n          className: \"w-100 my-3\",\n          children: \"Update profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/profile\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UpdateProfile, \"ydOaYC3JtJySFqy/DzVZslP7qr8=\", false, function () {\n  return [useAuth, useHistory, useAppContext, useFirestore];\n});\n\n_c = UpdateProfile;\nexport default UpdateProfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateProfile\");","map":{"version":3,"sources":["D:/Rim/react-app/src/components/UpdateProfile/index.js"],"names":["React","useRef","useState","useEffect","useMemo","Form","Card","Button","Alert","ProgressBar","Link","useHistory","Prompt","useAuth","storage","ref","uploadBytesResumable","getDownloadURL","v1","uuidv1","useAppContext","useFirestore","UpdateProfile","emailRef","passwordRef","passwordConfirmRef","displayNameRef","error","setError","user","updateUserEmail","updateUserPassword","updateUserProfile","isSucced","setIsSucced","history","isBlocking","setIsBlocking","isPhotoUrlDisabled","setIsPhotoUrlDisabled","fileUrl","setFileUrl","imageFile","setImageFile","urlUpload","setUrlUpload","progress","setProgress","showUpdateButton","setShowUpdateButton","showUploadButton","setShowUploadButton","showUploadUrlButton","setShowUploadUrlButton","displayName","current","value","email","updateDocument","condition","fieldName","operator","compareValue","userDocs","handleUpdateDocument","id","photoURL","uid","hanldeUploadPhoto","file","imagesRef","name","metadata","contentType","uploadTask","on","snapshot","bytesTransferred","totalBytes","message","url","handleInputChange","e","target","files","handleInputURLChange","length","fetch","then","res","blob","blobRes","File","catch","handleUpdateProfileSubmit","preventDefault","promises","push","profileURL","Promise","all","setTimeout","errMessage","replace","finally","maxWidth","fontWeight","fontSize","width","height","borderRadius"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect, useMemo } from \"react\";\r\nimport { Form, Card, Button, Alert, ProgressBar } from \"react-bootstrap\";\r\nimport { Link, useHistory, Prompt } from \"react-router-dom\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport { storage } from \"../../firebase/config\";\r\nimport { ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\r\nimport { v1 as uuidv1 } from \"uuid\";\r\n// Create timestamp uuid: uuidv1()\r\n// Create random uuid: uuidv4()\r\nimport { useAppContext } from \"../../contexts/AppContext\";\r\nimport useFirestore from \"../hooks/useFirestore\";\r\n\r\nexport const UpdateProfile = () => {\r\n  const emailRef = useRef();\r\n  const passwordRef = useRef();\r\n  const passwordConfirmRef = useRef();\r\n  const displayNameRef = useRef();\r\n\r\n  const [error, setError] = useState(\"\");\r\n  const { user, updateUserEmail, updateUserPassword, updateUserProfile } =\r\n    useAuth();\r\n  const [isSucced, setIsSucced] = useState(false);\r\n  const history = useHistory();\r\n  const [isBlocking, setIsBlocking] = useState(false);\r\n  const [isPhotoUrlDisabled, setIsPhotoUrlDisabled] = useState(false);\r\n\r\n  const [fileUrl, setFileUrl] = useState(\"\");\r\n  const [imageFile, setImageFile] = useState();\r\n  const [urlUpload, setUrlUpload] = useState(\"\");\r\n  const [progress, setProgress] = useState();\r\n\r\n  const [showUpdateButton, setShowUpdateButton] = useState(false);\r\n  const [showUploadButton, setShowUploadButton] = useState(false);\r\n  const [showUploadUrlButton, setShowUploadUrlButton] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      user.displayName !== displayNameRef.current.value ||\r\n      fileUrl ||\r\n      emailRef.current.value !== user.email ||\r\n      passwordRef.current.value ||\r\n      passwordConfirmRef.current.value\r\n    ) {\r\n      setShowUpdateButton(true);\r\n    } else {\r\n      setShowUpdateButton(false);\r\n    }\r\n    //eslint-disable-next-line\r\n  }, [\r\n    fileUrl,\r\n    displayNameRef.current?.value,\r\n    emailRef.current?.value,\r\n    passwordRef.current?.value,\r\n    passwordConfirmRef.current?.value,\r\n  ]);\r\n\r\n  const { updateDocument } = useAppContext();\r\n  const condition = useMemo(() => {\r\n    return {\r\n      fieldName: \"email\",\r\n      operator: \"==\",\r\n      compareValue: user.email,\r\n    };\r\n  }, [user.email]);\r\n  const userDocs = useFirestore(\"users\", condition);\r\n  const handleUpdateDocument = () => {\r\n    updateDocument(\"users\", userDocs[0].id, {\r\n      displayName: user.displayName,\r\n      email: user.email,\r\n      photoURL: user.photoURL,\r\n      uid: user.email,\r\n    });\r\n  };\r\n\r\n  const hanldeUploadPhoto = (file) => {\r\n    const imagesRef = ref(storage, \"avatar/\" + file.name);\r\n    const metadata = {\r\n      contentType: \"image/jpeg\",\r\n    };\r\n    const uploadTask = uploadBytesResumable(imagesRef, file, metadata);\r\n\r\n    uploadTask.on(\r\n      \"state_changed\",\r\n      (snapshot) => {\r\n        const progress =\r\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n        setProgress(progress);\r\n      },\r\n      (error) => setError(error.message),\r\n      async () => {\r\n        try {\r\n          const url = await getDownloadURL(imagesRef);\r\n          setFileUrl(url);\r\n\r\n          setShowUploadButton(false);\r\n        } catch (error) {\r\n          setError(error.message);\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  const handleInputChange = async (e) => {\r\n    if (e.target.files[0]) {\r\n      setIsPhotoUrlDisabled(true);\r\n      setShowUploadButton(true);\r\n      hanldeUploadPhoto(e.target.files[0]);\r\n    } else {\r\n      setIsPhotoUrlDisabled(false);\r\n    }\r\n  };\r\n\r\n  const handleInputURLChange = async (e) => {\r\n    if (e.target.value.length > 0) {\r\n      // Get Blob File from an URL\r\n      // let blob = await fetch(urlUpload).then((res) => res.blob());\r\n\r\n      // const { v1: uuidv1 } = require(\"uuid\");\r\n      // Get a File from an URL\r\n      const file = await fetch(e.target.value)\r\n        .then((res) => res.blob())\r\n        .then((blobRes) => new File([blobRes], uuidv1()))\r\n        .catch((error) => setError(error.message));\r\n\r\n      hanldeUploadPhoto(file);\r\n    }\r\n  };\r\n\r\n  //Update Profile\r\n  const handleUpdateProfileSubmit = (e) => {\r\n    e.preventDefault();\r\n    setIsBlocking(false);\r\n    setError(\"\");\r\n    setShowUpdateButton(false);\r\n\r\n    if (passwordConfirmRef.current.value !== passwordRef.current.value) {\r\n      return setError(\"Password does not match\");\r\n    }\r\n\r\n    const promises = [];\r\n\r\n    if (passwordRef.current.value) {\r\n      promises.push(updateUserPassword(passwordRef.current.value));\r\n    }\r\n\r\n    if (emailRef.current.value !== user.email) {\r\n      promises.push(updateUserEmail(emailRef.current.value));\r\n    }\r\n\r\n    if (fileUrl !== \"\") {\r\n      promises.push(updateUserProfile(displayNameRef.current.value, fileUrl));\r\n    } else {\r\n      promises.push(\r\n        updateUserProfile(displayNameRef.current.value, user.profileURL)\r\n      );\r\n    }\r\n\r\n    Promise.all(promises)\r\n      .then(() => {\r\n        setIsSucced(true);\r\n        handleUpdateDocument();\r\n        setTimeout(() => history.push(\"/profile\"), 1000);\r\n      })\r\n      .catch((error) => {\r\n        const errMessage = error.message.replace(\"Firebase: \", \"\");\r\n        return setError(errMessage);\r\n      })\r\n      .finally(() => {\r\n        setShowUpdateButton(true);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Card className=\"d-flex flex-row justify-content-center align-items-center\">\r\n      <Card.Body style={{ maxWidth: \"400px\" }}>\r\n        <Card.Header as=\"h1\" className=\"mb-4\">\r\n          Update Profile\r\n        </Card.Header>\r\n\r\n        <Prompt\r\n          when={isBlocking}\r\n          message=\"Seem you are not finishing your works. Are you sure want to leave?\"\r\n        />\r\n\r\n        {isSucced && (\r\n          <Alert\r\n            variant=\"success\"\r\n            className=\"text-center\"\r\n            style={{ fontWeight: \"600\", fontSize: \"1.5rem\" }}\r\n          >\r\n            Update Successfull. Redirecting....\r\n          </Alert>\r\n        )}\r\n        {error && <Alert variant=\"danger\">{error}</Alert>}\r\n\r\n        {progress && (\r\n          <ProgressBar\r\n            animated\r\n            now={progress}\r\n            label={`Loading...${progress}%`}\r\n            max=\"100\"\r\n          />\r\n        )}\r\n\r\n        <Form onSubmit={handleUpdateProfileSubmit}>\r\n          <Form.Group>\r\n            <Form.Label htmlFor=\"displayName\">Display Name:</Form.Label>\r\n            <Form.Control\r\n              id=\"displayName\"\r\n              type=\"text\"\r\n              ref={displayNameRef}\r\n              defaultValue={user?.displayName}\r\n              required\r\n              onChange={(e) => {\r\n                setIsBlocking(e.target.value.length > 0);\r\n              }}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group>\r\n            <Form.Label htmlFor=\"photo\">Change Avatar</Form.Label>\r\n\r\n            <Form.Control\r\n              id=\"photo\"\r\n              type=\"file\"\r\n              onChange={(e) => {\r\n                setIsBlocking(e.target.value.length > 0);\r\n                handleInputChange(e.target.files[0]);\r\n              }}\r\n              accept=\".jpg, .jpeg, .png\"\r\n            ></Form.Control>\r\n\r\n            <div className=\"my-3 text-center d-flex justify-content-center\">\r\n              <Card.Img\r\n                variant=\"top\"\r\n                src={fileUrl ? fileUrl : user.photoURL}\r\n                alt=\"Avatar\"\r\n                style={{\r\n                  width: \"75%\",\r\n                  height: \"200px\",\r\n                  borderRadius: \"10px\",\r\n                }}\r\n              />\r\n            </div>\r\n          </Form.Group>\r\n\r\n          <Form.Group>\r\n            <Form.Label htmlFor=\"URLphoto\">URL of your photo</Form.Label>\r\n\r\n            <Form.Control\r\n              id=\"URLphoto\"\r\n              type=\"text\"\r\n              onChange={(e) => {\r\n                setIsBlocking(e.target.value.length > 0);\r\n                handleInputURLChange(e);\r\n              }}\r\n              disabled={isPhotoUrlDisabled}\r\n              placeholder=\"E.g: https://picsum.photos/50\"\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group>\r\n            <Form.Label htmlFor=\"email\">Email:</Form.Label>\r\n            <Form.Control\r\n              id=\"email\"\r\n              type=\"email\"\r\n              ref={emailRef}\r\n              required\r\n              defaultValue={user.email}\r\n              onChange={(e) => setIsBlocking(e.target.value.length > 0)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group>\r\n            <Form.Label htmlFor=\"password\">New password:</Form.Label>\r\n            <Form.Control\r\n              id=\"password\"\r\n              type=\"password\"\r\n              ref={passwordRef}\r\n              placeholder=\"Leave it blank to keep your password\"\r\n              onChange={(e) => setIsBlocking(e.target.value.length > 0)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group>\r\n            <Form.Label htmlFor=\"passwordConfirm\">\r\n              Confirm New Password:\r\n            </Form.Label>\r\n            <Form.Control\r\n              id=\"passwordConfirm\"\r\n              type=\"password\"\r\n              ref={passwordConfirmRef}\r\n              placeholder=\"Leave it blank to keep your password\"\r\n              onChange={(e) => setIsBlocking(e.target.value.length > 0)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Button\r\n            disabled={!showUpdateButton}\r\n            type=\"submit\"\r\n            className=\"w-100 my-3\"\r\n          >\r\n            Update profile\r\n          </Button>\r\n        </Form>\r\n        <div className=\"text-center\">\r\n          <Link to=\"/profile\">Cancel</Link>\r\n        </div>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default UpdateProfile;\r\n"]},"metadata":{},"sourceType":"module"}