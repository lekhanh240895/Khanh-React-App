{"ast":null,"code":"var _jsxFileName = \"D:\\\\Rim\\\\react-app\\\\src\\\\components\\\\Homepage\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { ProgressBar, Alert, Form, Button, Row, Col, Container, Image, Modal, Card } from \"react-bootstrap\";\nimport { storage } from \"../../firebase/config\";\nimport { ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport { FontAwesomeIcon } from \"@fortawesome/fontawesome-svg-core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Homepage() {\n  _s();\n\n  const [images, setImages] = useState([]);\n  const [urls, setUrls] = useState([]);\n  const [progress, setProgress] = useState();\n  const [error, setError] = useState();\n  const {\n    user\n  } = useAuth();\n  const [show, setShow] = useState(false);\n\n  const handleOpen = () => setShow(true);\n\n  const handleClose = () => setShow(false);\n\n  const handleInputChange = e => {\n    for (let i = 0; i < e.target.files.length; i++) {\n      setImages(prevState => [...prevState, e.target.files[i]]);\n    }\n  };\n\n  const handleUploadImages = () => {\n    const promises = [];\n    images.forEach(image => {\n      const imagesRef = ref(storage, user.email + \"/images/\" + image.name);\n      const metadata = {\n        contentType: \"image/jpeg\"\n      };\n      setProgress(true);\n      const uploadTask = uploadBytesResumable(imagesRef, image, metadata);\n      promises.push(uploadTask);\n      uploadTask.on(\"state_changed\", snapshot => {\n        const progress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n        setProgress(progress);\n      }, error => setError(error.message), async () => {\n        const url = await getDownloadURL(imagesRef);\n        setUrls(prevState => [...prevState, url]);\n      });\n    });\n    Promise.all(promises).then(() => {\n      setProgress(false);\n    }).catch(error => setError(error.message)).finally(() => {\n      setUrls([]);\n      setImages([]);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [error && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }, this), progress && /*#__PURE__*/_jsxDEV(ProgressBar, {\n      now: progress,\n      max: \"100\",\n      label: `Loading...${progress}%`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Homepage\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Body, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Add Images\", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: [\"fas\", \"images\"],\n            onClick: handleOpen\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: [\"fas\", \"\"],\n        onClick: handleOpen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        children: /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Add Images\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            multiple: true,\n            type: \"file\",\n            onChange: e => handleInputChange(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleUploadImages,\n            children: \"Upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: urls.map((url, index) => /*#__PURE__*/_jsxDEV(Col, {\n          xs: 6,\n          style: {},\n          children: /*#__PURE__*/_jsxDEV(Image, {\n            fluid: true,\n            src: url,\n            alt: url,\n            style: {\n              height: \"50vw\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this)\n        }, url + index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Homepage, \"eP9vy2FohaNePueoB4UnvIXGuOg=\", false, function () {\n  return [useAuth];\n});\n\n_c = Homepage;\n\nvar _c;\n\n$RefreshReg$(_c, \"Homepage\");","map":{"version":3,"sources":["D:/Rim/react-app/src/components/Homepage/index.js"],"names":["React","useState","ProgressBar","Alert","Form","Button","Row","Col","Container","Image","Modal","Card","storage","ref","uploadBytesResumable","getDownloadURL","useAuth","FontAwesomeIcon","Homepage","images","setImages","urls","setUrls","progress","setProgress","error","setError","user","show","setShow","handleOpen","handleClose","handleInputChange","e","i","target","files","length","prevState","handleUploadImages","promises","forEach","image","imagesRef","email","name","metadata","contentType","uploadTask","push","on","snapshot","bytesTransferred","totalBytes","message","url","Promise","all","then","catch","finally","map","index","height"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  ProgressBar,\r\n  Alert,\r\n  Form,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Container,\r\n  Image,\r\n  Modal,\r\n  Card,\r\n} from \"react-bootstrap\";\r\nimport { storage } from \"../../firebase/config\";\r\nimport { ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/fontawesome-svg-core\";\r\n\r\nexport default function Homepage() {\r\n  const [images, setImages] = useState([]);\r\n  const [urls, setUrls] = useState([]);\r\n  const [progress, setProgress] = useState();\r\n  const [error, setError] = useState();\r\n  const { user } = useAuth();\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleOpen = () => setShow(true);\r\n  const handleClose = () => setShow(false);\r\n\r\n  const handleInputChange = (e) => {\r\n    for (let i = 0; i < e.target.files.length; i++) {\r\n      setImages((prevState) => [...prevState, e.target.files[i]]);\r\n    }\r\n  };\r\n\r\n  const handleUploadImages = () => {\r\n    const promises = [];\r\n    images.forEach((image) => {\r\n      const imagesRef = ref(storage, user.email + \"/images/\" + image.name);\r\n      const metadata = {\r\n        contentType: \"image/jpeg\",\r\n      };\r\n      setProgress(true);\r\n      const uploadTask = uploadBytesResumable(imagesRef, image, metadata);\r\n      promises.push(uploadTask);\r\n\r\n      uploadTask.on(\r\n        \"state_changed\",\r\n        (snapshot) => {\r\n          const progress =\r\n            (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n          setProgress(progress);\r\n        },\r\n        (error) => setError(error.message),\r\n        async () => {\r\n          const url = await getDownloadURL(imagesRef);\r\n          setUrls((prevState) => [...prevState, url]);\r\n        }\r\n      );\r\n    });\r\n\r\n    Promise.all(promises)\r\n      .then(() => {\r\n        setProgress(false);\r\n      })\r\n      .catch((error) => setError(error.message))\r\n      .finally(() => {\r\n        setUrls([]);\r\n        setImages([]);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      {error && <Alert variant=\"danger\">{error}</Alert>}\r\n      {progress && (\r\n        <ProgressBar\r\n          now={progress}\r\n          max=\"100\"\r\n          label={`Loading...${progress}%`}\r\n        />\r\n      )}\r\n      <h1>Homepage</h1>\r\n\r\n      <Card>\r\n        <Card.Body></Card.Body>\r\n        <Card.Footer>\r\n          <span>\r\n            Add Images\r\n            <FontAwesomeIcon icon={[\"fas\", \"images\"]} onClick={handleOpen} />\r\n          </span>\r\n        </Card.Footer>\r\n      </Card>\r\n      <span>\r\n        <FontAwesomeIcon icon={[\"fas\", \"\"]} onClick={handleOpen} />\r\n      </span>\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Form>\r\n          <Form.Group>\r\n            <Form.Label>Add Images</Form.Label>\r\n            <Form.Control\r\n              multiple\r\n              type=\"file\"\r\n              onChange={(e) => handleInputChange(e)}\r\n            />\r\n            <Button onClick={handleUploadImages}>Upload</Button>\r\n          </Form.Group>\r\n        </Form>\r\n\r\n        <Row>\r\n          {urls.map((url, index) => (\r\n            <Col xs={6} key={url + index} style={{}}>\r\n              <Image fluid src={url} alt={url} style={{ height: \"50vw\" }} />\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      </Modal>\r\n    </Container>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}